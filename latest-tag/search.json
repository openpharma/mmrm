[{"path":"https://openpharma.github.io/mmrm/latest-tag/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing","title":"Contributing","text":"Thank interest contributing repo! contribution highly valued. Please go document guidance contribute.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/CONTRIBUTING.html","id":"programming-conventions","dir":"","previous_headings":"","what":"Programming conventions","title":"Contributing","text":"Please follow programming conventions ensure consistent programming style across package. Generally follow tidyverse style guide. specific conventions deviate explained .","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/CONTRIBUTING.html","id":"functions","dir":"","previous_headings":"Programming conventions","what":"Functions","title":"Contributing","text":"Function names explicit clear. Words separated underscore (snake_case). Functions starting h_ helper functions exported. Functions well documented using roxygen2 (even exported). Functions must unit tested (even exported).","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/CONTRIBUTING.html","id":"imports","dir":"","previous_headings":"Programming conventions","what":"Imports","title":"Contributing","text":"package mmrm, follow following convention package imports. DESCRIPTION, add package Imports. function imported can random function within package. Always use package::function style wherever need use function. Example: stats. DESCRIPTION, add package Imports. mmrm-package.R, use import import every function. Use functions directly without prefix. Example: checkmate.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/CONTRIBUTING.html","id":"comments","dir":"","previous_headings":"Programming conventions","what":"Comments","title":"Contributing","text":"Comments always follow sentence style. Comments minimal possible: Generally code variable names clear enough need comments. use needed explain “” “”.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/CONTRIBUTING.html","id":"documentation","dir":"","previous_headings":"Programming conventions","what":"Documentation","title":"Contributing","text":"functions must documented using roxygen2 chunks, including internal functions (see also ). Exported objects must lifecycle badge clarify maturity. Start \"experimental\" status consider upgrading \"stable\" interface stable several months. Use Title Style title documentation. Always include @description part least one sentence describing object. arguments use following convention: type argument parentheses, followed line break, followed lower case half-sentence ending full stop. references help pages use corresponding markdown syntax, e.g. [function()] reference functions. Exported objects must included _pkgdown.yml file populated pkgdown website. vignettes, directly reference help pages pkgdown web pages. Note includes exported objects. make look similar help page references, please also use function() style. mmrm_review_methods.Rmd large vignette precompute vignette make GitHub actions faster. Run script vignettes/precompile.R regenerate precomputed vignette subsequently update GitHub. every release need run . Please note need install package compile vignette efficiency better installation provide fair comparison.","code":"@param formula (`formula`)\\cr the model formula, see details."},{"path":"https://openpharma.github.io/mmrm/latest-tag/CONTRIBUTING.html","id":"github-conventions","dir":"","previous_headings":"","what":"Github conventions","title":"Contributing","text":"using GitHub collaborate, following conventions needed: going work issue, please assign . Branches associated GitHub issue linked issue id. name branch form: <issue_id>_<short_discription>. Please use clear commit messages. Please keep changes focused issue. independent changes, please separate another PR linking another issue. Functions well documented. Functions corresponding unit tests. Changes pass GitHub action checks. checklist corresponding issue completed. least one approval needed merge.","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/CONTRIBUTING.html","id":"development-environment-set-up","dir":"","previous_headings":"Contribution tips","what":"Development environment Set-up","title":"Contributing","text":"development mmrm package based latest R version C++ compilers. package dependencies recent versions CRAN. recommend working environment set way. Additionally, tools recommend install: RTools work Windows operating system. Alternatively can use docker separate operating system development system. GitKraken useful user interface git including visualization git commit graphs, file history, etc. lintr allow perform static code analysis. pre-commit Python module allows identify issues commit locally.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/CONTRIBUTING.html","id":"issue-labels","dir":"","previous_headings":"Contribution tips","what":"Issue labels","title":"Contributing","text":"issues categorized several labels: Please choose issue based interest, issue complexity, priority.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/CONTRIBUTING.html","id":"add-new-unit-tests","dir":"","previous_headings":"Contribution tips","what":"Add new unit tests","title":"Contributing","text":"add new unit test, need first identify test scope. test fit scope existing tests? , please modify existing test files tests/testthat/ folder src/ folder, depending whether code tested R C++. Otherwise please create new test file, name prefix “test-”. test case, use following structure: purpose test clearly stated first. test body part, conduct tests, e.g. use expect_identical check consistency, expect_error catch error messages, etc. test body follow implementation logic package , otherwise may miss mistakes implementation.","code":"test_that(\"function_name does something as expected\", {   result <- function_name(input)   expected <- hardcoded_result   expect_identical(result, expected) })"},{"path":"https://openpharma.github.io/mmrm/latest-tag/CONTRIBUTING.html","id":"add-integration-tests","dir":"","previous_headings":"Contribution tips","what":"Add integration tests","title":"Contributing","text":"Integration tests compare results SAS R assures quality code. add integration test, need following: Use SAS run appropriate mmrm model proc mixed, using fev_data. Save results .txt format design/SAS/ folder. Decide key outputs needed comparison. Add unit test verifying R implementation model results (conversion may needed).","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/CONTRIBUTING.html","id":"get-started-with-c","dir":"","previous_headings":"Contribution tips","what":"Get started with C++","title":"Contributing","text":"experience C++, totally fine: TMB provided us many high-level functionalities similar R. list important things need go begin C++ programming. Semicolons. C++ use semicolons terminate statement. R, can use semicolons line breaks , C++, need semicolons line breaks. int = 1; works, declare int define 1. = 1; fails, declared yet. int ; = 1; works, declared defined. int = 1, j = 2; works, j int. R, (TRUE) { = '123' }; print() legal. C++, (1) {string = '123'}; std::stdout << << std::endl; illegal, object terminated already. C++, string ; (1) {= '123'}; std::stdout << << std::endl; legal, declared prior statement. Template special function works generic argument type. imagine single function work arguments arbitrary type, template functions make possible separation function logic argument declaration. way can use template functions avoid need replicate whole code type. points mind, ready go.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/CONTRIBUTING.html","id":"get-started-with-tmb","dir":"","previous_headings":"Contribution tips","what":"Get started with TMB","title":"Contributing","text":"mmrm including latent variables Laplace approximation aspect TMB used. use automatic differentiation part TMB. detailed documentation TMB, visit TMB reference. One important feature TMB R style matrix/array calculations. important mainly use part conduct calculations. See matrix_arrays.cpp examples.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/CONTRIBUTING.html","id":"add-a-new-covariance-structure","dir":"","previous_headings":"Contribution tips","what":"Add a new covariance structure","title":"Contributing","text":"add new covariance structure, need following: Understand covariance structure add appropriate documentation covariance structure. Create draft pull request invite discussion team members. Implement covariance structure C++ side corresponding R interface. Add unit tests make sure new covariance structure working expected. Add integration tests design/SAS/ folder make sure SAS R produce similar results (within tolerance).","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/CONTRIBUTING.html","id":"add-additional-data","dir":"","previous_headings":"Contribution tips","what":"Add additional data","title":"Contributing","text":"add additional data mmrm, please follow next steps: Make sure data needed. Document data R/data.R. Use save create rda data containing dataset. function usethis::use_data can also helpful.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/CONTRIBUTING.html","id":"communications-within-team","dir":"","previous_headings":"","what":"Communications within team","title":"Contributing","text":"several communication channels, please use appropriate ones.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/CONTRIBUTING.html","id":"github","dir":"","previous_headings":"Communications within team","what":"GitHub","title":"Contributing","text":"GitHub issues pull requests implementations discussed reviewed. Feature requests, bugs, enhancements, technical implementations can discussed . ideas needs documented, better GitHub.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/CONTRIBUTING.html","id":"slack","dir":"","previous_headings":"Communications within team","what":"Slack","title":"Contributing","text":"Slack messaging tool mmrm channel rinpharma space. can put anything slack channel, e.g., completed issue waiting review, questions don’t want wait next stand-meeting. join slack channel, please make sure slack account, send email address team member.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/CONTRIBUTING.html","id":"stand-up-meetings","dir":"","previous_headings":"Communications within team","what":"Stand-up meetings","title":"Contributing","text":"stand-meetings currently three times week. purpose stand-meetings team members discuss current work progress raise issue/questions team discussion needed. don’t need join three meetings.","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/algorithm.html","id":"model-definition","dir":"Articles","previous_headings":"","what":"Model definition","title":"Model Fitting Algorithm","text":"mixed model repeated measures (MMRM) definition using package following. Let \\(= 1, \\dotsc, n\\) denote subjects observe multiple observations \\(j = 1, \\dotsc, m_i\\) total \\(m_i\\) time points \\(t_{ij} \\\\{t_1, \\dotsc, t_m\\}\\). Note number time points specific subject, \\(m_i\\), can smaller \\(m\\), subset possible \\(m\\) time points observed.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/algorithm.html","id":"linear-model","dir":"Articles","previous_headings":"Model definition","what":"Linear model","title":"Model Fitting Algorithm","text":"subject \\(\\) observe vector \\[ Y_i = (y_{i1}, \\dotsc, y_{im_i})^\\top \\\\mathbb{R}^{m_i} \\] given design matrix \\[ X_i \\\\mathbb{R}^{m_i \\times p} \\] corresponding coefficient vector \\(\\beta \\\\mathbb{R}^{p}\\) assume observations multivariate normal distributed: \\[ Y_i \\sim N(X_i\\beta, \\Sigma_i) \\] covariance matrix \\(\\Sigma_i \\\\mathbb{R}^{m_i \\times m_i}\\) derived subsetting overall covariance matrix \\(\\Sigma \\\\mathbb{R}^{m \\times m}\\) appropriately \\[ \\Sigma_i = G_i^{-1/2} S_i^\\top \\Sigma S_i G_i^{-1/2} \\] subsetting matrix \\(S_i \\\\{0, 1\\}^{m \\times m_i}\\) contains \\(m_i\\) columns contains single 1 indicating overall time point matching \\(t_{ij}\\). row contains single 1 can also contain 0 time point observed. example, assume subject observed time points \\(1, 3, 4\\) total \\(5\\) subsetting matrix \\[ S_i = \\begin{pmatrix} 1 & 0 & 0 \\\\ 0 & 0 & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 1 \\\\ 0 & 0 & 0 \\end{pmatrix}. \\] \\(G_i \\\\mathbb{R}_{\\gt 0}^{m_i \\times m_i}\\) diagonal weight matrix, identity matrix weights specified. Note follows well known property multivariate normal distribution linear combinations random vector multivariate normal distribution correspondingly modified mean vector covariance matrix. Conditional design matrices \\(X_i\\), coefficient vector \\(\\beta\\) covariance matrix \\(\\Sigma\\) assume observations independent subjects. can write linear model subjects together \\[ Y = X\\beta + \\epsilon \\] \\(Y \\\\mathbb{R}^N\\) combines subject specific observations vectors \\(Y_i\\) total \\(N = \\sum_{= 1}^{n}{m_i}\\) observations, \\(X \\\\mathbb{R}^{N \\times p}\\) combines subject specific design matrices \\(\\epsilon \\\\mathbb{R}^N\\) multivariate normal distribution \\[ \\epsilon \\sim N(0, \\Omega) \\] \\(\\Omega \\\\mathbb{R}^{N \\times N}\\) block-diagonal containing subject specific \\(\\Sigma_i\\) covariance matrices diagonal 0 remaining entries.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/algorithm.html","id":"covariance-matrix-model","dir":"Articles","previous_headings":"Model definition","what":"Covariance matrix model","title":"Model Fitting Algorithm","text":"symmetric positive definite covariance matrix \\[ \\Sigma = \\begin{pmatrix} \\sigma_1^2 & \\sigma_{12} & \\dots & \\dots & \\sigma_{1m} \\\\ \\sigma_{21} & \\sigma_2^2 & \\sigma_{23} & \\dots & \\sigma_{2m}\\\\ \\vdots & & \\ddots & & \\vdots \\\\ \\vdots & & & \\ddots & \\vdots \\\\ \\sigma_{m1} & \\dots & \\dots & \\sigma_{m,m-1} & \\sigma_m^2 \\end{pmatrix} \\] parametrized vector variance parameters \\(\\theta = (\\theta_1, \\dotsc, \\theta_k)^\\top\\). many different choices model covariance matrix correspondingly \\(\\theta\\) different interpretations. Since covariance matrix unique Cholesky factorization \\(\\Sigma = LL^\\top\\) \\(L\\) lower triangular Cholesky factor, going use .","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/algorithm.html","id":"unstructured-covariance-matrix","dir":"Articles","previous_headings":"Model definition > Covariance matrix model","what":"Unstructured covariance matrix","title":"Model Fitting Algorithm","text":"general model uses saturated parametrization, .e. covariance matrix represented form. use \\[ L = D\\tilde{L} \\] \\(D\\) diagonal matrix standard deviations, \\(\\tilde{L}\\) unit diagonal lower triangular matrix. Hence start \\(\\theta\\) natural logarithm standard deviations, followed row-wise filled entries \\(\\tilde{L} = \\{l_{ij}\\}_{1 \\leq j < \\leq m}\\): \\[ \\theta = (   \\log(\\sigma_1), \\dotsc, \\log(\\sigma_m),   l_{21}, l_{31}, l_{32}, \\dotsc, l_{m,m-1} )^\\top \\] \\(\\theta\\) \\(k = m(m+1)/2\\) entries. example \\(m = 4\\) time points need \\(k = 10\\) variance parameters model unstructured covariance matrix. covariance matrix choices explained covariance structures vignette.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/algorithm.html","id":"grouped-covariance-matrix","dir":"Articles","previous_headings":"Model definition > Covariance matrix model","what":"Grouped covariance matrix","title":"Model Fitting Algorithm","text":"cases, like estimate unique covariance matrices across groups, keeping covariance structure (unstructured, ante-dependence, Toeplitz, etc.) consistent across groups. Following notations previous section, subject \\(\\) group \\(g()\\), \\[ \\Sigma_{} = S_i^\\top \\Sigma_{g()} S_i \\] \\(g()\\) group subject \\(\\) \\(\\Sigma_{g()}\\) covariance matrix group \\(g()\\). parametrization \\(\\theta\\) similar non-grouped \\(\\theta\\). Assume total number \\(G\\) groups, length \\(\\theta\\) multiplied \\(G\\), part, \\(\\theta\\) parametrized fashion. example, unstructured covariance matrix, \\(\\theta\\) \\(k = G * m(m+1)/2\\) entries.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/algorithm.html","id":"spatial-covariance-matrix","dir":"Articles","previous_headings":"Model definition > Covariance matrix model","what":"Spatial covariance matrix","title":"Model Fitting Algorithm","text":"spatial covariance structure can model individual-specific visit times. individual’s covariance matrix function population-level covariance parameters (specific chosen structure) individual’s visit times. Following notations previous section, subject \\(\\) total number \\(m_i\\) visits, \\[ \\sigma_{ijk} = \\sigma * f(dist(\\boldsymbol{c}_{ij}, \\boldsymbol{c}_{ik})) \\] \\((m_{ij}, m_{ik})\\) element \\(\\Sigma_{}\\) function distance \\(m_{ij}\\) \\(m_{ik}\\) visit occurring \\(t_{m_{ij}}\\) \\(t_{m_{ik}}\\). \\(t_{m_{ij}}\\) coordinate(time) \\(m_{ij}\\) visit subject \\(\\). \\(\\sigma\\) constant variance. Usually use Euclidean distance. Currently spatial exponential covariance structure implemented. coordinates multiple dimensions, Euclidean distance used without transformations.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/algorithm.html","id":"maximum-likelihood-estimation","dir":"Articles","previous_headings":"","what":"Maximum Likelihood Estimation","title":"Model Fitting Algorithm","text":"Given general linear model , conditional \\(\\theta\\), know likelihood \\(\\beta\\) \\[ L(\\beta; Y) = (2\\pi)^{-N/2} \\det(\\Omega)^{-1/2} \\exp\\left\\{ - \\frac{1}{2}(Y - X\\beta)^\\top \\Omega^{-1} (Y - X\\beta) \\right\\} \\] also know maximum likelihood (ML) estimate \\(\\beta\\) weighted least squares estimator \\(\\hat{\\beta}\\) solving estimating equation \\[ (X^\\top \\Omega^{-1} X) \\hat{\\beta} = X^\\top \\Omega^{-1} Y. \\] Plugging \\(\\hat{\\beta}\\) likelihood gives value function want maximize regards variance parameters \\(\\theta\\). Practically done negative log scale: \\[ f(\\theta; \\hat{\\beta}) = - \\log L(\\hat{\\beta}; Y) = \\frac{N}{2} \\log(2\\pi) +   \\frac{1}{2}\\log\\det(\\Omega) +   \\frac{1}{2} (Y - X\\hat{\\beta})^\\top \\Omega^{-1} (Y - X\\hat{\\beta}) \\] objective function \\(f(\\theta; \\hat{\\beta})\\) minimized numerical optimizers utilizing quasi-Newton-Raphson algorithms based gradient (additionally Hessian, see optimizer). use Template Model Builder package TMB helpful TMB allows perform calculations C++, maximizes speed. TMB performs automatic differentiation objective function regards variance parameters \\(\\theta\\), gradient Hessian approximated numerically coded explicitly.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/algorithm.html","id":"weighted-least-squares-estimator","dir":"Articles","previous_headings":"Maximum Likelihood Estimation","what":"Weighted least squares estimator","title":"Model Fitting Algorithm","text":"Let’s look details calculating log likelihood , including particular weighted least squares (WLS) estimator \\(\\hat{\\beta}\\). Starting point linear equation observation left right hand sides can decomposed subject-specific terms given block-diagonal structure \\(\\Omega\\) therefore inverse, \\(W = \\Omega^{-1}\\): \\[ X^\\top \\Omega^{-1} X = X^\\top W X =  \\sum_{=1}^{n} X_i^\\top W_i X_i \\] similarly \\[ X^\\top \\Omega^{-1} Y = X^\\top W Y =  \\sum_{=1}^{n} X_i^\\top W_i Y_i \\] \\(W_i = \\Sigma_i^{-1}\\) weight matrix subject \\(\\), inverse covariance matrix. Instead calculating inverse explicitly, always better numerically work Cholesky factorization solve linear equations instead. calculate factorization \\(\\Sigma_i = L_i L_i^\\top\\). Note case \\(m_i = m\\), .e. subject time points observed, \\(\\Sigma_i = \\Sigma\\) don’t need calculate already \\(\\Sigma = L L^\\top\\), .e. \\(L_i = L\\). Unfortunately, \\(m_i < m\\), need calculate explicitly, way update Cholesky factorization subset operation \\(\\Sigma_i = S_i^\\top \\Sigma S_i\\) . Given \\(L_i\\), solve \\[ L_i \\tilde{X}_i = X_i \\] \\(\\tilde{X}_i\\) efficient forward-solve, similarly solve \\[ L_i \\tilde{Y}_i = Y_i \\] \\(\\tilde{Y}_i\\). Therefore \\[ X_i^\\top W_i X_i = \\tilde{X}_i^\\top \\tilde{X}_i \\] \\[ X_i^\\top W_i Y_i = \\tilde{X}_i^\\top \\tilde{Y}_i \\] can thereby calculate left right hand sides WLS estimating equation. solve equation robust Cholesky decomposition pivoting. advantage can reuse decomposition calculating covariance matrix \\(\\hat{\\beta}\\), .e. \\(K = (X^\\top W X)^{-1}\\), supplying identity matrix alternative right hand side.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/algorithm.html","id":"determinant-and-quadratic-form","dir":"Articles","previous_headings":"Maximum Likelihood Estimation","what":"Determinant and quadratic form","title":"Model Fitting Algorithm","text":"objective function also need log determinant \\(\\Omega\\): \\[\\begin{align} \\frac{1}{2}\\log\\det(\\Omega)   &= \\frac{1}{2}\\log\\det\\{\\text{blockdiag} \\Sigma_1, \\dotsc, \\Sigma_n\\} \\\\   &= \\frac{1}{2}\\log\\prod_{=1}^{n}\\det{\\Sigma_i} \\\\   &= \\frac{1}{2}\\sum_{=1}^{n}\\log\\det{L_i L_i^\\top} \\\\   &= \\sum_{=1}^{n}\\log\\det{L_i} \\\\   &= \\sum_{=1}^{n}\\sum_{j=1}^{m_i}\\log(l_{, jj}) \\end{align}\\] \\(l_{,jj}\\) diagonal entries factor \\(L_i\\) used determinant block diagonal matrix product determinants blocks, determinant product matrices product determinants, determinant transposed matrix original one, determinant triangular matrix product diagonal. finally, quadratic form can reuse weighted response vector design matrix: \\[ (Y - X\\hat{\\beta})^\\top \\Omega^{-1} (Y - X\\hat{\\beta}) = \\sum_{=1}^{n} (Y_i - X_i\\hat{\\beta})^\\top W_i (Y_i - X_i\\hat{\\beta}) = \\sum_{=1}^{n} (\\tilde{Y}_i - \\tilde{X}_i\\hat{\\beta})^\\top (\\tilde{Y}_i - \\tilde{X}_i\\hat{\\beta}) \\]","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/algorithm.html","id":"restricted-maximum-likelihood-estimation","dir":"Articles","previous_headings":"","what":"Restricted Maximum Likelihood Estimation","title":"Model Fitting Algorithm","text":"restricted ML estimation (REML) paradigm first obtain marginal likelihood variance parameters \\(\\theta\\) integrating remaining parameters \\(\\beta\\) likelihood. : \\[ L(\\theta; Y) = \\int_{\\mathbb{R}^p} L(\\beta; Y) d\\beta = (2\\pi)^{-N/2} \\det(\\Omega)^{-1/2} \\int_{\\mathbb{R}^p} \\exp\\left\\{ - \\frac{1}{2}(Y - X\\beta)^\\top \\Omega^{-1} (Y - X\\beta) \\right\\} d\\beta \\] note \\(\\det(\\Omega)\\) depends \\(\\theta\\) \\(\\beta\\) can therefore pulled integral.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/algorithm.html","id":"completing-the-square","dir":"Articles","previous_headings":"Restricted Maximum Likelihood Estimation","what":"Completing the square","title":"Model Fitting Algorithm","text":"Let’s focus now quadratic form exponential function complete square regards \\(\\beta\\) obtain kernel multivariate normal distribution: \\[\\begin{align} (Y - X\\beta)^\\top \\Omega^{-1} (Y - X\\beta) &= Y^\\top \\Omega^{-1} Y + \\beta^\\top X^\\top \\Omega^{-1} X \\beta - 2 \\beta^\\top X^\\top \\Omega^{-1} Y \\\\ &= Y^\\top \\Omega^{-1} Y + \\beta^\\top K^{-1} \\beta - 2 \\beta^\\top K^{-1}K X^\\top \\Omega^{-1} Y \\\\ &= Y^\\top \\Omega^{-1} Y + \\beta^\\top K^{-1} \\beta - 2 \\beta^\\top K^{-1} \\hat{\\beta} \\\\ &= Y^\\top \\Omega^{-1} Y + \\beta^\\top K^{-1} \\beta - 2 \\beta^\\top K^{-1} \\hat{\\beta} + \\hat{\\beta}^{-1} K^{-1} \\hat{\\beta} - \\hat{\\beta}^{-1} K^{-1} \\hat{\\beta} \\\\ &= Y^\\top \\Omega^{-1} Y - \\hat{\\beta}^{-1} K^{-1} \\hat{\\beta} + (\\beta - \\hat{\\beta})^\\top K^{-1} (\\beta - \\hat{\\beta}) \\end{align}\\] used \\(K = (X^\\top W X)^{-1}\\) early identify \\(K\\) covariance matrix kernel multivariate normal \\(\\beta\\) later \\(\\hat{\\beta}\\) mean vector. , know integral multivariate normal kernel inverse normalizing constants, thus \\[ \\int_{\\mathbb{R}^p} \\exp\\left\\{ - \\frac{1}{2}(Y - X\\beta)^\\top \\Omega^{-1} (Y - X\\beta) \\right\\} d\\beta = \\exp\\left\\{ -\\frac{1}{2} Y^\\top \\Omega^{-1} Y + \\frac{1}{2} \\hat{\\beta}^{-1} K^{-1} \\hat{\\beta} \\right\\} (2\\pi)^{p/2} \\det{K}^{1/2} \\] integrated likelihood \\[ L(\\theta; Y) = (2\\pi)^{-(N-p)/2} \\det(\\Omega)^{-1/2} \\det{K}^{1/2} \\exp\\left\\{ -\\frac{1}{2} Y^\\top \\Omega^{-1} Y + \\frac{1}{2} \\hat{\\beta}^\\top K^{-1} \\hat{\\beta} \\right\\}. \\]","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/algorithm.html","id":"objective-function","dir":"Articles","previous_headings":"Restricted Maximum Likelihood Estimation","what":"Objective function","title":"Model Fitting Algorithm","text":"objective function want minimize regards variance parameters \\(\\theta\\) take negative natural logarithm \\[ f(\\theta) = -\\log L(\\theta;Y) = \\frac{N-p}{2} \\log(2\\pi) + \\frac{1}{2}\\log\\det(\\Omega) - \\frac{1}{2}\\log\\det(K) + \\frac{1}{2} \\tilde{Y}^\\top \\tilde{Y} - \\frac{1}{2} \\hat{\\beta}^\\top \\tilde{X}^\\top \\tilde{X} \\hat{\\beta} \\] interesting see computation REML objective function requiring additional calculations compared ML objective function. particular, since already matrix decomposition \\(K^{-1}\\), easy obtain determinant . Also use numeric optimization \\(f(\\theta)\\) TMB library supports efficiently automatic differentiation.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/between_within.html","id":"general-definition","dir":"Articles","previous_headings":"","what":"General definition","title":"Between-Within","text":"Using method, DF determined grouping level term estimated. Generally, assuming \\(G\\) levels grouping: \\(DF_g=N_g-(N_{g-1}+p_g), g=1, ..., G+1\\) \\(N_g\\) number groups \\(g\\)-th grouping level \\(p_g\\) number parameters estimated level. \\(N_0=1\\) model includes intercept term \\(N_0=0\\) otherwise. Note however DF intercept term (included) calculated \\(G+1\\) level, .e. intercept use \\(DF_{G+1}\\) degrees freedom. note general contrasts \\(C\\beta\\) considered literature far. therefore use pragmatic approach define general contrast matrix \\(C\\) take minimum DF across involved coefficients DF.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/between_within.html","id":"mmrm-special-case","dir":"Articles","previous_headings":"","what":"MMRM special case","title":"Between-Within","text":"case MMRM (fixed effect terms), single grouping level (subject), \\(G=1\\). means 3 potential “levels” parameters (Gałecki Burzykowski (2013)): use \\(DF_2\\) degrees freedom defined . “parameters”. corresponding degrees freedom \\(DF_1 = N_1 - (N_0 + p_1)\\). words can read : “” DF = “number subjects” - (“1 intercept otherwise 0” + “number parameters”). “within parameters”. corresponding degrees freedom \\(DF_2 = N_2 - (N_1 + p_2)\\). words can read : “Within” DF = “number observations” - (“number subjects” + “number within parameters”).","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/between_within.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Between-Within","text":"Let’s look concrete example “-within” degrees freedom method gives results: Let’s try calculate degrees freedom manually now. fev_data 197 subjects least one non-missing FEV1 observation, 537 non-missing observations total. Therefore obtain following numbers groups \\(N_g\\) levels \\(g=1,2\\): \\(N_1 = 197\\) \\(N_2 = 537\\) note \\(N_0 = 1\\) use intercept term. Now let’s look design matrix: Leaving intercept term aside, therefore following number parameters corresponding effects: RACE: 2 SEX: 1 ARMCD: 1 AVISIT: 3 ARMCD:AVISIT: 3 model , RACE, SEX ARMCD -subjects effects belong level 1; vary within subject across repeated observations. hand, AVISIT within-subject effect; represents study visit, naturally value changes repeated observations subject. Similarly, interaction ARMCD AVISIT also belongs level 2. Therefore obtain following numbers parameters \\(p_g\\) levels \\(g=1,2\\): \\(p_1 = 2 + 1 + 1 = 4\\) \\(p_2 = 3 + 3 = 6\\) obtain therefore degrees freedom \\(DF_g\\) levels \\(g=1,2\\): \\(DF_1 = N_1 - (N_0 + p_1) = 197 - (1 + 4) = 192\\) \\(DF_2 = N_2 - (N_1 + p_2) = 537 - (197 + 6) = 334\\) can finally see degrees freedom exactly displayed summary table .","code":"fit <- mmrm(   formula = FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data,   control = mmrm_control(method = \"Between-Within\") ) summary(fit) #> mmrm fit #>  #> Formula:     FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID) #> Data:        fev_data (used 537 observations from 197 subjects with maximum 4  #> timepoints) #> Covariance:  unstructured (10 variance parameters) #> Method:      Between-Within #> Vcov Method: Asymptotic #> Inference:   REML #>  #> Model selection criteria: #>      AIC      BIC   logLik deviance  #>   3406.4   3439.3  -1693.2   3386.4  #>  #> Coefficients:  #>                                Estimate Std. Error        df t value Pr(>|t|) #> (Intercept)                    30.77748    0.88656 334.00000  34.715  < 2e-16 #> RACEBlack or African American   1.53050    0.62448 192.00000   2.451 0.015147 #> RACEWhite                       5.64357    0.66561 192.00000   8.479 5.98e-15 #> SEXFemale                       0.32606    0.53195 192.00000   0.613 0.540631 #> ARMCDTRT                        3.77423    1.07415 192.00000   3.514 0.000551 #> AVISITVIS2                      4.83959    0.80172 334.00000   6.037 4.19e-09 #> AVISITVIS3                     10.34211    0.82269 334.00000  12.571  < 2e-16 #> AVISITVIS4                     15.05390    1.31281 334.00000  11.467  < 2e-16 #> ARMCDTRT:AVISITVIS2            -0.04193    1.12932 334.00000  -0.037 0.970407 #> ARMCDTRT:AVISITVIS3            -0.69369    1.18765 334.00000  -0.584 0.559558 #> ARMCDTRT:AVISITVIS4             0.62423    1.85085 334.00000   0.337 0.736129 #>                                   #> (Intercept)                   *** #> RACEBlack or African American *   #> RACEWhite                     *** #> SEXFemale                         #> ARMCDTRT                      *** #> AVISITVIS2                    *** #> AVISITVIS3                    *** #> AVISITVIS4                    *** #> ARMCDTRT:AVISITVIS2               #> ARMCDTRT:AVISITVIS3               #> ARMCDTRT:AVISITVIS4               #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Covariance estimate: #>         VIS1    VIS2    VIS3    VIS4 #> VIS1 40.5537 14.3960  4.9747 13.3867 #> VIS2 14.3960 26.5715  2.7855  7.4745 #> VIS3  4.9747  2.7855 14.8979  0.9082 #> VIS4 13.3867  7.4745  0.9082 95.5568 head(model.matrix(fit), 1) #>   (Intercept) RACEBlack or African American RACEWhite SEXFemale ARMCDTRT #> 2           1                             1         0         1        1 #>   AVISITVIS2 AVISITVIS3 AVISITVIS4 ARMCDTRT:AVISITVIS2 ARMCDTRT:AVISITVIS3 #> 2          1          0          0                   1                   0 #>   ARMCDTRT:AVISITVIS4 #> 2                   0"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/between_within.html","id":"differences-compared-to-sas","dir":"Articles","previous_headings":"","what":"Differences compared to SAS","title":"Between-Within","text":"implementation described identical SAS. Differences include: SAS, using unstructured covariance matrix, effects assigned -subjects degrees freedom. SAS, within-subjects degrees freedom affected number subjects effect takes different values. SAS, multiple within-subject effects containing classification variables, within-subject degrees freedom partitioned components corresponding subject--effect interactions. SAS, final effect list CONTRAST/ESTIMATE statement used define DF general contrasts. Code contributions adding SAS version -within degrees freedom mmrm package welcome!","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/coef_vcov.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Coefficients Covariance Matrix Adjustment","text":"estimate covariance matrix coefficients, many ways. mmrm package, implemented asymptotic, empirical, Jackknife Kenward-Roger methods. simplicity, following derivation unweighted mmrm. weighted mmrm, can follow details weighted least square estimator.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/coef_vcov.html","id":"asymptotic-covariance","dir":"Articles","previous_headings":"Introduction","what":"Asymptotic Covariance","title":"Coefficients Covariance Matrix Adjustment","text":"Asymptotic covariance derived based estimate \\(\\beta\\). Following definition details model fitting, \\[   \\hat\\beta = (X^\\top W X)^{-1} X^\\top W Y \\] \\[   cov(\\hat\\beta) = (X^\\top W X)^{-1} X^\\top W cov(\\epsilon) W X (X^\\top W X)^{-1} = (X^\\top W X)^{-1} \\] \\(W\\) block diagonal matrix inverse covariance matrix \\(\\epsilon\\).","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/coef_vcov.html","id":"empirical-covariance","dir":"Articles","previous_headings":"Introduction","what":"Empirical Covariance","title":"Coefficients Covariance Matrix Adjustment","text":"Empirical covariance, also known robust sandwich estimator, “CR0”, derived replacing covariance matrix \\(\\epsilon\\) observed covariance matrix. \\[   cov(\\hat\\beta) = (X^\\top W X)^{-1}(\\sum_{}{X_i^\\top W_i \\hat\\epsilon_i\\hat\\epsilon_i^\\top W_i X_i})(X^\\top W X)^{-1}   = (X^\\top W X)^{-1}(\\sum_{}{X_i^\\top L_{} L_{}^\\top \\hat\\epsilon_i\\hat\\epsilon_i^\\top L_{} L_{}^\\top X_i})(X^\\top W X)^{-1} \\] \\(W_i\\) block diagonal part subject \\(\\) \\(W\\) matrix, \\(\\hat\\epsilon_i\\) observed residuals subject , \\(L_i\\) Cholesky factor \\(\\Sigma_i^{-1}\\) (\\(W_i = L_i L_i^\\top\\)). See detailed explanation formulas Weighted Least Square Empirical Covariance vignette.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/coef_vcov.html","id":"jackknife-covariance","dir":"Articles","previous_headings":"Introduction","what":"Jackknife Covariance","title":"Coefficients Covariance Matrix Adjustment","text":"Jackknife method mmrm “leave-one-cluster-” method. also known “CR3”. Following McCaffrey Bell (2003), \\[   cov(\\hat\\beta) = (X^\\top W X)^{-1}(\\sum_{}{X_i^\\top L_{} (I_{} - H_{ii})^{-1} L_{}^\\top \\hat\\epsilon_i\\hat\\epsilon_i^\\top L_{} (I_{} - H_{ii})^{-1} L_{}^\\top X_i})(X^\\top W X)^{-1} \\] \\[H_{ii} = X_i(X^\\top X)^{-1}X_i^\\top\\] Please note paper additional scale parameter \\(\\frac{n-1}{n}\\) \\(n\\) number subjects, include parameter.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/coef_vcov.html","id":"bias-reduced-covariance","dir":"Articles","previous_headings":"Introduction","what":"Bias-Reduced Covariance","title":"Coefficients Covariance Matrix Adjustment","text":"Bias-reduced method, also known “CR2”, provides unbiased correct working model. Following McCaffrey Bell (2003), \\[   cov(\\hat\\beta) = (X^\\top W X)^{-1}(\\sum_{}{X_i^\\top L_{} (I_{} - H_{ii})^{-1/2} L_{}^\\top \\hat\\epsilon_i\\hat\\epsilon_i^\\top L_{} (I_{} - H_{ii})^{-1} L_{}^\\top X_i})(X^\\top W X)^{-1} \\] \\[H_{ii} = X_i(X^\\top X)^{-1}X_i^\\top\\]","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/coef_vcov.html","id":"kenward-roger-covariance","dir":"Articles","previous_headings":"Introduction","what":"Kenward-Roger Covariance","title":"Coefficients Covariance Matrix Adjustment","text":"Kenward-Roger covariance adjusted covariance matrix small sample size. Details can found Kenward-Roger","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/covariance.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Covariance Structures","text":"use concepts throughout different covariance structures introduce .","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/covariance.html","id":"covariance-and-correlation-matrices","dir":"Articles","previous_headings":"Introduction","what":"Covariance and Correlation Matrices","title":"Covariance Structures","text":"symmetric positive definite covariance matrix \\[ \\Sigma = \\begin{pmatrix} \\sigma_1^2 & \\sigma_{12} & \\dots & \\dots & \\sigma_{1m} \\\\ \\sigma_{21} & \\sigma_2^2 & \\sigma_{23} & \\dots & \\sigma_{2m}\\\\ \\vdots & & \\ddots & & \\vdots \\\\ \\vdots & & & \\ddots & \\vdots \\\\ \\sigma_{m1} & \\dots & \\dots & \\sigma_{m,m-1} & \\sigma_m^2 \\end{pmatrix} \\] parametrized vector variance parameters \\(\\theta = (\\theta_1, \\dotsc, \\theta_k)^\\top\\). meaning number (\\(k\\)) variance parameters different covariance structure. many covariance structures use decomposition \\[ \\Sigma = DPD \\] diagonal standard deviation matrix \\[ D = \\begin{pmatrix} \\sigma_1 & 0 & \\cdots & & 0 \\\\ 0 & \\sigma_2 & 0 & \\cdots & 0 \\\\ \\vdots & & \\ddots & \\ddots & \\vdots \\\\ &  & & \\sigma_{m-1} & 0 \\\\ 0 & \\cdots & & 0 & \\sigma_m \\end{pmatrix} \\] entries \\(\\sigma_i > 0\\), symmetric correlation matrix \\(P\\) \\[ P = \\begin{pmatrix}   1 & \\rho_{12}   & \\rho_{13} & \\cdots & \\cdots & \\rho_{1,m-1} \\\\   \\rho_{12} & 1      & \\rho_{23} & \\ddots &        & \\vdots \\\\   \\rho_{13} & \\rho_{23}      & \\ddots & \\ddots & \\ddots & \\vdots \\\\ \\vdots & \\ddots & \\ddots & \\ddots & \\rho_{m-2,m-1} & \\rho_{m-2,m} \\\\ \\vdots &        & \\ddots & \\rho_{m-2,m-1}    & 1    & \\rho_{m-1,m} \\\\ \\rho_{1, m-1} & \\cdots & \\cdots & \\rho_{m-2,m} & \\rho_{m-1,m}    & 1 \\end{pmatrix} \\] entries \\(\\rho_{ij} \\(-1, 1)\\). Since covariance structures assume different variances time point called “heterogeneous” covariance structures. Assuming constant \\(\\sigma = \\sigma_1 = \\dotsb = \\sigma_m\\) gives “homogeneous” covariance structure instead.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/covariance.html","id":"transformation-to-variance-parameters","dir":"Articles","previous_headings":"Introduction","what":"Transformation to Variance Parameters","title":"Covariance Structures","text":"standard deviation parameters \\(\\sigma\\) use natural logarithm \\(\\log(\\sigma)\\) map \\(\\mathbb{R}\\). correlation parameters \\(\\rho\\) consistently use transformation \\[ \\theta = f(\\rho) = \\mathop{\\mathrm{sign}}(\\rho) \\sqrt{\\frac{\\rho^2}{1 - \\rho^2}} \\] maps correlation parameter \\(\\theta \\\\mathbb{R}\\). inverse \\[ \\rho = f^{-1}(\\theta) = \\frac{\\theta}{\\sqrt{1 + \\theta^2}}. \\] important resulting variance parameters \\(\\theta\\) can optimized without constraints whole \\(\\mathbb{R}\\).","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/covariance.html","id":"unstructured-us","dir":"Articles","previous_headings":"Covariance Structures","what":"Unstructured (us)","title":"Covariance Structures","text":"covariance matrix can represented saturated correlation structure. \\(k = m (m+1) / 2\\). See algorithm vignette details.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/covariance.html","id":"homogeneous-ad-and-heterogeneous-ante-dependence-adh","dir":"Articles","previous_headings":"Covariance Structures","what":"Homogeneous (ad) and Heterogeneous Ante-dependence (adh)","title":"Covariance Structures","text":"ante-dependence correlation structure (Gabriel 1962) useful balanced designs observations necessarily equally spaced time. use order one ante-dependence model, correlation matrix \\(P\\) elements \\[ \\rho_{ij} = \\prod_{k=}^{j-1} \\rho_k. \\] correlation parameters \\(\\rho_k\\), \\(k = 1, \\dotsc, m-1\\). use heterogeneous covariance structure allow different within subject variances. can identify \\[ \\theta = (\\log(\\sigma_1), \\dotsc, \\log(\\sigma_m), f(\\rho_1), \\dotsc, f(\\rho_{m-1})) \\] total \\(2m - 1\\) variance parameters. Assuming constant variance yields homogeneous ante-dependence covariance structure total \\(m\\) variance parameters. Note naming convention homogeneous heterogeneous covariance structures suffix h used denote heterogeneous version, e.g, ad homogeneous adh heterogeneous ante-dependence. different name used SAS ante-dependence covariance structure, ANTE(1) refers heterogeneous ante-dependence covariance structure homogeneous version provided SAS.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/covariance.html","id":"homogeneous-toep-and-heterogeneous-toeplitz-toeph","dir":"Articles","previous_headings":"Covariance Structures","what":"Homogeneous (toep) and Heterogeneous Toeplitz (toeph)","title":"Covariance Structures","text":"Toeplitz matrices (Toeplitz 1911) diagonal-constant matrices. can model correlation matrix Toeplitz matrix: \\[ P = \\begin{pmatrix}   1 & \\rho_1   & \\rho_2 & \\cdots & \\cdots & \\rho_{m-1} \\\\   \\rho_1 & 1      & \\rho_1 & \\ddots &        & \\vdots \\\\   \\rho_2 & \\rho_1      & \\ddots & \\ddots & \\ddots & \\vdots \\\\ \\vdots & \\ddots & \\ddots & \\ddots & \\rho_1 & \\rho_2 \\\\ \\vdots &        & \\ddots & \\rho_1    & 1    & \\rho_1 \\\\ \\rho_{m-1} & \\cdots & \\cdots & \\rho_2    & \\rho_1    & 1 \\end{pmatrix} \\] means correlation two time points depends distance , .e. \\[ \\rho_{ij} = \\rho_{\\left\\vert - j\\right\\vert} \\] correlation parameters \\(\\rho_k\\), \\(k = 1, \\dotsc, m-1\\). use heterogeneous covariance structure allow different within subject variances. can identify \\[ \\theta = (\\log(\\sigma_1), \\dotsc, \\log(\\sigma_m), f(\\rho_1), \\dotsc, f(\\rho_{m-1})) \\] total \\(2m - 1\\) variance parameters. similar heterogeneous ante-dependence structure, correlation parameters used differently construction \\(P\\). Assuming constant variance yields homogeneous Toeplitz covariance structure total \\(m\\) variance parameters.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/covariance.html","id":"homogeneous-ar1-and-heterogeneous-ar1h-autoregressive","dir":"Articles","previous_headings":"Covariance Structures","what":"Homogeneous (ar1) and Heterogeneous (ar1h) Autoregressive","title":"Covariance Structures","text":"autoregressive covariance structure can motivated corresponding state-space equation \\[ y_{} = \\varphi y_{,t-1} + \\varepsilon_t \\] white noise \\(\\varepsilon_t\\) normal distribution mean zero constant variance. can shown gives correlations \\[ \\rho_{ij} = \\rho^{\\left\\vert - j\\right\\vert}. \\] \\(\\rho\\) related \\(\\varphi\\) variance single correlation parameter . Assuming constant variance state-space equation yields homogeneous autoregressive covariance structure total \\(k=2\\) variance parameters, otherwise obtain heterogeneous autoregressive covariance structure \\(k = m + 1\\) variance parameters.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/covariance.html","id":"homogeneous-cs-and-heterogeneous-csh-compound-symmetry","dir":"Articles","previous_headings":"Covariance Structures","what":"Homogeneous (cs) and Heterogeneous (csh) Compound Symmetry","title":"Covariance Structures","text":"compound symmetry covariance structures assume constant correlation different time points: \\[ \\rho_{ij} = \\rho \\] \\(\\rho\\) single correlation parameter . Assuming constant variance state-space equation yields homogeneous compound symmetry covariance structure total \\(k=2\\) variance parameters, otherwise obtain heterogeneous compound symmetry covariance structure \\(k = m + 1\\) variance parameters.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/covariance.html","id":"spatial-covariance-structure","dir":"Articles","previous_headings":"","what":"Spatial Covariance Structure","title":"Covariance Structures","text":"Spatial covariance structures, unlike covariance structures, require timepoints consistent subjects. Instead, long distance visits can quantified terms time /coordinates, spatial covariance structure can applied. Euclidean distance common case. subject, covariance structure can different. homogeneous structures allowed (.e. common variance used). Please note printing summary mmrm fit, covariance displayed 2 * 2 square matrix. distance used derive corresponding element matrix, unit distance used . distance matrix \\[     \\begin{pmatrix}     0 & 1\\\\     1 & 0\\\\     \\end{pmatrix} \\]","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/covariance.html","id":"spatial-exponential-sp_exp","dir":"Articles","previous_headings":"Spatial Covariance Structure","what":"Spatial exponential (sp_exp)","title":"Covariance Structures","text":"spatial exponential, covariance structure defined follows: \\[   \\rho_{ij} = \\rho^{d_{ij}} \\] \\(d_{ij}\\) distance time point \\(\\) time point \\(j\\), total number parameters \\(k = 2\\) needed: parameterization \\(\\theta\\) little different previous examples. previous examples, \\(\\rho\\) can take values -1 1, need restrict \\(\\rho\\) (0, 1). Hence following parametrization form. \\[   \\theta = (\\log(\\sigma), \\mathop{\\mathrm{logit}}(\\rho)) \\]","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/empirical_wls.html","id":"weighted-least-square-wls-empirical-covariance","dir":"Articles","previous_headings":"","what":"Weighted Least Square (WLS) Empirical Covariance","title":"Details of Weighted Least Square Empirical Covariance","text":"Following notation without weights, Bell McCaffrey (2002) Pustejovsky Tipton (2018) suggest \\[   v = s C^\\top(X^\\top W X)^{-1}\\sum_{}{X_i^\\top W_i A_i \\epsilon_i \\epsilon_i^\\top A_i W_i X_i} (X^\\top W X)^{-1} C \\] \\(A_i\\) takes \\(I_i\\), \\((I_i - H_{ii})^{-\\frac{1}{2}}\\), \\((I_i - H_{ii})^{-1}\\) unchanged, \\(H\\) changed \\[   H = X (X^\\top W X)^{-1} X^\\top W \\] degrees freedom, \\[   G_{ij} = g_i^\\top \\Phi g_j \\] \\[   g_i = s^{\\frac{1}{2}} (- H)_i^\\top A_i W_i X_i (X^\\top X)^{-1} C \\]","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/empirical_wls.html","id":"difference-of-implementations","dir":"Articles","previous_headings":"","what":"Difference of Implementations","title":"Details of Weighted Least Square Empirical Covariance","text":"Comparing previous section implementation, can find differences. Since nearly symbols, differentiate different part, use subscript \\(1\\) denote implementation suggested Bell McCaffrey (2002) Pustejovsky Tipton (2018), use \\(2\\) denote implementation covariance estimator mmrm, \\[   v_{1} = s C^\\top(X^\\top W X)^{-1}\\sum_{}{X_i^\\top W_i A_{1, } \\epsilon_i \\epsilon_i^\\top A_{1, } W_i X_i} (X^\\top W X)^{-1} C \\] \\[   v_{2} = s C^\\top(X^\\top W X)^{-1}\\sum_{}{X_i^\\top L_i A_{2, } L_i^\\top \\epsilon_i \\epsilon_i^\\top L_i A_{2, } L_i^\\top X_i} (X^\\top W X)^{-1} C \\] prove identical.","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/empirical_wls.html","id":"proof-for-covariance-estimator","dir":"Articles","previous_headings":"Difference of Implementations > Proof of Identity","what":"Proof for Covariance Estimator","title":"Details of Weighted Least Square Empirical Covariance","text":"First , assume \\(A_i\\) matrix, form, positive-definite. Comparing \\(v_{1}\\) \\(v_{2}\\), see different part \\[   M_{1, d, } = W_i A_{1, } \\] \\[   M_{2, d, } = L_i A_{2, } L_i^\\top \\] Substitute \\(H_{1}\\) \\(H_{2}\\) expression, \\[   M_{1, d, } = W_i (I_i - X_i (X^\\top W X)^{-1} X_i^\\top W_i)^d \\] \\[   M_{2, d, } = L_i (I_i - L_i^\\top X_i (X^\\top W X)^{-1} X_i^\\top L_i)^d L_i^\\top \\] \\(d\\) takes \\(0\\), \\(-1/2\\) \\(-1\\) respectively. Apparently, \\(d=0\\), two identical \\(W_i = L_i L_i^\\top\\). \\(d = -1\\), \\[   M_{2, -1, } = L_i (I_i - L_i^\\top X_i (X^\\top W X)^{-1} X_i^\\top L_i)^{-1} L_i^\\top \\\\   = (L_i^{-1})^{-1} (I_i - L_i^\\top X_i (X^\\top W X)^{-1} X_i^\\top L_i)^{-1} ((L_i^\\top)^{-1})^{-1} \\\\   = [((L_i^\\top)^{-1})(I_i - L_i^\\top X_i (X^\\top W X)^{-1} X_i^\\top L_i)(L_i^{-1})]^{-1} \\\\   = [(L_i^\\top)^{-1}L_i^{-1} - X_i (X^\\top W X)^{-1} X_i^\\top]^{-1} \\\\   = (W_i^{-1} -  X_i (X^\\top W X)^{-1} X_i^\\top)^{-1} \\] \\[   M_{1, -1, } = W_i (I_i - X_i (X^\\top W X)^{-1} X_i^\\top W_i)^{-1} \\\\   = (W_i^{-1})^{-1} (I_i - X_i (X^\\top W X)^{-1} X_i^\\top W_i)^{-1} \\\\   = [(I_i - X_i (X^\\top W X)^{-1} X_i^\\top W_i)((W_i^{-1}))]^{-1} \\\\   = (W_i^{-1} -  X_i (X^\\top W X)^{-1} X_i^\\top)^{-1} \\] Obviously, \\(M_{2, -1, } = M_{1, -1, }\\), use following notation \\[   M_{2, -1, } = L_i B_{2, } L_i^\\top \\] \\[   M_{1, -1, } = W_i B_{1, } \\] \\[   B_{1, } = W_i^{-1} L_i B_{2, } L_i^\\top \\\\   = (L_i^\\top)^{-1} B_{2, } L_i^\\top \\] \\(d = -1/2\\), following \\[   M_{2, -1/2, } = L_i (I_i - L_i^\\top X_i (X^\\top W X)^{-1} X_i^\\top L_i)^{-1/2} L_i^\\top \\\\   = L_i B_{2, }^{1/2} L_i^\\top \\] \\[   M_{1, -1/2, } = W_i (I_i - X_i (X^\\top W X)^{-1} X_i^\\top W_i)^{-1/2} \\\\   = W_i B_{1, }^{1/2} \\] Apparently \\(B_{1, }^{1/2} \\ne (L_i^\\top)^{-1} B_{2, }^{1/2} L_i^\\top\\), also \\[   B_{1, }^{1/2} B_{1, }^{1/2} \\ne (L_i^\\top)^{-1} B_{2, }^{1/2} L_i^\\top (L_i^\\top)^{-1} B_{2, }^{1/2} L_i^\\top \\] leading \\[   B_{1, } \\ne (L_i^\\top)^{-1} B_{2, } L_i^\\top \\] contradictory previous result. Thus, covariance estimator identical.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/empirical_wls.html","id":"proof-for-degrees-of-freedom","dir":"Articles","previous_headings":"Difference of Implementations > Proof of Identity","what":"Proof for Degrees of Freedom","title":"Details of Weighted Least Square Empirical Covariance","text":"prove \\[   G_{1, ij} = g_{1, }^\\top \\Phi g_{1, j} \\] \\[   G_{2, ij} = g_{2, }^\\top g_{2, j} \\] identical, need prove \\[   L^{-1} g_{1, } = g_{mmrm_i} \\] \\(\\Phi = W^{-1}\\) according previous expression. first expand \\(L^{-1} g_{1, }\\) \\(g_{mmrm_i}\\) \\[   L^{-1} g_{1, } = L^{-1} (- X(X^\\top W X)^{-1}X^\\top W) S_i^\\top A_{1, }^d W_i X_i (X^\\top W X)^{-1} C \\] \\[   g_{2, } = (- L_i^\\top X(X^\\top W X)^{-1}X^\\top L_i) S_i^\\top A_{2, }^d L_i^\\top X_i (X^\\top W X)^{-1} C \\] \\(S_i\\) row selection matrix. prove inner part equal \\[   L^{-1} (- X(X^\\top W X)^{-1}X^\\top W) S_i^\\top A_{1, }^d W_i = (- L^\\top X(X^\\top W X)^{-1}X^\\top L) S_i^\\top A_{2, }^d L_i^\\top \\] previous proof covariance estimators, already \\[   M_{1, d, } = W_i A_{1, }^d = L_i A_{2, }^d L_i^\\top = M_{2, d, } \\] need prove \\[   L^{-1} (- X(X^\\top W X)^{-1}X^\\top W) S_i^\\top = (- L^\\top X(X^\\top W X)^{-1}X^\\top L) S_i^\\top L_i^{-1} \\] note relationship \\((- X(X^\\top W X)^{-1}X^\\top W)\\) \\((- L^\\top X(X^\\top W X)^{-1}X^\\top L)\\) already proved covariance estimator section, need prove \\[   L^{-1} (- X(X^\\top W X)^{-1}X^\\top W) S_i^\\top = (- L^\\top X(X^\\top W X)^{-1}X^\\top L) S_i^\\top L_i^{-1} \\] Apparently \\[   L^{-1} (- X(X^\\top W X)^{-1}X^\\top W) S_i^\\top = L^{-1} S_i^\\top - L^{-1} X(X^\\top W X)^{-1}X_i^\\top W_i \\] \\[   (- L^\\top X(X^\\top W X)^{-1}X^\\top L) S_i^\\top L_i^{-1} = S_i^\\top L_i^{-1} - L^\\top X(X^\\top W X)^{-1}X_i^\\top \\] obviously \\[   L^{-1} S_i^\\top = S_i^\\top L_i^{-1} \\] \\[   L^{-1} X(X^\\top W X)^{-1}X_i W_i = L^\\top X(X^\\top W X)^{-1}X_i^\\top \\] following \\[   (X(X^\\top W X)^{-1}X_i W_i)_{} = X_i(X^\\top W X)^{-1}X_i W_i \\\\   = W_i X_i(X^\\top W X)^{-1}X_i^\\top \\\\   = (W X(X^\\top W X)^{-1}X_i^\\top)_{} \\]","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/empirical_wls.html","id":"pseudo-inverse-of-a-matrix","dir":"Articles","previous_headings":"Special Considerations in Implementations","what":"Pseudo Inverse of a Matrix","title":"Details of Weighted Least Square Empirical Covariance","text":"Empirical covariance matrix involved inverse matrix, symmetric square root matrix. calculate , usually requires matrix positive-definite. However, Young (2016) suggest always assured practice. Thus, following Pustejovsky Tipton (2018), use pseudo inverse avoid . follow following logic (see corresponding C++ function pseudoInverseSqrt) obtain pseudo inverse: Conduct singular value decomposition. Use cpow obtain square root reciprocals singular values, value larger computational threshold; otherwise replace value 0. Reconstruct pseudo inverse matrix modified singular values U/V matrix. Eigen package, pseudo inverse method already implemented Eigen::CompleteOrthogonalDecomposition< MatrixType_ >::pseudoInverse, used following reason: pseudo inverse method stable can lead NAN calculations. find symmetric square root, singular value decomposition still needed, using method instead calculating directly square root pseudo inverse can simpler.","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/introduction.html","id":"common-usage","dir":"Articles","previous_headings":"","what":"Common usage","title":"Package Introduction","text":"minimal call mmrm(), consisting formula data arguments produce object class mmrm, mmrm_fit, mmrm_tmb. fit mmrm model us (unstructured) covariance structure specified, well defaults reml = TRUE control = mmrm_control(). code specifies MMRM given covariates unstructured covariance matrix timepoints (also called visits clinical trial context, given AVISIT) within subjects (USUBJID). default uses restricted maximum likelihood (REML), also possible use ML, see ?mmrm. Printing object show output familiar anyone used popular modeling functions stats::lm(), stats::glm(), glmmTMB::glmmTMB(), lme4::nlmer(). print see function call, data used, covariance structure number variance parameters, well likelihood method, model deviance achieved. Additionally user provided printout estimated coefficients model convergence information: summary() method provides coefficients table Satterthwaite degrees freedom well covariance matrix estimate:","code":"library(mmrm) fit <- mmrm(   formula = FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data ) fit #> mmrm fit #>  #> Formula:     FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID) #> Data:        fev_data (used 537 observations from 197 subjects with maximum 4  #> timepoints) #> Covariance:  unstructured (10 variance parameters) #> Inference:   REML #> Deviance:    3386.45 #>  #> Coefficients:  #>                   (Intercept) RACEBlack or African American  #>                   30.77747548                    1.53049977  #>                     RACEWhite                     SEXFemale  #>                    5.64356535                    0.32606192  #>                      ARMCDTRT                    AVISITVIS2  #>                    3.77423004                    4.83958845  #>                    AVISITVIS3                    AVISITVIS4  #>                   10.34211288                   15.05389826  #>           ARMCDTRT:AVISITVIS2           ARMCDTRT:AVISITVIS3  #>                   -0.04192625                   -0.69368537  #>           ARMCDTRT:AVISITVIS4  #>                    0.62422703  #>  #> Model Inference Optimization: #> Converged with code 0 and message: convergence: rel_reduction_of_f <= factr*epsmch summary(fit) #> mmrm fit #>  #> Formula:     FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID) #> Data:        fev_data (used 537 observations from 197 subjects with maximum 4  #> timepoints) #> Covariance:  unstructured (10 variance parameters) #> Method:      Satterthwaite #> Vcov Method: Asymptotic #> Inference:   REML #>  #> Model selection criteria: #>      AIC      BIC   logLik deviance  #>   3406.4   3439.3  -1693.2   3386.4  #>  #> Coefficients:  #>                                Estimate Std. Error        df t value Pr(>|t|) #> (Intercept)                    30.77748    0.88656 218.80000  34.715  < 2e-16 #> RACEBlack or African American   1.53050    0.62448 168.67000   2.451 0.015272 #> RACEWhite                       5.64357    0.66561 157.14000   8.479 1.56e-14 #> SEXFemale                       0.32606    0.53195 166.13000   0.613 0.540744 #> ARMCDTRT                        3.77423    1.07415 145.55000   3.514 0.000589 #> AVISITVIS2                      4.83959    0.80172 143.88000   6.037 1.27e-08 #> AVISITVIS3                     10.34211    0.82269 155.56000  12.571  < 2e-16 #> AVISITVIS4                     15.05390    1.31281 138.47000  11.467  < 2e-16 #> ARMCDTRT:AVISITVIS2            -0.04193    1.12932 138.56000  -0.037 0.970439 #> ARMCDTRT:AVISITVIS3            -0.69369    1.18765 158.17000  -0.584 0.559996 #> ARMCDTRT:AVISITVIS4             0.62423    1.85085 129.72000   0.337 0.736463 #>                                   #> (Intercept)                   *** #> RACEBlack or African American *   #> RACEWhite                     *** #> SEXFemale                         #> ARMCDTRT                      *** #> AVISITVIS2                    *** #> AVISITVIS3                    *** #> AVISITVIS4                    *** #> ARMCDTRT:AVISITVIS2               #> ARMCDTRT:AVISITVIS3               #> ARMCDTRT:AVISITVIS4               #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Covariance estimate: #>         VIS1    VIS2    VIS3    VIS4 #> VIS1 40.5537 14.3960  4.9747 13.3867 #> VIS2 14.3960 26.5715  2.7855  7.4745 #> VIS3  4.9747  2.7855 14.8979  0.9082 #> VIS4 13.3867  7.4745  0.9082 95.5568"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/introduction.html","id":"common-customizations","dir":"Articles","previous_headings":"","what":"Common customizations","title":"Package Introduction","text":"high-level mmrm() interface, common changes default function call can specified.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/introduction.html","id":"control-function","dir":"Articles","previous_headings":"Common customizations","what":"Control Function","title":"Package Introduction","text":"fine control, mmrm_control() provided. function allows user choose adjustment method degrees freedom coefficients covariance matrix, specify optimization routines, number cores used Unix systems trying several optimizers parallel, provide vector starting parameter values, decide action taken defined design matrix singular, drop unobserved visit levels. example: Note control list can either passed via control argument mmrm, selected controls can directly specified mmrm call. see .","code":"mmrm_control(   method = \"Kenward-Roger\",   optimizer = c(\"L-BFGS-B\", \"BFGS\"),   n_cores = 2,   start = c(0, 1, 1, 0, 1, 0),   accept_singular = FALSE,   drop_visit_levels = FALSE )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/introduction.html","id":"reml-or-ml","dir":"Articles","previous_headings":"Common customizations","what":"REML or ML","title":"Package Introduction","text":"Users can specify REML used (default) ML used optimization.","code":"fit_ml <- mmrm(   formula = FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data,   reml = FALSE ) fit_ml #> mmrm fit #>  #> Formula:     FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID) #> Data:        fev_data (used 537 observations from 197 subjects with maximum 4  #> timepoints) #> Covariance:  unstructured (10 variance parameters) #> Inference:   ML #> Deviance:    3397.934 #>  #> Coefficients:  #>                   (Intercept) RACEBlack or African American  #>                    30.9663423                     1.5086851  #>                     RACEWhite                      ARMCDTRT  #>                     5.6133151                     3.7761037  #>                    AVISITVIS2                    AVISITVIS3  #>                     4.8270155                    10.3353319  #>                    AVISITVIS4           ARMCDTRT:AVISITVIS2  #>                    15.0487715                    -0.0156154  #>           ARMCDTRT:AVISITVIS3           ARMCDTRT:AVISITVIS4  #>                    -0.6663598                     0.6317222  #>  #> Model Inference Optimization: #> Converged with code 0 and message: convergence: rel_reduction_of_f <= factr*epsmch"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/introduction.html","id":"optimizer","dir":"Articles","previous_headings":"Common customizations","what":"Optimizer","title":"Package Introduction","text":"Users can specify optimizer used, changing default four optimizers, starts L-BFGS-B proceeds choices optimization fails converge. choices BFGS, CG, nlminb user-defined custom optimizers. L-BFGS-B, BFGS CG implemented stats::optim() Hessian used, nlminb using stats::nlminb() turn uses gradient Hessian (default can switch ) optimization.","code":"fit_opt <- mmrm(   formula = FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data,   optimizer = \"BFGS\" ) fit_opt #> mmrm fit #>  #> Formula:     FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID) #> Data:        fev_data (used 537 observations from 197 subjects with maximum 4  #> timepoints) #> Covariance:  unstructured (10 variance parameters) #> Inference:   REML #> Deviance:    3387.373 #>  #> Coefficients:  #>                   (Intercept) RACEBlack or African American  #>                    30.9676902                     1.5046744  #>                     RACEWhite                      ARMCDTRT  #>                     5.6131048                     3.7755423  #>                    AVISITVIS2                    AVISITVIS3  #>                     4.8285855                    10.3331770  #>                    AVISITVIS4           ARMCDTRT:AVISITVIS2  #>                    15.0525706                    -0.0173504  #>           ARMCDTRT:AVISITVIS3           ARMCDTRT:AVISITVIS4  #>                    -0.6675190                     0.6309586  #>  #> Model Inference Optimization: #> Converged with code 0 and message:"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/introduction.html","id":"covariance-structure","dir":"Articles","previous_headings":"Common customizations","what":"Covariance Structure","title":"Package Introduction","text":"Covariance structures supported mmrm continuously developed. complete list description please visit covariance vignette. see function call homogeneous compound symmetry (cs). time points unique subject. , time points multiple observations subject. rationale observations need correlated, possible within currently implemented covariance structure framework correctly. Moreover, non-spatial covariance structures, time variable must coded factor.","code":"fit_cs <- mmrm(   formula = FEV1 ~ RACE + ARMCD * AVISIT + cs(AVISIT | USUBJID),   data = fev_data,   reml = FALSE ) fit_cs #> mmrm fit #>  #> Formula:     FEV1 ~ RACE + ARMCD * AVISIT + cs(AVISIT | USUBJID) #> Data:        fev_data (used 537 observations from 197 subjects with maximum 4  #> timepoints) #> Covariance:  compound symmetry (2 variance parameters) #> Inference:   ML #> Deviance:    3536.989 #>  #> Coefficients:  #>                   (Intercept) RACEBlack or African American  #>                    31.4207077                     0.5357237  #>                     RACEWhite                      ARMCDTRT  #>                     5.4546329                     3.4305212  #>                    AVISITVIS2                    AVISITVIS3  #>                     4.8326353                    10.2395076  #>                    AVISITVIS4           ARMCDTRT:AVISITVIS2  #>                    15.0672680                     0.2801641  #>           ARMCDTRT:AVISITVIS3           ARMCDTRT:AVISITVIS4  #>                    -0.5894964                     0.7939750  #>  #> Model Inference Optimization: #> Converged with code 0 and message: convergence: rel_reduction_of_f <= factr*epsmch"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/introduction.html","id":"weighting","dir":"Articles","previous_headings":"Common customizations","what":"Weighting","title":"Package Introduction","text":"Users can perform weighted MMRM specifying numeric vector weights positive values.","code":"fit_wt <- mmrm(   formula = FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data,   weights = fev_data$WEIGHT ) fit_wt #> mmrm fit #>  #> Formula:     FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID) #> Data:        fev_data (used 537 observations from 197 subjects with maximum 4  #> timepoints) #> Weights:     fev_data$WEIGHT #> Covariance:  unstructured (10 variance parameters) #> Inference:   REML #> Deviance:    3476.526 #>  #> Coefficients:  #>                   (Intercept) RACEBlack or African American  #>                   31.20065229                    1.18452837  #>                     RACEWhite                      ARMCDTRT  #>                    5.36525917                    3.39695951  #>                    AVISITVIS2                    AVISITVIS3  #>                    4.85890820                   10.03942420  #>                    AVISITVIS4           ARMCDTRT:AVISITVIS2  #>                   14.79354054                    0.03418184  #>           ARMCDTRT:AVISITVIS3           ARMCDTRT:AVISITVIS4  #>                    0.01308088                    0.86701567  #>  #> Model Inference Optimization: #> Converged with code 0 and message: convergence: rel_reduction_of_f <= factr*epsmch"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/introduction.html","id":"grouped-covariance-structure","dir":"Articles","previous_headings":"Common customizations","what":"Grouped Covariance Structure","title":"Package Introduction","text":"Grouped covariance structures supported themmrm package. Covariance matrices group identically structured (unstructured, compound symmetry, etc) estimates allowed vary across groups. use form cs(time | group / subject) specify group variable. example use ARMCD group variable. can see estimated covariance matrices different different ARMCD groups.","code":"fit_cs <- mmrm(   formula = FEV1 ~ RACE + ARMCD * AVISIT + cs(AVISIT | ARMCD / USUBJID),   data = fev_data,   reml = FALSE ) VarCorr(fit_cs) #> $PBO #>           VIS1      VIS2      VIS3      VIS4 #> VIS1 37.823638  3.601296  3.601296  3.601296 #> VIS2  3.601296 37.823638  3.601296  3.601296 #> VIS3  3.601296  3.601296 37.823638  3.601296 #> VIS4  3.601296  3.601296  3.601296 37.823638 #>  #> $TRT #>          VIS1     VIS2     VIS3     VIS4 #> VIS1 49.58110 10.98112 10.98112 10.98112 #> VIS2 10.98112 49.58110 10.98112 10.98112 #> VIS3 10.98112 10.98112 49.58110 10.98112 #> VIS4 10.98112 10.98112 10.98112 49.58110"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/introduction.html","id":"adjustment-method","dir":"Articles","previous_headings":"Common customizations","what":"Adjustment Method","title":"Package Introduction","text":"additional residual -Within degrees freedom, Satterthwaite Kenward-Roger adjustment methods available. default Satterthwaite adjustment degrees freedom. use e.g. Kenward-Roger adjustment degrees freedom well coefficients covariance matrix, use method argument: list allowed method “Kenward-Roger” “Satterthwaite” “Residual” “-Within” Note requires reml = TRUE, .e. Kenward-Roger adjustment possible using maximum likelihood inference. adjustment choice visible print() result fitted model (initial model fit affected choice adjustment method), looking summary see method correspondingly adjusted standard errors degrees freedom: one-dimensional contrasts coefficients table , degrees freedom Kenward-Roger Satterthwaite. However, Kenward-Roger uses adjusted standard errors, hence p-values different. Note like match SAS results unstructured covariance model, can use linear Kenward-Roger approximation: due different parametrization unstructured covariance matrix, see Kenward-Roger vignette details.","code":"fit_kr <- mmrm(   formula = FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data,   method = \"Kenward-Roger\" ) summary(fit_kr) #> mmrm fit #>  #> Formula:     FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID) #> Data:        fev_data (used 537 observations from 197 subjects with maximum 4  #> timepoints) #> Covariance:  unstructured (10 variance parameters) #> Method:      Kenward-Roger #> Vcov Method: Kenward-Roger #> Inference:   REML #>  #> Model selection criteria: #>      AIC      BIC   logLik deviance  #>   3407.4   3440.2  -1693.7   3387.4  #>  #> Coefficients:  #>                                Estimate Std. Error        df t value Pr(>|t|) #> (Intercept)                    30.96770    0.83335 187.91000  37.160  < 2e-16 #> RACEBlack or African American   1.50465    0.62901 169.95000   2.392  0.01784 #> RACEWhite                       5.61310    0.67139 158.87000   8.360 2.98e-14 #> ARMCDTRT                        3.77556    1.07910 146.27000   3.499  0.00062 #> AVISITVIS2                      4.82859    0.80408 143.66000   6.005 1.49e-08 #> AVISITVIS3                     10.33317    0.82303 155.66000  12.555  < 2e-16 #> AVISITVIS4                     15.05256    1.30180 138.39000  11.563  < 2e-16 #> ARMCDTRT:AVISITVIS2            -0.01737    1.13154 138.39000  -0.015  0.98777 #> ARMCDTRT:AVISITVIS3            -0.66753    1.18714 158.21000  -0.562  0.57470 #> ARMCDTRT:AVISITVIS4             0.63094    1.83319 129.64000   0.344  0.73127 #>                                   #> (Intercept)                   *** #> RACEBlack or African American *   #> RACEWhite                     *** #> ARMCDTRT                      *** #> AVISITVIS2                    *** #> AVISITVIS3                    *** #> AVISITVIS4                    *** #> ARMCDTRT:AVISITVIS2               #> ARMCDTRT:AVISITVIS3               #> ARMCDTRT:AVISITVIS4               #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Covariance estimate: #>         VIS1    VIS2    VIS3    VIS4 #> VIS1 40.7335 14.2740  5.1411 13.5288 #> VIS2 14.2740 26.2243  2.6391  7.3219 #> VIS3  5.1411  2.6391 14.9497  1.0341 #> VIS4 13.5288  7.3219  1.0341 95.6006 fit_kr_lin <- mmrm(   formula = FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data,   method = \"Kenward-Roger\",   vcov = \"Kenward-Roger-Linear\" )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/introduction.html","id":"variance-covariance-for-coefficients","dir":"Articles","previous_headings":"Common customizations","what":"Variance-covariance for Coefficients","title":"Package Introduction","text":"multiple variance-covariance estimator available coefficients, including: “Asymptotic” “Empirical” (Cluster Robust Sandwich) “Empirical-Jackknife” “Empirical-Bias-Reduced” “Kenward-Roger” “Kenward-Roger-Linear” Please note , combinations variance-covariance coefficients method degrees freedom possible, e.g. “Kenward-Roger” “Kenward-Roger-Linear” available degrees freedom method “Kenward-Roger”. Details can found Coefficients Covariance Matrix Adjustment vignette Weighted Least Square Empirical Covariance. example using variance-covariance :","code":"fit_emp <- mmrm(   formula = FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data,   method = \"Satterthwaite\",   vcov = \"Empirical\" )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/introduction.html","id":"keeping-unobserved-visits","dir":"Articles","previous_headings":"Common customizations","what":"Keeping Unobserved Visits","title":"Package Introduction","text":"Sometimes possible time points observed given data set. using structured covariance matrix, e.g. auto-regressive structure, can relevant keep correct distance observed time points. Consider following example deliberately removed VIS3 observations initial example data set fev_data obtain sparse_data. first fit model drop visit level explicitly, using drop_visit_levels = FALSE choice. Second fit model default without option. see get message dropped visit level default. Now can compare estimated correlation matrices: see using default, second result, just drop VIS3 covariance matrix. consequence, model correlation VIS2 VIS4 correlation VIS1 VIS2. Hence get smaller correlation estimate compared first result, includes VIS3 explicitly.","code":"sparse_data <- fev_data[fev_data$AVISIT != \"VIS3\", ] sparse_result <- mmrm(   FEV1 ~ RACE + ar1(AVISIT | USUBJID),   data = sparse_data,   drop_visit_levels = FALSE )  dropped_result <- mmrm(   FEV1 ~ RACE + ar1(AVISIT | USUBJID),   data = sparse_data ) #> In AVISIT there are dropped visits: VIS3 cov2cor(VarCorr(sparse_result)) #>            VIS1      VIS2      VIS3       VIS4 #> VIS1 1.00000000 0.4051834 0.1641736 0.06652042 #> VIS2 0.40518341 1.0000000 0.4051834 0.16417360 #> VIS3 0.16417360 0.4051834 1.0000000 0.40518341 #> VIS4 0.06652042 0.1641736 0.4051834 1.00000000 cov2cor(VarCorr(dropped_result)) #>            VIS1      VIS2       VIS4 #> VIS1 1.00000000 0.1468464 0.02156386 #> VIS2 0.14684640 1.0000000 0.14684640 #> VIS4 0.02156386 0.1468464 1.00000000"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/introduction.html","id":"extraction-of-model-features","dir":"Articles","previous_headings":"","what":"Extraction of model features","title":"Package Introduction","text":"Similar model objects created packages, components mmrm mmrm_tmb objects can accessed standard methods. Additionally, component() provided allow deeper precise access interested digging model output. Complete documentation standard model output methods supported mmrm_tmb objects can found package website.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/introduction.html","id":"summary","dir":"Articles","previous_headings":"Extraction of model features","what":"Summary","title":"Package Introduction","text":"summary method mmrm objects provides easy access frequently needed model components. summary object, can easily retrieve coefficients table. model parameters metadata available summary object follows:","code":"fit <- mmrm(   formula = FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data ) fit_summary <- summary(fit) fit_summary$coefficients #>                                  Estimate Std. Error       df     t value #> (Intercept)                   30.96769899  0.8293349 187.9132 37.34040185 #> RACEBlack or African American  1.50464863  0.6206596 169.9454  2.42427360 #> RACEWhite                      5.61309565  0.6630909 158.8700  8.46504747 #> ARMCDTRT                       3.77555734  1.0762774 146.2690  3.50797778 #> AVISITVIS2                     4.82858803  0.8017144 143.6593  6.02282805 #> AVISITVIS3                    10.33317002  0.8224414 155.6572 12.56401918 #> AVISITVIS4                    15.05255715  1.3128602 138.3916 11.46546844 #> ARMCDTRT:AVISITVIS2           -0.01737409  1.1291645 138.3926 -0.01538668 #> ARMCDTRT:AVISITVIS3           -0.66753189  1.1865359 158.2106 -0.56258887 #> ARMCDTRT:AVISITVIS4            0.63094392  1.8507884 129.6377  0.34090549 #>                                   Pr(>|t|) #> (Intercept)                   7.122411e-89 #> RACEBlack or African American 1.638725e-02 #> RACEWhite                     1.605553e-14 #> ARMCDTRT                      6.001485e-04 #> AVISITVIS2                    1.366921e-08 #> AVISITVIS3                    1.927523e-25 #> AVISITVIS4                    8.242709e-22 #> ARMCDTRT:AVISITVIS2           9.877459e-01 #> ARMCDTRT:AVISITVIS3           5.745112e-01 #> ARMCDTRT:AVISITVIS4           7.337266e-01 str(fit_summary) #> List of 15 #>  $ cov_type        : chr \"us\" #>  $ reml            : logi TRUE #>  $ n_groups        : int 1 #>  $ n_theta         : int 10 #>  $ n_subjects      : int 197 #>  $ n_timepoints    : int 4 #>  $ n_obs           : int 537 #>  $ beta_vcov       : num [1:10, 1:10] 0.688 -0.207 -0.163 -0.569 -0.422 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:10] \"(Intercept)\" \"RACEBlack or African American\" \"RACEWhite\" \"ARMCDTRT\" ... #>   .. ..$ : chr [1:10] \"(Intercept)\" \"RACEBlack or African American\" \"RACEWhite\" \"ARMCDTRT\" ... #>  $ varcor          : num [1:4, 1:4] 40.73 14.27 5.14 13.53 14.27 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:4] \"VIS1\" \"VIS2\" \"VIS3\" \"VIS4\" #>   .. ..$ : chr [1:4] \"VIS1\" \"VIS2\" \"VIS3\" \"VIS4\" #>  $ method          : chr \"Satterthwaite\" #>  $ vcov            : chr \"Asymptotic\" #>  $ coefficients    : num [1:10, 1:5] 30.97 1.5 5.61 3.78 4.83 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:10] \"(Intercept)\" \"RACEBlack or African American\" \"RACEWhite\" \"ARMCDTRT\" ... #>   .. ..$ : chr [1:5] \"Estimate\" \"Std. Error\" \"df\" \"t value\" ... #>  $ n_singular_coefs: int 0 #>  $ aic_list        :List of 4 #>   ..$ AIC     : num 3407 #>   ..$ BIC     : num 3440 #>   ..$ logLik  : num -1694 #>   ..$ deviance: num 3387 #>  $ call            : language mmrm(formula = FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID), data = fev_data) #>  - attr(*, \"class\")= chr \"summary.mmrm\""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/introduction.html","id":"residuals","dir":"Articles","previous_headings":"Extraction of model features","what":"Residuals","title":"Package Introduction","text":"residuals method mmrm objects can used provide three different types residuals: Response raw residuals - difference observed fitted predicted value. MMRMs can allow heteroscedasticity, residuals interpreted caution. Pearson residuals - raw residuals scaled estimated standard deviation response. residual type better suited identifying outlying observations appropriateness covariance structure, compared raw residuals. Normalized scaled residuals - raw residuals ‘de-correlated’ based Cholesky decomposition variance-covariance matrix. residuals approximately follow standard normal distribution, therefore can used check normality (@galecki2013linear).","code":"fit <- mmrm(   formula = FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data ) residuals_resp <- residuals(fit, type = \"response\") residuals_pearson <- residuals(fit, type = \"pearson\") residuals_norm <- residuals(fit, type = \"normalized\")"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/introduction.html","id":"broom-extensions","dir":"Articles","previous_headings":"Extraction of model features","what":"broom extensions","title":"Package Introduction","text":"mmrm also contains S3 methods methods tidy, glance augment introduced broom. Note methods work also without loading broom package. Please see ?mmrm_tidiers detailed documentation. example, can apply tidy method return summary table coefficient estimates: can also specify details request confidence intervals specific confidence level: can apply glance method return summary table goodness fit statistics: Finally, can use augment method return merged tibble data, fitted values residuals: Also can specify details prediction intervals type residuals via arguments:","code":"fit |>   tidy() #> # A tibble: 10 × 6 #>    term                          estimate std.error    df statistic  p.value #>    <chr>                            <dbl>     <dbl> <dbl>     <dbl>    <dbl> #>  1 (Intercept)                    31.0        0.829  188.   37.3    7.12e-89 #>  2 RACEBlack or African American   1.50       0.621  170.    2.42   1.64e- 2 #>  3 RACEWhite                       5.61       0.663  159.    8.47   1.61e-14 #>  4 ARMCDTRT                        3.78       1.08   146.    3.51   6.00e- 4 #>  5 AVISITVIS2                      4.83       0.802  144.    6.02   1.37e- 8 #>  6 AVISITVIS3                     10.3        0.822  156.   12.6    1.93e-25 #>  7 AVISITVIS4                     15.1        1.31   138.   11.5    8.24e-22 #>  8 ARMCDTRT:AVISITVIS2            -0.0174     1.13   138.   -0.0154 9.88e- 1 #>  9 ARMCDTRT:AVISITVIS3            -0.668      1.19   158.   -0.563  5.75e- 1 #> 10 ARMCDTRT:AVISITVIS4             0.631      1.85   130.    0.341  7.34e- 1 fit |>   tidy(conf.int = TRUE, conf.level = 0.9) #> # A tibble: 10 × 8 #>    term           estimate std.error    df statistic  p.value conf.low conf.high #>    <chr>             <dbl>     <dbl> <dbl>     <dbl>    <dbl>    <dbl>     <dbl> #>  1 (Intercept)     31.0        0.829  188.   37.3    7.12e-89   29.6       32.3  #>  2 ARMCDTRT         3.78       1.08   146.    3.51   6.00e- 4    2.01       5.55 #>  3 ARMCDTRT:AVIS…  -0.0174     1.13   138.   -0.0154 9.88e- 1   -1.87       1.84 #>  4 ARMCDTRT:AVIS…  -0.668      1.19   158.   -0.563  5.75e- 1   -2.62       1.28 #>  5 ARMCDTRT:AVIS…   0.631      1.85   130.    0.341  7.34e- 1   -2.41       3.68 #>  6 AVISITVIS2       4.83       0.802  144.    6.02   1.37e- 8    3.51       6.15 #>  7 AVISITVIS3      10.3        0.822  156.   12.6    1.93e-25    8.98      11.7  #>  8 AVISITVIS4      15.1        1.31   138.   11.5    8.24e-22   12.9       17.2  #>  9 RACEBlack or …   1.50       0.621  170.    2.42   1.64e- 2    0.484      2.53 #> 10 RACEWhite        5.61       0.663  159.    8.47   1.61e-14    4.52       6.70 fit |>   glance() #> # A tibble: 1 × 4 #>     AIC   BIC logLik deviance #>   <dbl> <dbl>  <dbl>    <dbl> #> 1 3407. 3440. -1694.    3387. fit |>   augment() #> # A tibble: 537 × 8 #>    .rownames  FEV1 RACE                     ARMCD AVISIT USUBJID .fitted  .resid #>        <dbl> <dbl> <fct>                    <fct> <fct>  <fct>     <dbl>   <dbl> #>  1         2  40.0 Black or African Americ… TRT   VIS2   PT1        40.0  -1.09  #>  2         4  20.5 Black or African Americ… TRT   VIS4   PT1        20.5 -31.4   #>  3         6  31.5 Asian                    PBO   VIS2   PT2        31.5  -4.34  #>  4         7  36.9 Asian                    PBO   VIS3   PT2        36.9  -4.42  #>  5         8  48.8 Asian                    PBO   VIS4   PT2        48.8   2.79  #>  6        10  36.0 Black or African Americ… PBO   VIS2   PT3        36.0  -1.31  #>  7        12  37.2 Black or African Americ… PBO   VIS4   PT3        37.2 -10.4   #>  8        13  33.9 Asian                    TRT   VIS1   PT4        33.9  -0.851 #>  9        14  33.7 Asian                    TRT   VIS2   PT4        33.7  -5.81  #> 10        16  54.5 Asian                    TRT   VIS4   PT4        54.5   4.02  #> # ℹ 527 more rows fit |>   augment(interval = \"confidence\", type.residuals = \"normalized\") #> # A tibble: 537 × 11 #>    .rownames  FEV1 RACE       ARMCD AVISIT USUBJID .fitted .lower .upper .se.fit #>        <dbl> <dbl> <fct>      <fct> <fct>  <fct>     <dbl>  <dbl>  <dbl>   <dbl> #>  1         2  40.0 Black or … TRT   VIS2   PT1        40.0   40.0   40.0       0 #>  2         4  20.5 Black or … TRT   VIS4   PT1        20.5   20.5   20.5       0 #>  3         6  31.5 Asian      PBO   VIS2   PT2        31.5   31.5   31.5       0 #>  4         7  36.9 Asian      PBO   VIS3   PT2        36.9   36.9   36.9       0 #>  5         8  48.8 Asian      PBO   VIS4   PT2        48.8   48.8   48.8       0 #>  6        10  36.0 Black or … PBO   VIS2   PT3        36.0   36.0   36.0       0 #>  7        12  37.2 Black or … PBO   VIS4   PT3        37.2   37.2   37.2       0 #>  8        13  33.9 Asian      TRT   VIS1   PT4        33.9   33.9   33.9       0 #>  9        14  33.7 Asian      TRT   VIS2   PT4        33.7   33.7   33.7       0 #> 10        16  54.5 Asian      TRT   VIS4   PT4        54.5   54.5   54.5       0 #> # ℹ 527 more rows #> # ℹ 1 more variable: .resid <dbl>"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/introduction.html","id":"other-components","dir":"Articles","previous_headings":"Extraction of model features","what":"Other components","title":"Package Introduction","text":"Specific model quantities supported methods can retrieved component() function. default output supported components. example, user may want information convergence: original low-level call: user also ask provided components specifying name argument.","code":"component(fit, name = c(\"convergence\", \"evaluations\", \"conv_message\")) #> $convergence #> [1] 0 #>  #> $evaluations #> function gradient  #>       17       17  #>  #> $conv_message #> [1] \"CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH\" component(fit, name = \"call\") #> mmrm(formula = FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID),  #>     data = fev_data) component(fit)"},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/introduction.html","id":"low-level-mmrm","dir":"Articles","previous_headings":"Lower level functions","what":"Low-level mmrm","title":"Package Introduction","text":"lower level function called mmrm() fit_mmrm(). function exported can used directly. similar mmrm() lacks post-processing support Satterthwaite Kenward-Roger calculations. may useful packages want fit model without adjustment calculations.","code":"fit_mmrm(   formula = FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data,   weights = rep(1, nrow(fev_data)),   reml = TRUE,   control = mmrm_control() ) #> mmrm fit #>  #> Formula:     FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID) #> Data:        fev_data (used 537 observations from 197 subjects with maximum 4  #> timepoints) #> Weights:     rep(1, nrow(fev_data)) #> Covariance:  unstructured (10 variance parameters) #> Inference:   REML #> Deviance:    3387.373 #>  #> Coefficients:  #>                   (Intercept) RACEBlack or African American  #>                   30.96769899                    1.50464863  #>                     RACEWhite                      ARMCDTRT  #>                    5.61309565                    3.77555734  #>                    AVISITVIS2                    AVISITVIS3  #>                    4.82858803                   10.33317002  #>                    AVISITVIS4           ARMCDTRT:AVISITVIS2  #>                   15.05255715                   -0.01737409  #>           ARMCDTRT:AVISITVIS3           ARMCDTRT:AVISITVIS4  #>                   -0.66753189                    0.63094392  #>  #> Model Inference Optimization: #> Converged with code 0 and message: convergence: rel_reduction_of_f <= factr*epsmch"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/introduction.html","id":"hypothesis-testing","dir":"Articles","previous_headings":"","what":"Hypothesis testing","title":"Package Introduction","text":"package supports estimation one- multi-dimensional contrasts (t-test F-test calculation) df_1d() df_md() functions. functions utilize chosen adjustment method initial mmrm call calculation degrees freedom (Kenward-Roger methods) variance estimates test-statistics.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/introduction.html","id":"one-dimensional-contrasts","dir":"Articles","previous_headings":"Hypothesis testing","what":"One-dimensional contrasts","title":"Package Introduction","text":"Compute test one-dimensional (vector) contrast mmrm object Satterthwaite degrees freedom. works similarly choosing Kenward-Roger adjustment: see one-dimensional contrast, degrees freedoms identical Satterthwaite Kenward-Roger. However, standard errors different therefore p-values different. Additional options degrees freedom method Residual -Within.","code":"fit <- mmrm(   formula = FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data )  contrast <- numeric(length(component(fit, \"beta_est\"))) contrast[3] <- 1  df_1d(fit, contrast) #> $est #> [1] 5.643565 #>  #> $se #> [1] 0.6656093 #>  #> $df #> [1] 157.1382 #>  #> $t_stat #> [1] 8.478795 #>  #> $p_val #> [1] 1.564869e-14 fit_kr <- mmrm(   formula = FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data,   method = \"Kenward-Roger\" )  df_1d(fit_kr, contrast) #> $est #> [1] 5.643565 #>  #> $se #> [1] 0.6740941 #>  #> $df #> [1] 157.1382 #>  #> $t_stat #> [1] 8.372073 #>  #> $p_val #> [1] 2.931654e-14"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/introduction.html","id":"multi-dimensional-contrasts","dir":"Articles","previous_headings":"Hypothesis testing","what":"Multi-dimensional contrasts","title":"Package Introduction","text":"Compute test multi-dimensional (matrix) contrast defined mmrm object Satterthwaite degrees freedom: Kenward-Roger adjustment: see multi-dimensional contrast get slightly different denominator degrees freedom two adjustment methods. Also simpler Residual -Within method choices can used course together multidimensional contrasts.","code":"contrast <- matrix(data = 0, nrow = 2, ncol = length(component(fit, \"beta_est\"))) contrast[1, 2] <- contrast[2, 3] <- 1  df_md(fit, contrast) #> $num_df #> [1] 2 #>  #> $denom_df #> [1] 165.5553 #>  #> $f_stat #> [1] 36.91143 #>  #> $p_val #> [1] 5.544575e-14 df_md(fit_kr, contrast) #> $num_df #> [1] 2 #>  #> $denom_df #> [1] 165.5728 #>  #> $f_stat #> [1] 35.99422 #>  #> $p_val #> [1] 1.04762e-13"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/introduction.html","id":"support-for-emmeans","dir":"Articles","previous_headings":"Hypothesis testing","what":"Support for emmeans","title":"Package Introduction","text":"package includes methods allow mmrm objects used emmeans package. emmeans computes estimated marginal means (also called least-square means) coefficients MMRM. example, order see least-square means visit treatment arm: Note degrees freedom choice inherited initial mmrm fit. Furthermore, can also obtain differences treatment arms visit applying pairs() object returned emmeans() earlier: (similar like pdiff option SAS PROC MIXED.) Note use reverse argument obtain treatment minus placebo results, instead placebo minus treatment results.","code":"library(emmeans) #> mmrm() registered as emmeans extension lsmeans_by_visit <- emmeans(fit, ~ ARMCD | AVISIT) lsmeans_by_visit #> AVISIT = VIS1: #>  ARMCD emmean    SE  df lower.CL upper.CL #>  PBO     33.3 0.755 148     31.8     34.8 #>  TRT     37.1 0.763 143     35.6     38.6 #>  #> AVISIT = VIS2: #>  ARMCD emmean    SE  df lower.CL upper.CL #>  PBO     38.2 0.612 147     37.0     39.4 #>  TRT     41.9 0.602 143     40.7     43.1 #>  #> AVISIT = VIS3: #>  ARMCD emmean    SE  df lower.CL upper.CL #>  PBO     43.7 0.462 130     42.8     44.6 #>  TRT     46.8 0.509 130     45.7     47.8 #>  #> AVISIT = VIS4: #>  ARMCD emmean    SE  df lower.CL upper.CL #>  PBO     48.4 1.189 134     46.0     50.7 #>  TRT     52.8 1.188 133     50.4     55.1 #>  #> Results are averaged over the levels of: RACE, SEX  #> Confidence level used: 0.95 pairs(lsmeans_by_visit, reverse = TRUE) #> AVISIT = VIS1: #>  contrast  estimate    SE  df t.ratio p.value #>  TRT - PBO     3.77 1.074 146   3.514  0.0006 #>  #> AVISIT = VIS2: #>  contrast  estimate    SE  df t.ratio p.value #>  TRT - PBO     3.73 0.859 145   4.346  <.0001 #>  #> AVISIT = VIS3: #>  contrast  estimate    SE  df t.ratio p.value #>  TRT - PBO     3.08 0.690 131   4.467  <.0001 #>  #> AVISIT = VIS4: #>  contrast  estimate    SE  df t.ratio p.value #>  TRT - PBO     4.40 1.681 133   2.617  0.0099 #>  #> Results are averaged over the levels of: RACE, SEX"},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/introduction.html","id":"tidymodels-1","dir":"Articles","previous_headings":"Tidymodels","what":"Tidymodels","title":"Package Introduction","text":"mmrm compatible work tidymodels workflow. following example workflow constructed.","code":"library(tidymodels)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/introduction.html","id":"direct-fit","dir":"Articles","previous_headings":"Tidymodels > Tidymodels","what":"Direct fit","title":"Package Introduction","text":"First define direct method fit mmrm model using parsnip package functions linear_reg() set_engine(). linear_reg() defines model can predict numeric values predictors using linear function set_engine() used specify package system used fit model, along arguments specific software. can set method adjust degrees freedom directly call. can also pass full mmrm_control object set_engine() call:","code":"model <- linear_reg() |>   set_engine(\"mmrm\", method = \"Satterthwaite\") |>   fit(FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID), fev_data) model #> parsnip model object #>  #> mmrm fit #>  #> Formula:     FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID) #> Data:        data (used 537 observations from 197 subjects with maximum 4  #> timepoints) #> Weights:     weights #> Covariance:  unstructured (10 variance parameters) #> Inference:   REML #> Deviance:    3387.373 #>  #> Coefficients:  #>                   (Intercept) RACEBlack or African American  #>                   30.96769899                    1.50464863  #>                     RACEWhite                      ARMCDTRT  #>                    5.61309565                    3.77555734  #>                    AVISITVIS2                    AVISITVIS3  #>                    4.82858803                   10.33317002  #>                    AVISITVIS4           ARMCDTRT:AVISITVIS2  #>                   15.05255715                   -0.01737409  #>           ARMCDTRT:AVISITVIS3           ARMCDTRT:AVISITVIS4  #>                   -0.66753189                    0.63094392  #>  #> Model Inference Optimization: #> Converged with code 0 and message: convergence: rel_reduction_of_f <= factr*epsmch model_with_control <- linear_reg() |>   set_engine(\"mmrm\", control = mmrm_control(method = \"Satterthwaite\")) |>   fit(FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID), fev_data)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/introduction.html","id":"predictions","dir":"Articles","previous_headings":"Tidymodels > Tidymodels","what":"Predictions","title":"Package Introduction","text":"Lastly, can also obtain predictions predict() method: Note need explicitly pass new_data method definition allow default data set used model fitting automatically. using type = \"numeric\" default predict() customize calculations. obtain predicted values without confidence intervals standard errors. hand, using type = \"raw\" can customize calculations via opts list: result now matrix, predict() method returns mmrm objects. Note changed return tibble moment. Similarly, can also use augment() method add predicted values new data set: Note customize predict options currently supported augment() method parsnip.","code":"predict(model, new_data = fev_data) #> # A tibble: 800 × 1 #>    .pred #>    <dbl> #>  1  32.5 #>  2  40.0 #>  3  45.7 #>  4  20.5 #>  5  28.0 #>  6  31.5 #>  7  36.9 #>  8  48.8 #>  9  30.7 #> 10  36.0 #> # ℹ 790 more rows predict(   model,   new_data = fev_data,   type = \"raw\",   opts = list(se.fit = TRUE, interval = \"prediction\", nsim = 10L) ) #>          fit        se      lwr      upr #> 1   32.47877  6.597042 19.54881 45.40873 #> 2   39.97105  0.000000 39.97105 39.97105 #> 3   45.70508  4.144638 37.58174 53.82842 #> 4   20.48379  0.000000 20.48379 20.48379 #> 5   28.01243  5.597568 17.04140 38.98346 #> 6   31.45522  0.000000 31.45522 31.45522 #> 7   36.87889  0.000000 36.87889 36.87889 #> 8   48.80809  0.000000 48.80809 48.80809 #> 9   30.73774  5.748557 19.47077 42.00471 #> 10  35.98699  0.000000 35.98699 35.98699 #> 11  42.64153  3.851961 35.09182 50.19123 #> 12  37.16444  0.000000 37.16444 37.16444 #> 13  33.89229  0.000000 33.89229 33.89229 #> 14  33.74637  0.000000 33.74637 33.74637 #> 15  44.04155  3.783748 36.62554 51.45756 #> 16  54.45055  0.000000 54.45055 54.45055 #> 17  32.31386  0.000000 32.31386 32.31386 #> 18  37.31982  4.600556 28.30289 46.33674 #> 19  46.79361  0.000000 46.79361 46.79361 #> 20  41.71154  0.000000 41.71154 41.71154 #> 21  31.17198  6.148204 19.12172 43.22224 #> 22  36.63341  4.995059 26.84327 46.42354 #> 23  39.02423  0.000000 39.02423 39.02423 #> 24  47.26333 10.675479 26.33978 68.18689 #> 25  31.93050  0.000000 31.93050 31.93050 #> 26  32.90947  0.000000 32.90947 32.90947 #> 27  41.27523  3.750135 33.92510 48.62536 #> 28  48.28031  0.000000 48.28031 48.28031 #> 29  32.23021  0.000000 32.23021 32.23021 #> 30  35.91080  0.000000 35.91080 35.91080 #> 31  45.54898  0.000000 45.54898 45.54898 #> 32  53.02877  0.000000 53.02877 53.02877 #> 33  47.16898  0.000000 47.16898 47.16898 #> 34  46.64287  0.000000 46.64287 46.64287 #> 35  50.84665  3.780742 43.43653 58.25677 #> 36  58.09713  0.000000 58.09713 58.09713 #> 37  33.21881  6.132123 21.20007 45.23755 #> 38  37.68412  4.985898 27.91194 47.45630 #> 39  44.97613  0.000000 44.97613 44.97613 #> 40  47.67506 10.649621 26.80218 68.54793 #> 41  44.32755  0.000000 44.32755 44.32755 #> 42  38.97813  0.000000 38.97813 38.97813 #> 43  43.72862  0.000000 43.72862 43.72862 #> 44  46.43393  0.000000 46.43393 46.43393 #> 45  40.34576  0.000000 40.34576 40.34576 #> 46  42.76568  0.000000 42.76568 42.76568 #> 47  40.11155  0.000000 40.11155 40.11155 #> 48  49.71974 10.500331 29.13948 70.30001 #> 49  41.46341  5.994247 29.71490 53.21192 #> 50  45.73510  4.956644 36.02026 55.44995 #> 51  53.31791  0.000000 53.31791 53.31791 #> 52  56.07641  0.000000 56.07641 56.07641 #> 53  32.16382  6.124539 20.15995 44.16770 #> 54  37.14256  4.982080 27.37786 46.90726 #> 55  41.90837  0.000000 41.90837 41.90837 #> 56  47.46284 10.589307 26.70819 68.21750 #> 57  27.78883  6.082642 15.86707 39.71059 #> 58  34.13887  5.009749 24.31994 43.95780 #> 59  34.65663  0.000000 34.65663 34.65663 #> 60  39.07791  0.000000 39.07791 39.07791 #> 61  31.18775  5.649359 20.11521 42.26029 #> 62  35.89612  0.000000 35.89612 35.89612 #> 63  41.31608  3.825641 33.81796 48.81420 #> 64  47.67264  0.000000 47.67264 47.67264 #> 65  22.65440  0.000000 22.65440 22.65440 #> 66  36.35488  4.697484 27.14798 45.56178 #> 67  45.20175  3.876015 37.60490 52.79860 #> 68  40.85376  0.000000 40.85376 40.85376 #> 69  32.60048  0.000000 32.60048 32.60048 #> 70  33.64329  0.000000 33.64329 33.64329 #> 71  44.00451  3.770784 36.61391 51.39511 #> 72  40.92278  0.000000 40.92278 40.92278 #> 73  32.14831  0.000000 32.14831 32.14831 #> 74  46.43604  0.000000 46.43604 46.43604 #> 75  41.34973  0.000000 41.34973 41.34973 #> 76  66.30382  0.000000 66.30382 66.30382 #> 77  42.79902  5.733930 31.56073 54.03732 #> 78  47.95358  0.000000 47.95358 47.95358 #> 79  53.97364  0.000000 53.97364 53.97364 #> 80  56.89204 10.707631 35.90547 77.87861 #> 81  46.35384  5.783292 35.01880 57.68889 #> 82  56.64544  0.000000 56.64544 56.64544 #> 83  49.70872  0.000000 49.70872 49.70872 #> 84  60.40497  0.000000 60.40497 60.40497 #> 85  45.98525  0.000000 45.98525 45.98525 #> 86  51.90911  0.000000 51.90911 51.90911 #> 87  41.50787  0.000000 41.50787 41.50787 #> 88  53.42727  0.000000 53.42727 53.42727 #> 89  23.86859  0.000000 23.86859 23.86859 #> 90  35.98563  0.000000 35.98563 35.98563 #> 91  43.60626  0.000000 43.60626 43.60626 #> 92  44.77520 10.473678 24.24717 65.30323 #> 93  29.59773  0.000000 29.59773 29.59773 #> 94  35.50688  0.000000 35.50688 35.50688 #> 95  55.42944  0.000000 55.42944 55.42944 #> 96  52.10530  0.000000 52.10530 52.10530 #> 97  31.69644  0.000000 31.69644 31.69644 #> 98  32.16159  0.000000 32.16159 32.16159 #> 99  51.04735  0.000000 51.04735 51.04735 #> 100 55.85987  0.000000 55.85987 55.85987 #> 101 49.11706  0.000000 49.11706 49.11706 #> 102 49.25544  0.000000 49.25544 49.25544 #> 103 51.72211  0.000000 51.72211 51.72211 #> 104 69.99128  0.000000 69.99128 69.99128 #> 105 22.07169  0.000000 22.07169 22.07169 #> 106 36.35845  4.752453 27.04381 45.67309 #> 107 46.08393  0.000000 46.08393 46.08393 #> 108 52.42288  0.000000 52.42288 52.42288 #> 109 37.69466  0.000000 37.69466 37.69466 #> 110 44.59400  0.000000 44.59400 44.59400 #> 111 52.08897  0.000000 52.08897 52.08897 #> 112 58.22961  0.000000 58.22961 58.22961 #> 113 37.22824  0.000000 37.22824 37.22824 #> 114 34.39863  0.000000 34.39863 34.39863 #> 115 45.88949  3.819649 38.40312 53.37587 #> 116 36.34012  0.000000 36.34012 36.34012 #> 117 45.44182  0.000000 45.44182 45.44182 #> 118 41.54847  0.000000 41.54847 41.54847 #> 119 43.92172  0.000000 43.92172 43.92172 #> 120 61.83243  0.000000 61.83243 61.83243 #> 121 27.25656  0.000000 27.25656 27.25656 #> 122 34.77803  4.694712 25.57657 43.97950 #> 123 45.65133  0.000000 45.65133 45.65133 #> 124 44.56078 10.465319 24.04913 65.07243 #> 125 33.19334  0.000000 33.19334 33.19334 #> 126 39.72671  4.654594 30.60387 48.84955 #> 127 45.59637  3.804733 38.13923 53.05351 #> 128 41.66826  0.000000 41.66826 41.66826 #> 129 27.12753  0.000000 27.12753 27.12753 #> 130 31.74858  0.000000 31.74858 31.74858 #> 131 44.57711  3.832919 37.06473 52.08949 #> 132 41.60000  0.000000 41.60000 41.60000 #> 133 39.45250  0.000000 39.45250 39.45250 #> 134 32.61823  0.000000 32.61823 32.61823 #> 135 34.62445  0.000000 34.62445 34.62445 #> 136 45.90515  0.000000 45.90515 45.90515 #> 137 36.17780  0.000000 36.17780 36.17780 #> 138 39.79796  0.000000 39.79796 39.79796 #> 139 45.87019  3.756764 38.50707 53.23332 #> 140 50.08272  0.000000 50.08272 50.08272 #> 141 36.27753  5.787517 24.93420 47.62085 #> 142 44.64316  0.000000 44.64316 44.64316 #> 143 44.88252  3.940445 37.15939 52.60564 #> 144 39.73529  0.000000 39.73529 39.73529 #> 145 34.06164  0.000000 34.06164 34.06164 #> 146 40.18592  0.000000 40.18592 40.18592 #> 147 41.17584  0.000000 41.17584 41.17584 #> 148 57.76669  0.000000 57.76669 57.76669 #> 149 38.18460  0.000000 38.18460 38.18460 #> 150 38.61735  4.664087 29.47591 47.75880 #> 151 47.19893  0.000000 47.19893 47.19893 #> 152 48.18237 11.002531 26.61780 69.74693 #> 153 37.32785  0.000000 37.32785 37.32785 #> 154 37.89476  4.633594 28.81308 46.97644 #> 155 43.16048  0.000000 43.16048 43.16048 #> 156 41.40349  0.000000 41.40349 41.40349 #> 157 30.15733  0.000000 30.15733 30.15733 #> 158 35.84353  0.000000 35.84353 35.84353 #> 159 40.95250  0.000000 40.95250 40.95250 #> 160 46.76086 10.165464 26.83691 66.68480 #> 161 36.09804  5.672920 24.97932 47.21676 #> 162 41.37928  0.000000 41.37928 41.37928 #> 163 50.17316  0.000000 50.17316 50.17316 #> 164 45.35226  0.000000 45.35226 45.35226 #> 165 39.06491  0.000000 39.06491 39.06491 #> 166 39.39597  4.678873 30.22555 48.56640 #> 167 43.69372  3.825391 36.19610 51.19135 #> 168 42.11960  0.000000 42.11960 42.11960 #> 169 29.81042  0.000000 29.81042 29.81042 #> 170 42.57055  0.000000 42.57055 42.57055 #> 171 47.81652  0.000000 47.81652 47.81652 #> 172 68.06024  0.000000 68.06024 68.06024 #> 173 35.62071  0.000000 35.62071 35.62071 #> 174 40.83933  4.673032 31.68036 49.99831 #> 175 45.83438  3.820220 38.34689 53.32188 #> 176 51.72310 10.386162 31.36659 72.07960 #> 177 33.89134  0.000000 33.89134 33.89134 #> 178 36.42808  0.000000 36.42808 36.42808 #> 179 37.57519  0.000000 37.57519 37.57519 #> 180 58.46873  0.000000 58.46873 58.46873 #> 181 19.54516  0.000000 19.54516 19.54516 #> 182 31.13541  0.000000 31.13541 31.13541 #> 183 40.89955  0.000000 40.89955 40.89955 #> 184 42.08852 10.663482 21.18848 62.98856 #> 185 22.18809  0.000000 22.18809 22.18809 #> 186 41.05857  0.000000 41.05857 41.05857 #> 187 37.32452  0.000000 37.32452 37.32452 #> 188 47.28633 11.876279 24.00925 70.56341 #> 189 35.28933  5.751681 24.01625 46.56242 #> 190 43.12432  0.000000 43.12432 43.12432 #> 191 41.99349  0.000000 41.99349 41.99349 #> 192 49.12250 10.656310 28.23651 70.00848 #> 193 44.03080  0.000000 44.03080 44.03080 #> 194 38.66417  0.000000 38.66417 38.66417 #> 195 53.45993  0.000000 53.45993 53.45993 #> 196 53.14026 11.322147 30.94926 75.33127 #> 197 29.81948  0.000000 29.81948 29.81948 #> 198 30.43859  0.000000 30.43859 30.43859 #> 199 40.18095  0.000000 40.18095 40.18095 #> 200 48.07272 10.730881 27.04058 69.10486 #> 201 26.78578  0.000000 26.78578 26.78578 #> 202 34.55115  0.000000 34.55115 34.55115 #> 203 44.66449  3.818151 37.18105 52.14793 #> 204 40.06421  0.000000 40.06421 40.06421 #> 205 36.66313  5.692612 25.50582 47.82045 #> 206 43.09329  0.000000 43.09329 43.09329 #> 207 46.09670  3.862445 38.52645 53.66695 #> 208 45.71567  0.000000 45.71567 45.71567 #> 209 40.74992  0.000000 40.74992 40.74992 #> 210 44.74635  0.000000 44.74635 44.74635 #> 211 47.51420  3.806254 40.05408 54.97432 #> 212 53.24620 10.356163 32.94849 73.54390 #> 213 40.35635  6.341861 27.92653 52.78617 #> 214 45.16757  5.066752 35.23691 55.09822 #> 215 50.02199  3.953162 42.27393 57.77005 #> 216 56.03985 10.747892 34.97437 77.10533 #> 217 40.14674  0.000000 40.14674 40.14674 #> 218 48.75859  0.000000 48.75859 48.75859 #> 219 46.43462  0.000000 46.43462 46.43462 #> 220 53.05319 10.740726 32.00175 74.10462 #> 221 29.33990  0.000000 29.33990 29.33990 #> 222 36.24424  4.623367 27.18261 45.30588 #> 223 42.39946  3.778756 34.99324 49.80569 #> 224 47.93165  0.000000 47.93165 47.93165 #> 225 36.59443  5.532229 25.75146 47.43740 #> 226 41.11632  0.000000 41.11632 41.11632 #> 227 47.05889  0.000000 47.05889 47.05889 #> 228 52.24599  0.000000 52.24599 52.24599 #> 229 45.12054  5.799549 33.75364 56.48745 #> 230 54.14236  0.000000 54.14236 54.14236 #> 231 50.44618  0.000000 50.44618 50.44618 #> 232 58.53593 10.933464 37.10674 79.96513 #> 233 37.53657  0.000000 37.53657 37.53657 #> 234 44.28282  4.604412 35.25834 53.30730 #> 235 49.45840  0.000000 49.45840 49.45840 #> 236 59.12866  0.000000 59.12866 59.12866 #> 237 40.31268  0.000000 40.31268 40.31268 #> 238 39.66049  0.000000 39.66049 39.66049 #> 239 50.89726  0.000000 50.89726 50.89726 #> 240 56.13116  0.000000 56.13116 56.13116 #> 241 32.82981  0.000000 32.82981 32.82981 #> 242 46.53837  0.000000 46.53837 46.53837 #> 243 44.46016  3.775122 37.06106 51.85927 #> 244 51.81265  0.000000 51.81265 51.81265 #> 245 27.76886  5.876695 16.25075 39.28698 #> 246 29.91939  0.000000 29.91939 29.91939 #> 247 40.70944  3.900847 33.06392 48.35496 #> 248 44.37942 10.776593 23.25768 65.50115 #> 249 43.47695  5.922196 31.86966 55.08424 #> 250 51.05656  0.000000 51.05656 51.05656 #> 251 50.50059  0.000000 50.50059 50.50059 #> 252 64.11388  0.000000 64.11388 64.11388 #> 253 32.21843  0.000000 32.21843 32.21843 #> 254 29.64732  0.000000 29.64732 29.64732 #> 255 42.48707  3.773569 35.09101 49.88312 #> 256 45.09919  0.000000 45.09919 45.09919 #> 257 39.75659  0.000000 39.75659 39.75659 #> 258 37.28894  0.000000 37.28894 37.28894 #> 259 44.80145  0.000000 44.80145 44.80145 #> 260 65.95920  0.000000 65.95920 65.95920 #> 261 33.43439  0.000000 33.43439 33.43439 #> 262 33.57042  0.000000 33.57042 33.57042 #> 263 39.91543  0.000000 39.91543 39.91543 #> 264 49.57098  0.000000 49.57098 49.57098 #> 265 38.91634  0.000000 38.91634 38.91634 #> 266 36.69011  0.000000 36.69011 36.69011 #> 267 45.66665  0.000000 45.66665 45.66665 #> 268 52.07431  0.000000 52.07431 52.07431 #> 269 42.21411  0.000000 42.21411 42.21411 #> 270 45.02901  0.000000 45.02901 45.02901 #> 271 50.22530  3.791640 42.79383 57.65678 #> 272 56.56084 10.278348 36.41565 76.70603 #> 273 30.98338  0.000000 30.98338 30.98338 #> 274 44.72932  0.000000 44.72932 44.72932 #> 275 40.68711  0.000000 40.68711 40.68711 #> 276 34.71530  0.000000 34.71530 34.71530 #> 277 27.30752  0.000000 27.30752 27.30752 #> 278 37.31585  0.000000 37.31585 37.31585 #> 279 42.23592  3.759776 34.86689 49.60495 #> 280 44.83000  0.000000 44.83000 44.83000 #> 281 32.93042  0.000000 32.93042 32.93042 #> 282 44.91911  0.000000 44.91911 44.91911 #> 283 45.68636  0.000000 45.68636 45.68636 #> 284 65.98800  0.000000 65.98800 65.98800 #> 285 46.60130  0.000000 46.60130 46.60130 #> 286 40.89786  0.000000 40.89786 40.89786 #> 287 46.66708  0.000000 46.66708 46.66708 #> 288 53.97575 11.149688 32.12277 75.82874 #> 289 34.51394  6.010715 22.73316 46.29473 #> 290 40.31956  4.975761 30.56725 50.07187 #> 291 43.83270  0.000000 43.83270 43.83270 #> 292 44.11604  0.000000 44.11604 44.11604 #> 293 38.29612  0.000000 38.29612 38.29612 #> 294 42.38074  4.635575 33.29518 51.46630 #> 295 51.38570  0.000000 51.38570 51.38570 #> 296 56.20979  0.000000 56.20979 56.20979 #> 297 35.93809  5.716738 24.73349 47.14269 #> 298 43.45819  0.000000 43.45819 43.45819 #> 299 38.38741  0.000000 38.38741 38.38741 #> 300 56.42818  0.000000 56.42818 56.42818 #> 301 39.05050  0.000000 39.05050 39.05050 #> 302 44.66707  4.620403 35.61124 53.72289 #> 303 49.86836  3.779447 42.46078 57.27594 #> 304 54.09200  0.000000 54.09200 54.09200 #> 305 31.40521  0.000000 31.40521 31.40521 #> 306 46.13330  0.000000 46.13330 46.13330 #> 307 45.29845  0.000000 45.29845 45.29845 #> 308 28.06936  0.000000 28.06936 28.06936 #> 309 39.05960  5.609423 28.06533 50.05387 #> 310 42.50283  0.000000 42.50283 42.50283 #> 311 46.45368  0.000000 46.45368 46.45368 #> 312 64.97366  0.000000 64.97366 64.97366 #> 313 30.67876  6.146096 18.63263 42.72489 #> 314 35.63991  5.014149 25.81236 45.46746 #> 315 41.27878  3.894391 33.64592 48.91165 #> 316 43.97847  0.000000 43.97847 43.97847 #> 317 35.33466  0.000000 35.33466 35.33466 #> 318 39.34378  0.000000 39.34378 39.34378 #> 319 41.27633  0.000000 41.27633 41.27633 #> 320 50.74572 10.179152 30.79495 70.69649 #> 321 34.18429  5.600519 23.20748 45.16111 #> 322 39.83058  0.000000 39.83058 39.83058 #> 323 43.49673  0.000000 43.49673 43.49673 #> 324 44.06114  0.000000 44.06114 44.06114 #> 325 41.43742  0.000000 41.43742 41.43742 #> 326 40.68384  4.621386 31.62609 49.74159 #> 327 46.16954  0.000000 46.16954 46.16954 #> 328 54.24024  0.000000 54.24024 54.24024 #> 329 36.61831  0.000000 36.61831 36.61831 #> 330 42.09272  0.000000 42.09272 42.09272 #> 331 50.69556  0.000000 50.69556 50.69556 #> 332 51.72563  0.000000 51.72563 51.72563 #> 333 32.08271  6.196018 19.93874 44.22668 #> 334 36.39974  5.035745 26.52986 46.26962 #> 335 41.38610  3.907053 33.72842 49.04378 #> 336 53.89947  0.000000 53.89947 53.89947 #> 337 31.94884  6.056050 20.07920 43.81848 #> 338 36.34138  4.976628 26.58737 46.09539 #> 339 39.94420  0.000000 39.94420 39.94420 #> 340 56.42482  0.000000 56.42482 56.42482 #> 341 41.86385  0.000000 41.86385 41.86385 #> 342 34.56420  0.000000 34.56420 34.56420 #> 343 38.68927  0.000000 38.68927 38.68927 #> 344 62.88743  0.000000 62.88743 62.88743 #> 345 28.85343  0.000000 28.85343 28.85343 #> 346 38.89808  4.719128 29.64876 48.14741 #> 347 49.29495  0.000000 49.29495 49.29495 #> 348 48.90884 10.547147 28.23681 69.58087 #> 349 28.74029  0.000000 28.74029 28.74029 #> 350 36.38836  4.693034 27.19018 45.58653 #> 351 43.59994  0.000000 43.59994 43.59994 #> 352 57.38616  0.000000 57.38616 57.38616 #> 353 35.36824  0.000000 35.36824 35.36824 #> 354 43.06110  0.000000 43.06110 43.06110 #> 355 31.27551  0.000000 31.27551 31.27551 #> 356 54.13245  0.000000 54.13245 54.13245 #> 357 25.97050  0.000000 25.97050 25.97050 #> 358 34.04514  4.685170 24.86238 43.22791 #> 359 40.67015  3.822493 33.17820 48.16210 #> 360 44.36054 10.502085 23.77684 64.94425 #> 361 39.69391  6.032977 27.86950 51.51833 #> 362 44.79720  4.966395 35.06325 54.53116 #> 363 51.17493  0.000000 51.17493 51.17493 #> 364 48.44043  0.000000 48.44043 48.44043 #> 365 43.33128  0.000000 43.33128 43.33128 #> 366 46.45918  4.614377 37.41517 55.50320 #> 367 55.93546  0.000000 55.93546 55.93546 #> 368 54.15312  0.000000 54.15312 54.15312 #> 369 33.79699  5.577173 22.86593 44.72805 #> 370 40.60252  0.000000 40.60252 40.60252 #> 371 44.44715  0.000000 44.44715 44.44715 #> 372 40.54161  0.000000 40.54161 40.54161 #> 373 33.95563  0.000000 33.95563 33.95563 #> 374 36.84083  4.598866 27.82721 45.85444 #> 375 43.67802  0.000000 43.67802 43.67802 #> 376 42.76023  0.000000 42.76023 42.76023 #> 377 34.18486  5.773366 22.86927 45.50045 #> 378 42.82678  0.000000 42.82678 42.82678 #> 379 39.59218  0.000000 39.59218 39.59218 #> 380 47.93427 10.750071 26.86451 69.00402 #> 381 33.49216  0.000000 33.49216 33.49216 #> 382 35.39266  0.000000 35.39266 35.39266 #> 383 42.88943  3.750905 35.53780 50.24107 #> 384 42.36266  0.000000 42.36266 42.36266 #> 385 48.54368  0.000000 48.54368 48.54368 #> 386 43.94366  0.000000 43.94366 43.94366 #> 387 50.98218  3.856793 43.42301 58.54136 #> 388 47.91204  0.000000 47.91204 47.91204 #> 389 20.72928  0.000000 20.72928 20.72928 #> 390 28.00599  0.000000 28.00599 28.00599 #> 391 40.19255  0.000000 40.19255 40.19255 #> 392 37.79360  0.000000 37.79360 37.79360 #> 393 32.17343  5.839839 20.72756 43.61931 #> 394 36.75177  0.000000 36.75177 36.75177 #> 395 42.75025  3.876767 35.15193 50.34858 #> 396 47.37158 10.625479 26.54602 68.19713 #> 397 34.59822  0.000000 34.59822 34.59822 #> 398 39.32034  0.000000 39.32034 39.32034 #> 399 40.65702  0.000000 40.65702 40.65702 #> 400 48.52002 10.155415 28.61577 68.42426 #> 401 40.41786  5.747438 29.15309 51.68263 #> 402 43.03255  0.000000 43.03255 43.03255 #> 403 54.65715  0.000000 54.65715 54.65715 #> 404 55.54195 10.725181 34.52098 76.56291 #> 405 35.55742  0.000000 35.55742 35.55742 #> 406 43.70215  0.000000 43.70215 43.70215 #> 407 42.52157  0.000000 42.52157 42.52157 #> 408 54.89337  0.000000 54.89337 54.89337 #> 409 32.03460  0.000000 32.03460 32.03460 #> 410 29.45107  0.000000 29.45107 29.45107 #> 411 45.35138  0.000000 45.35138 45.35138 #> 412 45.33026 10.680741 24.39639 66.26412 #> 413 38.73784  0.000000 38.73784 38.73784 #> 414 39.30063  4.628047 30.22982 48.37143 #> 415 41.42283  0.000000 41.42283 41.42283 #> 416 47.32385  0.000000 47.32385 47.32385 #> 417 40.41284  5.765932 29.11182 51.71386 #> 418 47.55310  0.000000 47.55310 47.55310 #> 419 49.06509  0.000000 49.06509 49.06509 #> 420 53.79511 10.835026 32.55885 75.03137 #> 421 29.22591  0.000000 29.22591 29.22591 #> 422 40.08175  0.000000 40.08175 40.08175 #> 423 45.68142  0.000000 45.68142 45.68142 #> 424 41.47403  0.000000 41.47403 41.47403 #> 425 37.55612  6.313792 25.18132 49.93092 #> 426 41.98123  5.069835 32.04453 51.91792 #> 427 42.51970  0.000000 42.51970 42.51970 #> 428 69.36099  0.000000 69.36099 69.36099 #> 429 42.39760  0.000000 42.39760 42.39760 #> 430 43.72376  0.000000 43.72376 43.72376 #> 431 49.47601  0.000000 49.47601 49.47601 #> 432 51.94188  0.000000 51.94188 51.94188 #> 433 31.77722  5.712935 20.58007 42.97437 #> 434 40.59100  0.000000 40.59100 40.59100 #> 435 39.97833  0.000000 39.97833 39.97833 #> 436 31.69049  0.000000 31.69049 31.69049 #> 437 33.99809  5.718537 22.78996 45.20622 #> 438 37.20517  0.000000 37.20517 37.20517 #> 439 46.28740  0.000000 46.28740 46.28740 #> 440 49.81365 10.541258 29.15316 70.47413 #> 441 35.15913  6.240422 22.92813 47.39014 #> 442 40.63997  5.064102 30.71451 50.56543 #> 443 46.80529  3.944402 39.07441 54.53618 #> 444 41.58720  0.000000 41.58720 41.58720 #> 445 32.17365  0.000000 32.17365 32.17365 #> 446 37.07479  4.643827 27.97306 46.17653 #> 447 40.69375  0.000000 40.69375 40.69375 #> 448 47.52336 10.294250 27.34700 67.69972 #> 449 32.28771  0.000000 32.28771 32.28771 #> 450 41.76205  0.000000 41.76205 41.76205 #> 451 40.06768  0.000000 40.06768 40.06768 #> 452 47.21582 10.357533 26.91543 67.51622 #> 453 29.14213  0.000000 29.14213 29.14213 #> 454 39.50989  0.000000 39.50989 39.50989 #> 455 43.32349  0.000000 43.32349 43.32349 #> 456 47.16756  0.000000 47.16756 47.16756 #> 457 40.93020  0.000000 40.93020 40.93020 #> 458 42.19406  0.000000 42.19406 42.19406 #> 459 41.21057  0.000000 41.21057 41.21057 #> 460 49.76205 10.573444 29.03849 70.48562 #> 461 38.54330  0.000000 38.54330 38.54330 #> 462 41.44104  4.674910 32.27838 50.60369 #> 463 43.96324  0.000000 43.96324 43.96324 #> 464 42.67652  0.000000 42.67652 42.67652 #> 465 22.79584  0.000000 22.79584 22.79584 #> 466 33.91004  4.713715 24.67133 43.14875 #> 467 41.58421  3.863378 34.01212 49.15629 #> 468 44.31106 10.826159 23.09218 65.52994 #> 469 31.43559  0.000000 31.43559 31.43559 #> 470 38.85064  0.000000 38.85064 38.85064 #> 471 48.24288  0.000000 48.24288 48.24288 #> 472 46.15940 10.680516 25.22597 67.09283 #> 473 44.71302  0.000000 44.71302 44.71302 #> 474 51.85370  0.000000 51.85370 51.85370 #> 475 50.77548  3.827838 43.27306 58.27791 #> 476 58.11432 10.539851 37.45659 78.77205 #> 477 30.56757  0.000000 30.56757 30.56757 #> 478 35.65607  4.672016 26.49909 44.81305 #> 479 41.25037  3.806722 33.78933 48.71141 #> 480 45.88736 10.385438 25.53228 66.24245 #> 481 37.37624  6.196290 25.23173 49.52074 #> 482 41.66978  5.041648 31.78833 51.55123 #> 483 45.99979  3.925392 38.30617 53.69342 #> 484 59.90473  0.000000 59.90473 59.90473 #> 485 33.87728  6.250441 21.62664 46.12792 #> 486 37.28988  5.057180 27.37799 47.20177 #> 487 49.76150  0.000000 49.76150 49.76150 #> 488 46.60552 11.240815 24.57393 68.63711 #> 489 47.21985  0.000000 47.21985 47.21985 #> 490 40.34525  0.000000 40.34525 40.34525 #> 491 48.29793  0.000000 48.29793 48.29793 #> 492 54.57153 11.120461 32.77583 76.36723 #> 493 36.13680  5.576096 25.20786 47.06575 #> 494 44.39634  0.000000 44.39634 44.39634 #> 495 41.71421  0.000000 41.71421 41.71421 #> 496 47.37535  0.000000 47.37535 47.37535 #> 497 42.03797  0.000000 42.03797 42.03797 #> 498 37.56100  0.000000 37.56100 37.56100 #> 499 45.11793  0.000000 45.11793 45.11793 #> 500 52.86788 10.658388 31.97782 73.75794 #> 501 34.62530  0.000000 34.62530 34.62530 #> 502 45.28206  0.000000 45.28206 45.28206 #> 503 44.51505  3.782415 37.10165 51.92844 #> 504 63.57761  0.000000 63.57761 63.57761 #> 505 35.80878  0.000000 35.80878 35.80878 #> 506 40.93038  4.619125 31.87707 49.98370 #> 507 45.85156  3.781237 38.44047 53.26265 #> 508 52.67314  0.000000 52.67314 52.67314 #> 509 35.88734  0.000000 35.88734 35.88734 #> 510 38.73222  0.000000 38.73222 38.73222 #> 511 46.70361  0.000000 46.70361 46.70361 #> 512 53.65398  0.000000 53.65398 53.65398 #> 513 36.71543  0.000000 36.71543 36.71543 #> 514 43.89170  4.681157 34.71680 53.06659 #> 515 49.56246  3.823862 42.06782 57.05709 #> 516 54.83060 10.432472 34.38333 75.27787 #> 517 37.85241  5.735177 26.61167 49.09315 #> 518 41.54317  0.000000 41.54317 41.54317 #> 519 51.67909  0.000000 51.67909 51.67909 #> 520 51.76691 10.726745 30.74287 72.79094 #> 521 27.40130  0.000000 27.40130 27.40130 #> 522 30.33517  0.000000 30.33517 30.33517 #> 523 37.73092  0.000000 37.73092 37.73092 #> 524 29.11668  0.000000 29.11668 29.11668 #> 525 30.03596  5.581874 19.09569 40.97623 #> 526 32.08830  0.000000 32.08830 32.08830 #> 527 41.66067  0.000000 41.66067 41.66067 #> 528 53.90815  0.000000 53.90815 53.90815 #> 529 34.02622  5.583689 23.08239 44.97005 #> 530 35.06937  0.000000 35.06937 35.06937 #> 531 47.17615  0.000000 47.17615 47.17615 #> 532 56.49347  0.000000 56.49347 56.49347 #> 533 34.02880  5.592064 23.06856 44.98904 #> 534 38.88006  0.000000 38.88006 38.88006 #> 535 47.54070  0.000000 47.54070 47.54070 #> 536 43.53705  0.000000 43.53705 43.53705 #> 537 31.82054  0.000000 31.82054 31.82054 #> 538 39.62816  0.000000 39.62816 39.62816 #> 539 44.95543  0.000000 44.95543 44.95543 #> 540 21.11543  0.000000 21.11543 21.11543 #> 541 34.74671  0.000000 34.74671 34.74671 #> 542 43.27308  4.643477 34.17203 52.37413 #> 543 49.29538  3.801055 41.84545 56.74531 #> 544 56.69249  0.000000 56.69249 56.69249 #> 545 22.73126  0.000000 22.73126 22.73126 #> 546 32.50075  0.000000 32.50075 32.50075 #> 547 42.37206  0.000000 42.37206 42.37206 #> 548 42.89847  0.000000 42.89847 42.89847 #> 549 55.62582  0.000000 55.62582 55.62582 #> 550 45.38998  0.000000 45.38998 45.38998 #> 551 52.66743  0.000000 52.66743 52.66743 #> 552 56.87348 13.266696 30.87124 82.87573 #> 553 30.66032  6.219698 18.46993 42.85070 #> 554 37.44228  5.077309 27.49094 47.39362 #> 555 34.18931  0.000000 34.18931 34.18931 #> 556 45.59740  0.000000 45.59740 45.59740 #> 557 28.89198  0.000000 28.89198 28.89198 #> 558 38.46147  0.000000 38.46147 38.46147 #> 559 42.42099  3.758768 35.05394 49.78804 #> 560 49.90357  0.000000 49.90357 49.90357 #> 561 39.74586  5.650912 28.67028 50.82144 #> 562 44.14167  0.000000 44.14167 44.14167 #> 563 49.91712  3.835237 42.40020 57.43405 #> 564 55.24278  0.000000 55.24278 55.24278 #> 565 36.24790  6.341405 23.81898 48.67683 #> 566 41.05912  5.066433 31.12909 50.98914 #> 567 45.91354  3.957584 38.15682 53.67027 #> 568 51.93141 10.750508 30.86080 73.00201 #> 569 27.38001  0.000000 27.38001 27.38001 #> 570 33.63251  0.000000 33.63251 33.63251 #> 571 44.70168  3.816977 37.22054 52.18282 #> 572 39.34410  0.000000 39.34410 39.34410 #> 573 26.98575  0.000000 26.98575 26.98575 #> 574 24.04175  0.000000 24.04175 24.04175 #> 575 42.16648  0.000000 42.16648 42.16648 #> 576 44.75380  0.000000 44.75380 44.75380 #> 577 31.55469  0.000000 31.55469 31.55469 #> 578 44.42696  0.000000 44.42696 44.42696 #> 579 44.10343  0.000000 44.10343 44.10343 #> 580 48.06505 10.636330 27.21823 68.91188 #> 581 34.87547  5.567314 23.96373 45.78720 #> 582 37.87445  0.000000 37.87445 37.87445 #> 583 48.31828  0.000000 48.31828 48.31828 #> 584 50.21520  0.000000 50.21520 50.21520 #> 585 41.94615  0.000000 41.94615 41.94615 #> 586 39.62690  0.000000 39.62690 39.62690 #> 587 46.69763  0.000000 46.69763 46.69763 #> 588 49.44653 11.200123 27.49469 71.39836 #> 589 38.01775  5.716119 26.81436 49.22113 #> 590 43.75255  0.000000 43.75255 43.75255 #> 591 47.38873  0.000000 47.38873 47.38873 #> 592 52.70780 10.559801 32.01096 73.40463 #> 593 32.43412  0.000000 32.43412 32.43412 #> 594 43.07163  0.000000 43.07163 43.07163 #> 595 42.99551  0.000000 42.99551 42.99551 #> 596 53.82759  0.000000 53.82759 53.82759 #> 597 39.45747  6.093558 27.51431 51.40062 #> 598 42.93167  5.023402 33.08598 52.77735 #> 599 50.64802  0.000000 50.64802 50.64802 #> 600 63.44051  0.000000 63.44051 63.44051 #> 601 34.48949  0.000000 34.48949 34.48949 #> 602 40.08056  0.000000 40.08056 40.08056 #> 603 41.86656  3.760166 34.49677 49.23635 #> 604 47.46553  0.000000 47.46553 47.46553 #> 605 32.03992  5.900764 20.47464 43.60521 #> 606 37.11697  0.000000 37.11697 37.11697 #> 607 44.12071  3.891287 36.49393 51.74749 #> 608 36.25120  0.000000 36.25120 36.25120 #> 609 29.20171  0.000000 29.20171 29.20171 #> 610 31.53773  0.000000 31.53773 31.53773 #> 611 42.35683  0.000000 42.35683 42.35683 #> 612 64.78352  0.000000 64.78352 64.78352 #> 613 32.72757  0.000000 32.72757 32.72757 #> 614 37.50022  0.000000 37.50022 37.50022 #> 615 42.76167  3.774605 35.36358 50.15976 #> 616 57.03861  0.000000 57.03861 57.03861 #> 617 36.32475  0.000000 36.32475 36.32475 #> 618 40.15241  4.606191 31.12444 49.18038 #> 619 41.46725  0.000000 41.46725 41.46725 #> 620 59.01411  0.000000 59.01411 59.01411 #> 621 30.14970  0.000000 30.14970 30.14970 #> 622 34.91740  0.000000 34.91740 34.91740 #> 623 52.13900  0.000000 52.13900 52.13900 #> 624 58.73839  0.000000 58.73839 58.73839 #> 625 35.83185  0.000000 35.83185 35.83185 #> 626 41.04423  4.630729 31.96817 50.12029 #> 627 45.82688  3.788474 38.40160 53.25215 #> 628 56.41409  0.000000 56.41409 56.41409 #> 629 37.80184  5.603360 26.81945 48.78422 #> 630 43.55593  0.000000 43.55593 43.55593 #> 631 44.26320  0.000000 44.26320 44.26320 #> 632 59.25579  0.000000 59.25579 59.25579 #> 633 28.47314  0.000000 28.47314 28.47314 #> 634 47.47581  0.000000 47.47581 47.47581 #> 635 44.01685  3.838137 36.49424 51.53946 #> 636 49.57489 11.420569 27.19098 71.95879 #> 637 39.38085  5.735344 28.13978 50.62192 #> 638 46.47483  0.000000 46.47483 46.47483 #> 639 51.22677  0.000000 51.22677 51.22677 #> 640 45.82777  0.000000 45.82777 45.82777 #> 641 33.43408  5.845841 21.97644 44.89172 #> 642 39.06783  0.000000 39.06783 39.06783 #> 643 42.98333  3.876119 35.38628 50.58039 #> 644 48.01822 10.646154 27.15215 68.88430 #> 645 29.99542  0.000000 29.99542 29.99542 #> 646 35.69583  4.661185 26.56008 44.83159 #> 647 41.11547  3.792202 33.68289 48.54805 #> 648 54.17796  0.000000 54.17796 54.17796 #> 649 39.32289  5.814683 27.92632 50.71946 #> 650 44.55743  0.000000 44.55743 44.55743 #> 651 47.26282  3.853349 39.71039 54.81524 #> 652 62.59579  0.000000 62.59579 62.59579 #> 653 31.80300  5.533889 20.95678 42.64923 #> 654 35.48396  0.000000 35.48396 35.48396 #> 655 44.07768  0.000000 44.07768 44.07768 #> 656 46.57837  0.000000 46.57837 46.57837 #> 657 47.67979  0.000000 47.67979 47.67979 #> 658 47.73388  4.693847 38.53411 56.93365 #> 659 50.94631  3.840944 43.41820 58.47442 #> 660 58.47218 10.736580 37.42887 79.51549 #> 661 22.15439  0.000000 22.15439 22.15439 #> 662 35.14301  4.747843 25.83741 44.44862 #> 663 42.82000  3.902246 35.17174 50.46827 #> 664 46.24563 11.140610 24.41044 68.08083 #> 665 34.27765  0.000000 34.27765 34.27765 #> 666 36.90059  0.000000 36.90059 36.90059 #> 667 43.05627  3.763618 35.67971 50.43282 #> 668 40.54285  0.000000 40.54285 40.54285 #> 669 29.09494  0.000000 29.09494 29.09494 #> 670 37.21768  0.000000 37.21768 37.21768 #> 671 43.08491  0.000000 43.08491 43.08491 #> 672 46.50100 10.178571 26.55137 66.45063 #> 673 27.12174  0.000000 27.12174 27.12174 #> 674 34.11916  0.000000 34.11916 34.11916 #> 675 45.56320  3.869846 37.97845 53.14796 #> 676 48.00823 10.671138 27.09318 68.92327 #> 677 35.93048  5.761078 24.63898 47.22199 #> 678 40.80230  0.000000 40.80230 40.80230 #> 679 45.89269  0.000000 45.89269 45.89269 #> 680 43.69153  0.000000 43.69153 43.69153 #> 681 28.56569  5.758633 17.27898 39.85240 #> 682 29.22869  0.000000 29.22869 29.22869 #> 683 40.67646  3.935694 32.96264 48.39028 #> 684 55.68362  0.000000 55.68362 55.68362 #> 685 31.90698  0.000000 31.90698 31.90698 #> 686 37.31061  0.000000 37.31061 37.31061 #> 687 40.75546  0.000000 40.75546 40.75546 #> 688 49.50911 10.264240 29.39157 69.62665 #> 689 42.19474  0.000000 42.19474 42.19474 #> 690 44.87228  0.000000 44.87228 44.87228 #> 691 47.55198  0.000000 47.55198 47.55198 #> 692 56.68097 10.179204 36.73010 76.63184 #> 693 50.62894  0.000000 50.62894 50.62894 #> 694 45.47551  0.000000 45.47551 45.47551 #> 695 48.62168  0.000000 48.62168 48.62168 #> 696 56.58212 11.403253 34.23216 78.93208 #> 697 29.66493  0.000000 29.66493 29.66493 #> 698 34.57406  0.000000 34.57406 34.57406 #> 699 42.45295  3.759694 35.08408 49.82181 #> 700 38.11676  0.000000 38.11676 38.11676 #> 701 33.77204  0.000000 33.77204 33.77204 #> 702 34.26148  0.000000 34.26148 34.26148 #> 703 45.29511  3.843793 37.76141 52.82880 #> 704 58.81037  0.000000 58.81037 58.81037 #> 705 31.46668  6.138068 19.43629 43.49708 #> 706 36.78469  4.989530 27.00539 46.56399 #> 707 39.88119  0.000000 39.88119 39.88119 #> 708 47.32261 10.635509 26.47740 68.16783 #> 709 31.62708  0.000000 31.62708 31.62708 #> 710 37.03239  4.617467 27.98232 46.08246 #> 711 42.69162  3.769091 35.30433 50.07890 #> 712 48.22049  0.000000 48.22049 48.22049 #> 713 42.58829  0.000000 42.58829 42.58829 #> 714 45.80410  4.599826 36.78861 54.81959 #> 715 49.33262  0.000000 49.33262 49.33262 #> 716 53.74331  0.000000 53.74331 53.74331 #> 717 29.71857  0.000000 29.71857 29.71857 #> 718 30.45651  0.000000 30.45651 30.45651 #> 719 38.29800  0.000000 38.29800 38.29800 #> 720 45.15328 10.384176 24.80067 65.50589 #> 721 36.81040  0.000000 36.81040 36.81040 #> 722 37.61606  4.651945 28.49842 46.73371 #> 723 42.35045  0.000000 42.35045 42.35045 #> 724 39.39860  0.000000 39.39860 39.39860 #> 725 36.09876  6.126345 24.09134 48.10617 #> 726 40.94066  4.989280 31.16185 50.71947 #> 727 49.73629  0.000000 49.73629 49.73629 #> 728 41.58082  0.000000 41.58082 41.58082 #> 729 43.58901  0.000000 43.58901 43.58901 #> 730 40.16762  0.000000 40.16762 40.16762 #> 731 46.70338  3.814471 39.22716 54.17961 #> 732 53.94830 10.750356 32.87799 75.01862 #> 733 39.60913  5.778258 28.28395 50.93430 #> 734 41.08206  0.000000 41.08206 41.08206 #> 735 49.65683  3.929652 41.95486 57.35881 #> 736 69.37409  0.000000 69.37409 69.37409 #> 737 34.12096  5.593960 23.15700 45.08492 #> 738 41.27625  0.000000 41.27625 41.27625 #> 739 44.76138  0.000000 44.76138 44.76138 #> 740 39.69815  0.000000 39.69815 39.69815 #> 741 38.44296  0.000000 38.44296 38.44296 #> 742 48.20586  0.000000 48.20586 48.20586 #> 743 47.54082  3.959125 39.78108 55.30056 #> 744 35.50735  0.000000 35.50735 35.50735 #> 745 32.08153  0.000000 32.08153 32.08153 #> 746 37.16398  4.670384 28.01020 46.31777 #> 747 42.75619  3.806533 35.29552 50.21686 #> 748 47.39510 10.384921 27.04103 67.74917 #> 749 44.69256  0.000000 44.69256 44.69256 #> 750 41.45664  4.743254 32.16004 50.75325 #> 751 42.18689  0.000000 42.18689 42.18689 #> 752 51.68534 11.039633 30.04806 73.32262 #> 753 37.01741  0.000000 37.01741 37.01741 #> 754 38.26920  0.000000 38.26920 38.26920 #> 755 49.28806  0.000000 49.28806 49.28806 #> 756 50.67485 10.475900 30.14247 71.20724 #> 757 40.45953  0.000000 40.45953 40.45953 #> 758 45.10337  0.000000 45.10337 45.10337 #> 759 45.58250  0.000000 45.58250 45.58250 #> 760 62.96989  0.000000 62.96989 62.96989 #> 761 30.78252  0.000000 30.78252 30.78252 #> 762 41.58139  4.669080 32.43016 50.73262 #> 763 48.87398  3.830319 41.36669 56.38126 #> 764 44.69667  0.000000 44.69667 44.69667 #> 765 32.72491  0.000000 32.72491 32.72491 #> 766 45.78702  0.000000 45.78702 45.78702 #> 767 48.74886  0.000000 48.74886 48.74886 #> 768 84.08449  0.000000 84.08449 84.08449 #> 769 28.60809  5.786327 17.26710 39.94908 #> 770 30.19495  0.000000 30.19495 30.19495 #> 771 36.78573  0.000000 36.78573 36.78573 #> 772 61.03588  0.000000 61.03588 61.03588 #> 773 20.36749  0.000000 20.36749 20.36749 #> 774 35.22480  0.000000 35.22480 35.22480 #> 775 37.42847  0.000000 37.42847 37.42847 #> 776 30.20501  0.000000 30.20501 30.20501 #> 777 41.72819  5.735646 30.48653 52.96985 #> 778 49.12862  0.000000 49.12862 49.12862 #> 779 47.31234  0.000000 47.31234 47.31234 #> 780 57.08286 10.616485 36.27493 77.89078 #> 781 19.28388  0.000000 19.28388 19.28388 #> 782 30.00682  0.000000 30.00682 30.00682 #> 783 39.69711  3.902999 32.04738 47.34685 #> 784 49.21768  0.000000 49.21768 49.21768 #> 785 31.42637  6.179983 19.31383 43.53891 #> 786 36.73485  5.027381 26.88136 46.58833 #> 787 42.72556  3.905426 35.07107 50.38006 #> 788 40.13353  0.000000 40.13353 40.13353 #> 789 42.34534  0.000000 42.34534 42.34534 #> 790 52.32575  0.000000 52.32575 52.32575 #> 791 46.92223  3.809508 39.45573 54.38873 #> 792 69.26254  0.000000 69.26254 69.26254 #> 793 40.35635  6.341861 27.92653 52.78617 #> 794 45.16757  5.066752 35.23691 55.09822 #> 795 50.02199  3.953162 42.27393 57.77005 #> 796 56.03985 10.747892 34.97437 77.10533 #> 797 35.70341  0.000000 35.70341 35.70341 #> 798 41.64454  0.000000 41.64454 41.64454 #> 799 43.29513  3.750232 35.94481 50.64545 #> 800 54.25081  0.000000 54.25081 54.25081 augment(model, new_data = fev_data) |>   select(USUBJID, AVISIT, .resid, .pred) #> # A tibble: 800 × 4 #>    USUBJID AVISIT .resid .pred #>    <fct>   <fct>   <dbl> <dbl> #>  1 PT1     VIS1       NA  32.5 #>  2 PT1     VIS2        0  40.0 #>  3 PT1     VIS3       NA  45.7 #>  4 PT1     VIS4        0  20.5 #>  5 PT2     VIS1       NA  28.0 #>  6 PT2     VIS2        0  31.5 #>  7 PT2     VIS3        0  36.9 #>  8 PT2     VIS4        0  48.8 #>  9 PT3     VIS1       NA  30.7 #> 10 PT3     VIS2        0  36.0 #> # ℹ 790 more rows"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/introduction.html","id":"using-mmrm-in-workflows","dir":"Articles","previous_headings":"Tidymodels > Tidymodels","what":"Using mmrm in workflows","title":"Package Introduction","text":"can leverage workflows package order fit model. First define specification linear regression mmrm engine. Second define workflow, defining outcome predictors used formula. add model using formula. Lastly, fit model can separate data preparation step modeling step using recipes package. converting ARMCD variable dummy variable creating interaction term new dummy variable visit. Using prep() juice() can see transformed data used model fit looks like. can pass covariance structure well set_engine() definition. allows flexibility presetting different covariance structures pipeline keeping data preparation step independent. combine steps workflow: Last step fit data workflow object retrieve fit object within workflow object run following","code":"mmrm_spec <- linear_reg() |>   set_engine(\"mmrm\", method = \"Satterthwaite\")  mmrm_wflow <- workflow() |>   add_variables(outcomes = FEV1, predictors = c(RACE, ARMCD, AVISIT, USUBJID)) |>   add_model(mmrm_spec, formula = FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID))  mmrm_wflow |>   fit(data = fev_data) #> ══ Workflow [trained] ══════════════════════════════════════════════════════════ #> Preprocessor: Variables #> Model: linear_reg() #>  #> ── Preprocessor ──────────────────────────────────────────────────────────────── #> Outcomes: FEV1 #> Predictors: c(RACE, ARMCD, AVISIT, USUBJID) #>  #> ── Model ─────────────────────────────────────────────────────────────────────── #> mmrm fit #>  #> Formula:     FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID) #> Data:        data (used 537 observations from 197 subjects with maximum 4  #> timepoints) #> Weights:     weights #> Covariance:  unstructured (10 variance parameters) #> Inference:   REML #> Deviance:    3387.373 #>  #> Coefficients:  #>                   (Intercept) RACEBlack or African American  #>                   30.96769899                    1.50464863  #>                     RACEWhite                      ARMCDTRT  #>                    5.61309565                    3.77555734  #>                    AVISITVIS2                    AVISITVIS3  #>                    4.82858803                   10.33317002  #>                    AVISITVIS4           ARMCDTRT:AVISITVIS2  #>                   15.05255715                   -0.01737409  #>           ARMCDTRT:AVISITVIS3           ARMCDTRT:AVISITVIS4  #>                   -0.66753189                    0.63094392  #>  #> Model Inference Optimization: #> Converged with code 0 and message: convergence: rel_reduction_of_f <= factr*epsmch mmrm_recipe <- recipe(FEV1 ~ ., data = fev_data) |>   step_dummy(ARMCD) |>   step_interact(terms = ~ starts_with(\"ARMCD\"):AVISIT) mmrm_recipe |>   prep() |>   juice() #> # A tibble: 800 × 13 #>    USUBJID AVISIT RACE       SEX   FEV1_BL WEIGHT VISITN VISITN2  FEV1 ARMCD_TRT #>    <fct>   <fct>  <fct>      <fct>   <dbl>  <dbl>  <int>   <dbl> <dbl>     <dbl> #>  1 PT1     VIS1   Black or … Fema…    25.3  0.677      1  -0.626  NA           1 #>  2 PT1     VIS2   Black or … Fema…    25.3  0.801      2   0.184  40.0         1 #>  3 PT1     VIS3   Black or … Fema…    25.3  0.709      3  -0.836  NA           1 #>  4 PT1     VIS4   Black or … Fema…    25.3  0.809      4   1.60   20.5         1 #>  5 PT2     VIS1   Asian      Male     45.0  0.465      1   0.330  NA           0 #>  6 PT2     VIS2   Asian      Male     45.0  0.233      2  -0.820  31.5         0 #>  7 PT2     VIS3   Asian      Male     45.0  0.360      3   0.487  36.9         0 #>  8 PT2     VIS4   Asian      Male     45.0  0.507      4   0.738  48.8         0 #>  9 PT3     VIS1   Black or … Fema…    43.5  0.682      1   0.576  NA           0 #> 10 PT3     VIS2   Black or … Fema…    43.5  0.892      2  -0.305  36.0         0 #> # ℹ 790 more rows #> # ℹ 3 more variables: ARMCD_TRT_x_AVISITVIS2 <dbl>, #> #   ARMCD_TRT_x_AVISITVIS3 <dbl>, ARMCD_TRT_x_AVISITVIS4 <dbl> mmrm_spec_with_cov <- linear_reg() |>   set_engine(     \"mmrm\",     method = \"Satterthwaite\",     covariance = as.cov_struct(~ us(AVISIT | USUBJID))   ) (mmrm_wflow_nocov <- workflow() |>   add_model(mmrm_spec_with_cov, formula = FEV1 ~ SEX) |>   add_recipe(mmrm_recipe)) #> ══ Workflow ════════════════════════════════════════════════════════════════════ #> Preprocessor: Recipe #> Model: linear_reg() #>  #> ── Preprocessor ──────────────────────────────────────────────────────────────── #> 2 Recipe Steps #>  #> • step_dummy() #> • step_interact() #>  #> ── Model ─────────────────────────────────────────────────────────────────────── #> Linear Regression Model Specification (regression) #>  #> Engine-Specific Arguments: #>   method = Satterthwaite #>   covariance = as.cov_struct(~us(AVISIT | USUBJID)) #>  #> Computational engine: mmrm (fit_tidy <- fit(mmrm_wflow_nocov, data = fev_data)) #> ══ Workflow [trained] ══════════════════════════════════════════════════════════ #> Preprocessor: Recipe #> Model: linear_reg() #>  #> ── Preprocessor ──────────────────────────────────────────────────────────────── #> 2 Recipe Steps #>  #> • step_dummy() #> • step_interact() #>  #> ── Model ─────────────────────────────────────────────────────────────────────── #> mmrm fit #>  #> Formula:     FEV1 ~ SEX #> Data:        data (used 537 observations from 197 subjects with maximum 4  #> timepoints) #> Weights:     weights #> Covariance:  unstructured (10 variance parameters) #> Inference:   REML #> Deviance:    3699.803 #>  #> Coefficients:  #> (Intercept)   SEXFemale  #> 42.80540973  0.04513432  #>  #> Model Inference Optimization: #> Converged with code 0 and message: convergence: rel_reduction_of_f <= factr*epsmch fit_tidy |>   hardhat::extract_fit_engine() #> mmrm fit #>  #> Formula:     FEV1 ~ SEX #> Data:        data (used 537 observations from 197 subjects with maximum 4  #> timepoints) #> Weights:     weights #> Covariance:  unstructured (10 variance parameters) #> Inference:   REML #> Deviance:    3699.803 #>  #> Coefficients:  #> (Intercept)   SEXFemale  #> 42.80540973  0.04513432  #>  #> Model Inference Optimization: #> Converged with code 0 and message: convergence: rel_reduction_of_f <= factr*epsmch"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/introduction.html","id":"acknowledgments","dir":"Articles","previous_headings":"","what":"Acknowledgments","title":"Package Introduction","text":"mmrm package based previous work internal Roche, namely tern tern.mmrm packages based lme4. work done rbmi package important since used glmmTMB fitting MMRMs. like thank Ben Bolker glmmTMB team multiple discussions tried get Satterthwaite degrees freedom implemented glmmTMB (see https://github.com/glmmTMB/glmmTMB/blob/satterthwaite_df/glmmTMB/vignettes/satterthwaite_unstructured_example2.Rmd). Also Ben helped us significantly example showing use TMB random effect vector (https://github.com/bbolker/tmb-case-studies/tree/master/vectorMixed).","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/kenward.html","id":"model-definition","dir":"Articles","previous_headings":"","what":"Model definition","title":"Kenward-Roger","text":"model definition Details model fitting mmrm. using notations.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/kenward.html","id":"linear-model","dir":"Articles","previous_headings":"Model definition","what":"Linear model","title":"Kenward-Roger","text":"subject \\(\\) observe vector \\[ Y_i = (y_{i1}, \\dotsc, y_{im_i})^\\top \\\\mathbb{R}^{m_i} \\] given design matrix \\[ X_i \\\\mathbb{R}^{m_i \\times p} \\] corresponding coefficient vector \\(\\beta \\\\mathbb{R}^{p}\\) assume observations multivariate normal distributed: \\[ Y_i \\sim N(X_i\\beta, \\Sigma_i) \\] covariance matrix \\(\\Sigma_i \\\\mathbb{R}^{m_i \\times m_i}\\) derived subsetting overall covariance matrix \\(\\Sigma \\\\mathbb{R}^{m \\times m}\\) appropriately \\[ \\Sigma_i = G_i^{-1/2} S_i^\\top \\Sigma S_i G_i^{-1/2} \\] subsetting matrix \\(S_i \\\\{0, 1\\}^{m \\times m_i}\\) contains \\(m_i\\) columns contains single 1 indicating overall time point matching \\(t_{ih}\\). \\(G_i \\\\mathbb{R}_{\\gt 0}^{m_i \\times m_i}\\) diagonal weight matrix. Conditional design matrices \\(X_i\\), coefficient vector \\(\\beta\\) covariance matrix \\(\\Sigma\\) assume observations independent subjects. can write linear model subjects together \\[ Y = X\\beta + \\epsilon \\] \\(Y \\\\mathbb{R}^N\\) combines subject specific observations vectors \\(Y_i\\) total \\(N = \\sum_{= 1}^{n}{m_i}\\) observations, \\(X \\\\mathbb{R}^{N \\times p}\\) combines subject specific design matrices \\(\\epsilon \\\\mathbb{R}^N\\) multivariate normal distribution \\[ \\epsilon \\sim N(0, \\Omega) \\] \\(\\Omega \\\\mathbb{R}^{N \\times N}\\) block-diagonal containing subject specific \\(\\Sigma_i\\) covariance matrices diagonal 0 remaining entries.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/kenward.html","id":"mathematical-details-of-kenward-roger-method","dir":"Articles","previous_headings":"","what":"Mathematical Details of Kenward-Roger method","title":"Kenward-Roger","text":"mathematical derivation Kenward-Roger method based Taylor expansion obtained covariance matrix \\(\\hat\\beta\\) get accurate estimate . derivations based restricted maximum likelihood. Following notation, covariance matrix, \\(\\Omega\\) can represented function covariance matrix parameters \\(\\theta = (\\theta_1, \\dotsc, \\theta_k)^\\top\\), .e. \\(\\Omega(\\theta)\\). model fitting mmrm, obtain estimate \\(\\hat\\beta = \\Phi(\\hat\\theta)X^\\top\\Omega(\\hat\\theta)^{-1}Y\\), \\(\\Phi(\\theta) = \\left\\{X^\\top \\Omega(\\theta)^{-1} X\\right\\} ^{-1}\\) asymptotic covariance matrix \\(\\hat\\beta\\). However, Kackar Harville (1984) suggests although \\(\\hat\\beta\\) unbiased \\(\\beta\\), covariance matrix, \\(\\hat\\Phi = \\left\\{X^\\top \\hat\\Omega X\\right\\}^{-1}\\) can biased. showed variability \\(\\hat\\beta\\) can partitioned two components, \\[   \\Phi_A = \\Phi + \\Lambda \\] \\(\\Phi\\) variance-covariance matrix asymptotic distribution \\(\\hat\\beta\\) \\(n\\rightarrow \\infty\\) defined , \\(\\Lambda\\) represents amount asymptotic variance-covariance matrix underestimates \\(\\Phi_A\\). Based Taylor series expansion around \\(\\theta\\), \\(\\Lambda\\) can approximated \\[   \\Lambda \\simeq \\Phi \\left\\{\\sum_{h=1}^k{\\sum_{j=1}^k{W_{hj}(Q_{hj} - P_h \\Phi P_j)} }\\right\\} \\Phi \\] \\[   P_h = X^\\top \\frac{\\partial{\\Omega^{-1}}}{\\partial \\theta_h} X \\] \\[   Q_{hj} = X^\\top \\frac{\\partial{\\Omega^{-1}}}{\\partial \\theta_h} \\Omega \\frac{\\partial{\\Omega^{-1}}}{\\partial \\theta_j} X \\] \\(W\\) inverse Hessian matrix log-likelihood function \\(\\theta\\) evaluated estimate \\(\\hat\\theta\\), .e. observed Fisher Information matrix consistent estimator variance-covariance matrix \\(\\hat\\theta\\). , based Taylor series expansion \\(\\theta\\), Kenward Roger (1997) show \\[   \\hat\\Phi \\simeq \\Phi + \\sum_{h=1}^k{(\\hat\\theta_h - \\theta_h)\\frac{\\partial{\\Phi}}{\\partial{\\theta_h}}} + \\frac{1}{2} \\sum_{h=1}^k{\\sum_{j=1}^k{(\\hat\\theta_h - \\theta_h)(\\hat\\theta_j - \\theta_j)\\frac{\\partial^2{\\Phi}}{\\partial{\\theta_h}\\partial{\\theta_j}}}} \\] Ignoring possible bias \\(\\hat\\theta\\), \\[   E(\\hat\\Phi) \\simeq \\Phi + \\frac{1}{2} \\sum_{h=1}^k{\\sum_{j=1}^k{W_{hj}\\frac{\\partial^2{\\Phi}}{\\partial{\\theta_h}\\partial{\\theta_j}}}} \\] Using previously defined notations, can written \\[   \\frac{\\partial^2{\\Phi}}{\\partial{\\theta_h}\\partial{\\theta_j}} = \\Phi (P_h \\Phi P_j + P_j \\Phi P_h - Q_{hj} - Q_{jh} + R_{hj}) \\Phi \\] \\[   R_{hj} = X^\\top\\Omega^{-1}\\frac{\\partial^2\\Omega}{\\partial{\\theta_h}\\partial{\\theta_j}} \\Omega^{-1} X \\] substituting \\(\\Phi\\) \\(\\Lambda\\) back \\(\\hat\\Phi_A\\), \\[   \\hat\\Phi_A = \\hat\\Phi + 2\\hat\\Phi \\left\\{\\sum_{h=1}^k{\\sum_{j=1}^k{W_{hj}(Q_{hj} - P_h \\hat\\Phi P_j - \\frac{1}{4}R_{hj})} }\\right\\} \\hat\\Phi \\] \\(\\Omega(\\hat\\theta)\\) replaces \\(\\Omega(\\theta)\\) right-hand side. Please note , ignore \\(R_{hj}\\), second-order derivatives, get different estimate adjusted covariance matrix, call linear Kenward-Roger approximation.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/kenward.html","id":"special-considerations-for-mmrm-models","dir":"Articles","previous_headings":"Mathematical Details of Kenward-Roger method","what":"Special Considerations for mmrm models","title":"Kenward-Roger","text":"mmrm models, \\(\\Omega\\) block-diagonal matrix, hence can calculate \\(P\\), \\(Q\\) \\(R\\) subject add . \\[   P_h = \\sum_{=1}^{N}{P_{ih}} = \\sum_{=1}^{N}{X_i^\\top \\frac{\\partial{\\Sigma_i^{-1}}}{\\partial \\theta_h} X_i} \\] \\[   Q_{hj} = \\sum_{=1}^{N}{Q_{ihj}} = \\sum_{=1}^{N}{X_i^\\top \\frac{\\partial{\\Sigma_i^{-1}}}{\\partial \\theta_h} \\Sigma_i \\frac{\\partial{\\Sigma_i^{-1}}}{\\partial \\theta_j} X_i} \\] \\[   R_{hj} = \\sum_{=1}^{N}{R_{ihj}} = \\sum_{=1}^{N}{X_i^\\top\\Sigma_i^{-1}\\frac{\\partial^2\\Sigma_i}{\\partial{\\theta_h}\\partial{\\theta_j}} \\Sigma_i^{-1} X_i} \\]","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/kenward.html","id":"derivative-of-the-overall-covariance-matrix-sigma","dir":"Articles","previous_headings":"Mathematical Details of Kenward-Roger method","what":"Derivative of the overall covariance matrix \\(\\Sigma\\)","title":"Kenward-Roger","text":"derivative overall covariance matrix \\(\\Sigma\\) respect variance parameters can calculated derivatives Cholesky factor, hence obtained automatic differentiation, following matrix identities calculations. \\[   \\frac{\\partial{\\Sigma}}{\\partial{\\theta_h}} = \\frac{\\partial{LL^\\top}}{\\partial{\\theta_h}} = \\frac{\\partial{L}}{\\partial{\\theta_h}}L^\\top + L\\frac{\\partial{L^\\top}}{\\partial{\\theta_h}} \\] \\[   \\frac{\\partial^2{\\Sigma}}{\\partial{\\theta_h}\\partial{\\theta_j}} = \\frac{\\partial^2{L}}{\\partial{\\theta_h}\\partial{\\theta_j}}L^\\top + L\\frac{\\partial^2{L^\\top}}{\\partial{\\theta_h}\\partial{\\theta_j}} + \\frac{\\partial{L}}{\\partial{\\theta_h}}\\frac{\\partial{L^T}}{\\partial{\\theta_j}} + \\frac{\\partial{L}}{\\partial{\\theta_j}}\\frac{\\partial{L^\\top}}{\\partial{\\theta_h}} \\]","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/kenward.html","id":"derivative-of-the-sigma-1","dir":"Articles","previous_headings":"Mathematical Details of Kenward-Roger method","what":"Derivative of the \\(\\Sigma^{-1}\\)","title":"Kenward-Roger","text":"derivatives \\(\\Sigma^{-1}\\) can calculated \\[   \\frac{\\partial{\\Sigma\\Sigma^{-1}}}{\\partial{\\theta_h}}\\\\   = \\frac{\\partial{\\Sigma}}{\\partial{\\theta_h}}\\Sigma^{-1} + \\Sigma\\frac{\\partial{\\Sigma^{-1}}}{\\partial{\\theta_h}} \\\\   = 0 \\] \\[   \\frac{\\partial{\\Sigma^{-1}}}{\\partial{\\theta_h}} = - \\Sigma^{-1} \\frac{\\partial{\\Sigma}}{\\partial{\\theta_h}}\\Sigma^{-1} \\]","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/kenward.html","id":"subjects-with-missed-visits","dir":"Articles","previous_headings":"Mathematical Details of Kenward-Roger method","what":"Subjects with missed visits","title":"Kenward-Roger","text":"subject visits, corresponding covariance matrix can represented \\[   \\Sigma_i = S_i^\\top \\Sigma S_i \\] derivatives can obtained \\[   \\frac{\\partial{\\Sigma_i}}{\\partial{\\theta_h}} = S_i^\\top \\frac{\\partial{\\Sigma}}{\\partial{\\theta_h}} S_i \\] \\[   \\frac{\\partial^2{\\Sigma_i}}{\\partial{\\theta_h}\\partial{\\theta_j}} = S_i^\\top \\frac{\\partial^2{\\Sigma}}{\\partial{\\theta_h}\\partial{\\theta_j}} S_i \\] derivative \\(\\Sigma_i^{-1}\\), \\(\\frac{\\partial\\Sigma_i^{-1}}{\\partial{\\theta_h}}\\) can calculated \\(\\Sigma_i^{-1}\\) \\(\\frac{\\partial{\\Sigma_i}}{\\partial{\\theta_h}}\\) using .","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/kenward.html","id":"scenario-under-group-specific-covariance-estimates","dir":"Articles","previous_headings":"Mathematical Details of Kenward-Roger method","what":"Scenario under group specific covariance estimates","title":"Kenward-Roger","text":"fitting grouped mmrm models, covariance matrix subject group \\(g()\\), can written \\[   \\Sigma_i = S_i^\\top \\Sigma_{g()} S_i$. \\] Assume \\(B\\) groups, number parameters increased \\(B\\) times. fact group, corresponding \\(\\theta\\) affect parts, block-diagonal \\(P\\), \\(Q\\) \\(R\\) matrices, blocks given : \\[ P_h = \\begin{pmatrix} P_{h, 1} & \\dots & P_{h, B} \\\\ \\end{pmatrix} \\] \\[ Q_{hj} = \\begin{pmatrix} Q_{hj, 1} & 0 & \\dots & \\dots & 0 \\\\ 0 & Q_{hj, 2} & 0 & \\dots & 0\\\\ \\vdots & & \\ddots & & \\vdots \\\\ \\vdots & & & \\ddots & \\vdots \\\\ 0 & \\dots & \\dots & 0 & Q_{hj, B} \\end{pmatrix} \\] \\[ R_{hj} = \\begin{pmatrix} R_{hj, 1} & 0 & \\dots & \\dots & 0 \\\\ 0 & R_{hj, 2} & 0 & \\dots & 0\\\\ \\vdots & & \\ddots & & \\vdots \\\\ \\vdots & & & \\ddots & \\vdots \\\\ 0 & \\dots & \\dots & 0 & R_{hj, B} \\end{pmatrix} \\] Use \\(P_{j, b}\\) denote block diagonal part group \\(b\\), \\[   P_{h,b} = \\sum_{g() = b}{P_{ih}} = \\sum_{g() = b}{X_i^\\top \\frac{\\partial{\\Sigma_i^{-1}}}{\\partial \\theta_h} X_i} \\] \\[   Q_{hj,b} = \\sum_{g() = b}{Q_{ihj}} = \\sum_{g() = b}{X_i^\\top \\frac{\\partial{\\Sigma_i^{-1}}}{\\partial \\theta_h} \\Sigma_i \\frac{\\partial{\\Sigma_i^{-1}}}{\\partial \\theta_j} X_i} \\] \\[   R_{hj,b} = \\sum_{g() = b}{R_{ihj}} = \\sum_{g() = b}{X_i^\\top\\Sigma_i^{-1}\\frac{\\partial^2\\Sigma_i}{\\partial{\\theta_h}\\partial{\\theta_j}} \\Sigma_i^{-1} X_i} \\] Similarly \\(R\\).","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/kenward.html","id":"scenario-under-weighted-mmrm","dir":"Articles","previous_headings":"Mathematical Details of Kenward-Roger method","what":"Scenario under weighted mmrm","title":"Kenward-Roger","text":"weights mmrm model, covariance matrix subject \\(\\), can represented \\[   \\Sigma_i = G_i^{-1/2} S_i^\\top \\Sigma S_i G_i^{-1/2} \\] \\(G_i\\) diagonal matrix weights. , deriving \\(P\\), \\(Q\\) \\(R\\), mathematical differences constant, \\(G_i\\) addition \\(S_i\\) change algorithms can simply multiply formulas \\(G_i^{-1/2}\\), similarly subsetting matrix.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/kenward.html","id":"inference","dir":"Articles","previous_headings":"","what":"Inference","title":"Kenward-Roger","text":"Suppose testing linear combination \\(\\beta\\), \\(C\\beta\\) \\(C \\\\mathbb{R}^{c\\times p}\\), can use following F-statistic \\[   F = \\frac{1}{c} (\\hat\\beta - \\beta)^\\top  C (C^\\top \\hat\\Phi_A C)^{-1} C^\\top (\\hat\\beta - \\beta) \\] \\[   F^* = \\lambda F \\] follows exact \\(F_{c,m}\\) distribution. one coefficient test, \\(C\\) column vector containing single \\(1\\) inside. can still follow calculations multi-dimensional case. recovers degrees freedom results Satterthwaite method. \\(\\lambda\\) \\(m\\) can calculated \\[   M = C (C^\\top \\Phi C)^{-1} C^\\top \\] \\[   A_1 = \\sum_{h=1}^k{\\sum_{j=1}^k{W_{hj} tr(M \\Phi P_h \\Phi) tr(M \\Phi P_j \\Phi)}} \\] \\[   A_2 = \\sum_{h=1}^k{\\sum_{j=1}^k{W_{hj} tr(M \\Phi P_h \\Phi M \\Phi P_j \\Phi)}} \\] \\[   B = \\frac{1}{2c}(A_1 + 6A_2) \\] \\[   g = \\frac{(c+1)A_1 - (c+4)A_2}{(c+2)A_2} \\] \\[   c_1 = \\frac{g}{3c+2(1-g)} \\] \\[   c_2 = \\frac{c-g}{3c+2(1-g)} \\] \\[   c_3 = \\frac{c+2-g}{3c+2(1-g)} \\] \\[E^*={\\left\\{1-\\frac{A_2}{c}\\right\\}}^{-1}\\] \\[V^*=\\frac{2}{c}{\\left\\{\\frac{1+c_1 B}{(1-c_2 B)^2(1-c_3 B)}\\right\\}}\\] \\[\\rho = \\frac{V^{*}}{2(E^*)^2}\\] \\[m = 4 + \\frac{c+2}{c\\rho - 1}\\] \\[\\lambda = \\frac{m}{E^*(m-2)}\\]","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/kenward.html","id":"parameterization-methods-and-kenward-roger","dir":"Articles","previous_headings":"","what":"Parameterization methods and Kenward-Roger","title":"Kenward-Roger","text":"Kenward-Roger adjusted covariance matrix adopting Taylor series approximate true value, choices parameterization can change result. simple example unstructured covariance structure, current approach, parameters elements Cholesky factor \\(\\Sigma\\) (see parameterization), second-order derivatives \\(\\Sigma\\) parameters, non-zero matrices. However, use elements \\(\\Sigma\\) parameters, second-order derivatives zero matrices. However, differences can small affect inference. like match SAS results unstructured covariance model, can use linear Kenward-Roger approximation.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/kenward.html","id":"implementations-in-mmrm","dir":"Articles","previous_headings":"","what":"Implementations in mmrm","title":"Kenward-Roger","text":"package mmrm, implemented Kenward-Roger calculations based previous sections. Specially, first-order second-order derivatives, use automatic differentiation obtain results easily non-spatial covariance structure. spatial covariance structure, derive exact results.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/kenward.html","id":"spatial-exponential-derivatives","dir":"Articles","previous_headings":"Implementations in mmrm","what":"Spatial Exponential Derivatives","title":"Kenward-Roger","text":"spatial exponential covariance structure, \\[\\theta = (\\theta_1,\\theta_2)\\] \\[\\sigma = e^{\\theta_1}\\] \\[\\rho = \\frac{e^{\\theta_2}}{1 + e^{\\theta_2}}\\] \\[\\Sigma_{ij} = \\sigma \\rho^{d_{ij}}\\] \\(d_{ij}\\) distance time point \\(\\) time point \\(j\\). first-order derivatives can written : \\[   \\frac{\\partial{\\Sigma_{ij}}}{\\partial\\theta_1} = \\frac{\\partial\\sigma}{\\partial\\theta_1} \\rho^{d_{ij}}\\\\   = e^{\\theta_1}\\rho^{d_{ij}} \\\\   = \\Sigma_{ij} \\] \\[   \\frac{\\partial{\\Sigma_{ij}}}{\\partial\\theta_2} = \\sigma\\frac{\\partial{\\rho^{d_{ij}}}}{\\partial\\theta_2} \\\\   = \\sigma\\rho^{d_{ij}-1}{d_{ij}}\\frac{\\partial\\rho}{\\partial\\theta_2}\\\\   = \\sigma\\rho^{d_{ij}-1}{d_{ij}}\\rho(1-\\rho) \\\\   = \\sigma \\rho^{d_{ij}} {d_{ij}} (1-\\rho) \\] Second-order derivatives can written : \\[   \\frac{\\partial^2{\\Sigma_{ij}}}{\\partial\\theta_1\\partial\\theta_1}\\\\   = \\frac{\\partial\\Sigma_{ij}}{\\partial\\theta_1}\\\\   = \\Sigma_{ij} \\] \\[   \\frac{\\partial^2{\\Sigma_{ij}}}{\\partial\\theta_1\\partial\\theta_2} = \\frac{\\partial^2{\\Sigma_{ij}}}{\\partial\\theta_2\\partial\\theta_1} \\\\   = \\frac{\\partial\\Sigma_{ij}}{\\partial\\theta_2}\\\\   = \\sigma\\rho^{d_{ij}-1}{d_{ij}}\\rho(1-\\rho)\\\\   = \\sigma\\rho^{d_{ij}}{d_{ij}}(1-\\rho) \\] \\[   \\frac{\\partial^2{\\Sigma_{ij}}}{\\partial\\theta_2\\partial\\theta_2}\\\\   = \\frac{\\partial{\\sigma\\rho^{d_{ij}}{d_{ij}}(1-\\rho)}}{\\partial\\theta_2}\\\\   = \\sigma\\rho^{d_{ij}}{d_{ij}}(1-\\rho)(d_{ij} (1-\\rho) - \\rho) \\]","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/methodological_introduction.html","id":"abstract","dir":"Articles","previous_headings":"","what":"Abstract","title":"Mixed Models for Repeated Measures","text":"Mixed models repeated measures (MMRMs) frequently used analysis data clinical trials. specifically suited model continuous variables repeatedly measured discrete time points (within defined time-windows). clinical trial, time points typically visits according schedule pre-defined trial protocol. distinguishing feature MMRMs, compared implementations linear mixed models, subject-specific random effects (direct interest estimation inference) considered residual effects, .e. part error correlation matrix. vignette provides brief methodological introduction MMRMs. MMRMs described extension basic linear mixed-effects model. aim provide basic orientation guide applied statisticians working field clinical trials regarding theoretical underpinnings MMRMs practical use clinical trials. descriptions models , generally follow Pinheiro Bates (2000) C. Mallinckrodt Lipkovich (2017).","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/methodological_introduction.html","id":"the-basic-linear-mixed-effects-model","dir":"Articles","previous_headings":"","what":"The basic linear mixed-effects model","title":"Mixed Models for Repeated Measures","text":"Laird Ware (1982) introduced basic linear mixed-effects model single level grouping model expresses \\(n_i\\)-dimensional response (column) vector \\(y_i\\) \\(\\)th subject (, generally, group unit) \\[ y_i = X_i \\beta + Z_i b_i + \\epsilon_i, \\quad =1,\\ldots,M ,\\\\ b_i \\sim \\mathcal{N}(0,\\Psi), \\quad \\epsilon_i \\sim \\mathcal{N}(0,\\sigma^2I), \\] \\(\\beta\\) \\(p\\)-dimensional vector fixed effects, \\(b\\) \\(q\\)-dimensional vector random patient-specific effects, \\(X_i\\) (size \\(n_i \\times p\\)) \\(Z_i\\) (size \\(n_i \\times q\\)) known regressor matrices relating observations fixed-effects random-effects, respectively, \\(\\epsilon_i\\) \\(n_i\\)-dimensional within-subject error. random effects \\(b_i\\) within-group errors \\(\\epsilon_i\\) assumed follow normal distribution, means \\(0\\) variance-covariance matrices \\(\\Psi\\) \\(\\sigma^2I\\), \\(\\) identity matrix. assumed independent different subjects independent subject. random effects \\(b_i\\) describe shift mean linear predictor subject. defined mean \\(0\\), non-zero mean term random effects must expressed part fixed-effects terms. Therefore, columns \\(Z_i\\) usually (small) subset columns \\(X_i\\). Mixed models called “mixed” consider fixed random effects thus allow considerable modeling flexibility. case even basic formulation described . However, still restricts within-group errors independent, identically distributed random variables mean zero constant variance. assumptions may often seen restrictive (unrealistic) applications. example, case clinical trials repeated measurements subjects time, observations independent within-subject correlation needs accounted model.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/methodological_introduction.html","id":"extending-the-basic-linear-mixed-effects-model","dir":"Articles","previous_headings":"","what":"Extending the basic linear mixed-effects model","title":"Mixed Models for Repeated Measures","text":"basic linear mixed-effects model can extended order incorporate within-subject errors heteroscedastic (.e. unequal variances) / correlated. purpose, can express within-subject errors : \\[   \\epsilon_i \\sim \\mathcal{N}(0,\\Lambda_i), \\quad =1,\\ldots,M, \\] \\(\\Lambda_i\\) positive-definite matrices parameterized fixed, generally small set parameters \\(\\lambda\\). basic model, within-group errors \\(\\epsilon_i\\) assumed independent different \\(\\) independent random effects \\(b_i\\). variance-covariance matrix response vector \\(y_i\\), \\[   \\text{Var}(y_i) = \\Sigma_i = \\left( Z_i \\Psi Z_{}^{T} + \\Lambda_i \\right),   \\] comprises random-effects component, given \\(Z_i \\Psi Z_{}^{T}\\), within-subject component, given \\(\\Lambda_i\\). fitting models, generally “competition” trade-complexities two components, care must exercised prevent nonidentifiability, near nonidentifiability, parameters. one reasons can advantageous practice use one components long still allows capture relevant sources variability. longitudinal studies one level grouping, within-subject component particularly important considered order account within-subject correlation, whereas additional random-effects component often strictly needed. note, literature, random-effects component within-subject component sometimes also referred \\(R\\) \\(G\\), \\(R\\)-side \\(G\\)-side random effects (Cnaan, Laird, Slasor (1997), Littell, Pendergast, Natarajan (2000)).","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/methodological_introduction.html","id":"the-mmrm-as-a-special-case","dir":"Articles","previous_headings":"","what":"The MMRM as a special case","title":"Mixed Models for Repeated Measures","text":"clinical trial setting, one often chooses directly model variance-covariance structure response, .e. account within-subject dependencies using within-group component \\(\\Lambda_i\\), can omit random effects component (\\(Z_i b_i\\)). Hence, case, \\(\\text{Var}(y_i)=\\Sigma_i=\\Lambda_i\\) . yields MMRM : \\[      y_i = X_i\\beta + \\epsilon_i, \\quad \\epsilon_i \\sim \\mathcal{N}(0,\\Sigma_i), \\quad =1,\\ldots,M. \\] \\(\\Sigma_i\\) matrices obtained subsetting overall variance-covariance matrix \\(\\Sigma \\\\mathbb{R}^{m \\times m}\\), \\(m\\) total number scheduled visits per subject, appropriately \\[      \\Sigma_i = S_i^\\top \\Sigma S_i ,     \\] \\(S_i \\\\{0, 1\\}^{m \\times m_i}\\) subject-specific ‘’subsetting matrix’’ indicates visits available observations (see also vignette Details Model Fitting mmrm). written model \\(n\\) subjects trial, MMRM represented \\[ Y = X\\beta + \\epsilon, \\] \\(Y \\\\mathbb{R}^N\\) combines subject-specific observations \\(y_i\\) total \\(N = \\sum_{= 1}^{n}{m_i}\\) observations, \\(X \\\\mathbb{R}^{N \\times p}\\) combines subject-specific design matrices, \\(\\beta \\\\mathbb{R}^p\\) vector fixed effects, \\(\\epsilon \\\\mathbb{R}^N\\) multivariate normal distribution, \\[ \\epsilon \\sim N(0, \\Omega), \\] \\(\\Omega \\\\mathbb{R}^{N \\times N}\\) block-diagonal matrix, containing subject-specific \\(\\Sigma_i\\) diagonal (entries equal \\(0\\)). modeling longitudinal responses clinical trial multiple follow-visits, linear predictor \\(X\\beta\\) typically considers fixed effects baseline values, treatment visit, well interactions treatment visit, possibly baseline visit. Commonly fixed effects interest correlation structure \\(\\Sigma\\) can viewed nuisance quantity. However, important model carefully, since affects validity estimated variance \\(\\beta\\). mmrm package supports wide range covariance structures (see also vignette Covariance Structures mmrm).","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/methodological_introduction.html","id":"missing-data","dir":"Articles","previous_headings":"","what":"Missing data","title":"Mixed Models for Repeated Measures","text":"Mixed models can accommodate unbalanced data use available observations subjects analysis. Inferences valid assumption missing observations independent unobserved data, may dependent observed data. assumption often seen reasonable called “missing random”-assumption. contrast, imputation methods handle missing data modeling alternatives, last-observation carried forward-approach models based generalized estimating equations, require stricter assumptions missingness mechanism (C. H. Mallinckrodt, Lane, Schnell, Peng, Mancuso (2008), Fitzmaurice (2016)).","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Comparison with other software","text":"vignette briefly compare mmrm::mmrm, SAS’s PROC GLIMMIX, nlme::gls, lme4::lmer, glmmTMB::glmmTMB functions fitting mixed models repeated measures (MMRMs). primary difference implementations lies covariance structures supported “box”. particular, PROC GLIMMIX mmrm procedures provide support many common MMRM covariance structures. covariance structures can implemented gls, though users required define manually. lmer glmmTMB limited. find mmmrm converges quickly R implementations also producing estimates virtually identical PROC GLIMMIX’s.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"Comparison with other software","text":"Two datasets used illustrate model fitting mmrm, lme4, nlme, glmmTMB R packages well PROC GLIMMIX. data also used compare implementations’ operating characteristics.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"fev-data","dir":"Articles","previous_headings":"Datasets","what":"FEV Data","title":"Comparison with other software","text":"FEV dataset contains measurements FEV1 (forced expired volume one second), measure quickly lungs can emptied. Low levels FEV1 may indicate chronic obstructive pulmonary disease (COPD). summarized .","code":"Stratified by ARMCD                                Overall       PBO           TRT   n                              800           420           380   USUBJID (%)      PT[1-200]                   200           105 (52.5)     95 (47.5)   AVISIT      VIS1                        200           105            95      VIS2                        200           105            95      VIS3                        200           105            95      VIS4                        200           105            95   RACE (%)      Asian                       280 (35.0)    152 (36.2)    128 (33.7)      Black or African American   300 (37.5)    184 (43.8)    116 (30.5)      White                       220 (27.5)     84 (20.0)    136 (35.8)   SEX = Female (%)               424 (53.0)    220 (52.4)    204 (53.7)   FEV1_BL (mean (SD))          40.19 (9.12)  40.46 (8.84)  39.90 (9.42)   FEV1 (mean (SD))             42.30 (9.32)  40.24 (8.67)  44.45 (9.51)   WEIGHT (mean (SD))            0.52 (0.23)   0.52 (0.23)   0.51 (0.23)   VISITN (mean (SD))            2.50 (1.12)   2.50 (1.12)   2.50 (1.12)   VISITN2 (mean (SD))          -0.02 (1.03)   0.01 (1.07)  -0.04 (0.98)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"bcva-data","dir":"Articles","previous_headings":"Datasets","what":"BCVA Data","title":"Comparison with other software","text":"BCVA dataset contains data randomized longitudinal ophthalmology trial evaluating change baseline corrected visual acuity (BCVA) course 10 visits. BCVA corresponds number letters read visual acuity chart. summary data given :","code":"Stratified by ARMCD                                Overall         CTL            TRT   n                             8605          4123           4482   USUBJID (%)      PT[1-1000]                 1000           494 (49.4)     506 (50.6)   AVISIT      VIS1                        983           482            501      VIS2                        980           481            499      VIS3                        960           471            489      VIS4                        946           458            488      VIS5                        925           454            471      VIS6                        868           410            458      VIS7                        816           388            428      VIS8                        791           371            420      VIS9                        719           327            392      VIS10                       617           281            336   RACE (%)      Asian                       297 (29.7)    151 (30.6)     146 (28.9)      Black or African American   317 (31.7)    149 (30.1)     168 (33.2)      White                       386 (38.6)    194 (39.3)     192 (37.9)   BCVA_BL (mean (SD))          75.12 (9.93)  74.90 (9.76)   75.40 (10.1)   BCVA_CHG (mean (SD))      VIS1                       5.59 (1.31)   5.32 (1.23)    5.86 (1.33)      VIS10                      9.18 (2.91)   7.49 (2.58)   10.60 (2.36)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"model-implementations","dir":"Articles","previous_headings":"","what":"Model Implementations","title":"Comparison with other software","text":"Listed commonly used covariance structures used fitting MMRMs. indicate matrices available “box” implementation considered vignette. Note table exhaustive; PROC GLIMMIX glmmTMB support additional spatial covariance structures. Code fitting MMRMs FEV data using considered functions covariance structures provided . Fixed effects visit number, treatment assignment interaction two modeled.","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"proc-glimmix","dir":"Articles","previous_headings":"Model Implementations > Ante-dependence (heterogeneous)","what":"PROC GLIMMIX","title":"Comparison with other software","text":"","code":"PROC GLIMMIX DATA = fev_data; CLASS AVISIT(ref = 'VIS1') ARMCD(ref = 'PBO') USUBJID; MODEL FEV1 = AVISIT|ARMCD / ddfm=satterthwaite solution chisq; RANDOM AVISIT / subject=USUBJID type=ANTE(1);"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"mmrm","dir":"Articles","previous_headings":"Model Implementations > Ante-dependence (heterogeneous)","what":"mmrm","title":"Comparison with other software","text":"","code":"mmrm(   formula = FEV1 ~ ARMCD * AVISIT + adh(VISITN | USUBJID),   data = fev_data )"},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"mmrm-1","dir":"Articles","previous_headings":"Model Implementations > Ante-dependence (homogeneous)","what":"mmrm","title":"Comparison with other software","text":"","code":"mmrm(   formula =FEV1 ~ ARMCD * AVISIT + ad(VISITN | USUBJID),   data = fev_data )"},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"proc-glimmix-1","dir":"Articles","previous_headings":"Model Implementations > Auto-regressive (heterogeneous)","what":"PROC GLIMMIX","title":"Comparison with other software","text":"","code":"PROC GLIMMIX DATA = fev_data; CLASS AVISIT(ref = 'VIS1') ARMCD(ref = 'PBO') USUBJID; MODEL FEV1 = AVISIT|ARMCD / ddfm=satterthwaite solution chisq; RANDOM AVISIT / subject=USUBJID type=ARH(1);"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"mmrm-2","dir":"Articles","previous_headings":"Model Implementations > Auto-regressive (heterogeneous)","what":"mmrm","title":"Comparison with other software","text":"","code":"mmrm(   formula = FEV1 ~ ARMCD * AVISIT + ar1h(VISITN | USUBJID),   data = fev_data )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"gls","dir":"Articles","previous_headings":"Model Implementations > Auto-regressive (heterogeneous)","what":"gls","title":"Comparison with other software","text":"","code":"gls(   formula = FEV1 ~ ARMCD * AVISIT,   data = fev_data,   correlation = corCAR1(form = ~AVISIT | USUBJID),   weights = varIdent(form = ~1|AVISIT),   na.action = na.omit )"},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"proc-glimmix-2","dir":"Articles","previous_headings":"Model Implementations > Auto-regressive (homogeneous)","what":"PROC GLIMMIX","title":"Comparison with other software","text":"","code":"PROC GLIMMIX DATA = fev_data; CLASS AVISIT(ref = 'VIS1') ARMCD(ref = 'PBO') USUBJID; MODEL FEV1 =  ARMCD|AVISIT / ddfm=satterthwaite solution chisq; RANDOM AVISIT / subject=USUBJID type=AR(1);"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"mmrm-3","dir":"Articles","previous_headings":"Model Implementations > Auto-regressive (homogeneous)","what":"mmrm","title":"Comparison with other software","text":"","code":"mmrm(   formula = FEV1 ~ ARMCD * AVISIT + ar1(VISITN | USUBJID),   data = fev_data )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"gls-1","dir":"Articles","previous_headings":"Model Implementations > Auto-regressive (homogeneous)","what":"gls","title":"Comparison with other software","text":"","code":"gls(   formula = FEV1 ~ ARMCD * AVISIT,   data = fev_data,   correlation = corCAR1(form = ~AVISIT | USUBJID),   na.action = na.omit )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"glmmtmb","dir":"Articles","previous_headings":"Model Implementations > Auto-regressive (homogeneous)","what":"glmmTMB","title":"Comparison with other software","text":"","code":"glmmTMB(   FEV1 ~ ARMCD * AVISIT + ar1(0 + AVISIT | USUBJID),   dispformula = ~ 0,   data = fev_data )"},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"proc-glimmix-3","dir":"Articles","previous_headings":"Model Implementations > Compound symmetry (heterogeneous)","what":"PROC GLIMMIX","title":"Comparison with other software","text":"","code":"PROC GLIMMIX DATA = fev_data; CLASS AVISIT(ref = 'VIS1') ARMCD(ref = 'PBO') USUBJID; MODEL FEV1 = AVISIT|ARMCD / ddfm=satterthwaite solution chisq; RANDOM AVISIT / subject=USUBJID type=CSH;"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"mmrm-4","dir":"Articles","previous_headings":"Model Implementations > Compound symmetry (heterogeneous)","what":"mmrm","title":"Comparison with other software","text":"","code":"mmrm(   formula = FEV1 ~ ARMCD * AVISIT + csh(VISITN | USUBJID),   data = fev_data )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"gls-2","dir":"Articles","previous_headings":"Model Implementations > Compound symmetry (heterogeneous)","what":"gls","title":"Comparison with other software","text":"","code":"gls(   formula = FEV1 ~ ARMCD * AVISIT,   data = fev_data,   correlation = corCompSymm(form = ~AVISIT | USUBJID),   weights = varIdent(form = ~1|AVISIT),   na.action = na.omit )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"glmmtmb-1","dir":"Articles","previous_headings":"Model Implementations > Compound symmetry (heterogeneous)","what":"glmmTMB","title":"Comparison with other software","text":"","code":"glmmTMB(   FEV1 ~ ARMCD * AVISIT + cs(0 + AVISIT | USUBJID),   dispformula = ~ 0,   data = fev_data )"},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"proc-glimmix-4","dir":"Articles","previous_headings":"Model Implementations > Compound symmetry (homogeneous)","what":"PROC GLIMMIX","title":"Comparison with other software","text":"","code":"PROC GLIMMIX DATA = fev_data; CLASS AVISIT(ref = 'VIS1') ARMCD(ref = 'PBO') USUBJID; MODEL FEV1 = AVISIT|ARMCD / ddfm=satterthwaite solution chisq; RANDOM AVISIT / subject=USUBJID type=CS;"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"mmrm-5","dir":"Articles","previous_headings":"Model Implementations > Compound symmetry (homogeneous)","what":"mmrm","title":"Comparison with other software","text":"","code":"mmrm(   formula = FEV1 ~ ARMCD * AVISIT + cs(VISITN | USUBJID),   data = fev_data )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"gls-3","dir":"Articles","previous_headings":"Model Implementations > Compound symmetry (homogeneous)","what":"gls","title":"Comparison with other software","text":"","code":"gls(   formula = FEV1 ~ ARMCD * AVISIT,   data = fev_data,   correlation = corCompSymm(form = ~AVISIT | USUBJID),   na.action = na.omit )"},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"proc-glimmix-5","dir":"Articles","previous_headings":"Model Implementations > Spatial exponential","what":"PROC GLIMMIX","title":"Comparison with other software","text":"","code":"PROC GLIMMIX DATA = fev_data; CLASS AVISIT(ref = 'VIS1') ARMCD(ref = 'PBO') USUBJID; MODEL FEV1 = AVISIT|ARMCD / ddfm=satterthwaite solution chisq; RANDOM / subject=USUBJID type=sp(exp)(visitn) rcorr;"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"mmrm-6","dir":"Articles","previous_headings":"Model Implementations > Spatial exponential","what":"mmrm","title":"Comparison with other software","text":"","code":"mmrm(   formula = FEV1 ~ ARMCD * AVISIT + sp_exp(VISITN | USUBJID),   data = fev_data )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"gls-4","dir":"Articles","previous_headings":"Model Implementations > Spatial exponential","what":"gls","title":"Comparison with other software","text":"","code":"gls(   formula = FEV1 ~ ARMCD * AVISIT,   data = fev_data,   correlation = corExp(form = ~AVISIT | USUBJID),   weights = varIdent(form = ~1|AVISIT),   na.action = na.omit )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"glmmtmb-2","dir":"Articles","previous_headings":"Model Implementations > Spatial exponential","what":"glmmTMB","title":"Comparison with other software","text":"","code":"# NOTE: requires use of coordinates glmmTMB(   FEV1 ~ ARMCD * AVISIT + exp(0 + AVISIT | USUBJID),   dispformula = ~ 0,   data = fev_data )"},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"proc-glimmix-6","dir":"Articles","previous_headings":"Model Implementations > Toeplitz (heterogeneous)","what":"PROC GLIMMIX","title":"Comparison with other software","text":"","code":"PROC GLIMMIX DATA = fev_data; CLASS AVISIT(ref = 'VIS1') ARMCD(ref = 'PBO') USUBJID; MODEL FEV1 = AVISIT|ARMCD / ddfm=satterthwaite solution chisq; RANDOM AVISIT / subject=USUBJID type=TOEPH;"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"mmrm-7","dir":"Articles","previous_headings":"Model Implementations > Toeplitz (heterogeneous)","what":"mmrm","title":"Comparison with other software","text":"","code":"mmrm(   formula = FEV1 ~ ARMCD * AVISIT + toeph(AVISIT | USUBJID),   data = fev_data )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"glmmtmb-3","dir":"Articles","previous_headings":"Model Implementations > Toeplitz (heterogeneous)","what":"glmmTMB","title":"Comparison with other software","text":"","code":"glmmTMB(   FEV1 ~ ARMCD * AVISIT + toep(0 + AVISIT | USUBJID),   dispformula = ~ 0,   data = fev_data )"},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"proc-glimmix-7","dir":"Articles","previous_headings":"Model Implementations > Toeplitz (homogeneous)","what":"PROC GLIMMIX","title":"Comparison with other software","text":"","code":"PROC GLIMMIX DATA = fev_data; CLASS AVISIT(ref = 'VIS1') ARMCD(ref = 'PBO') USUBJID; MODEL FEV1 = AVISIT|ARMCD / ddfm=satterthwaite solution chisq; RANDOM AVISIT / subject=USUBJID type=TOEP;"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"mmrm-8","dir":"Articles","previous_headings":"Model Implementations > Toeplitz (homogeneous)","what":"mmrm","title":"Comparison with other software","text":"","code":"mmrm(   formula = FEV1 ~ ARMCD * AVISIT + toep(AVISIT | USUBJID),   data = fev_data )"},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"proc-glimmix-8","dir":"Articles","previous_headings":"Model Implementations > Unstructured","what":"PROC GLIMMIX","title":"Comparison with other software","text":"","code":"PROC GLIMMIX DATA = fev_data; CLASS AVISIT(ref = 'VIS1') ARMCD(ref = 'PBO') USUBJID; MODEL FEV1 = ARMCD|AVISIT / ddfm=satterthwaite solution chisq; RANDOM AVISIT / subject=USUBJID type=un;"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"mmrm-9","dir":"Articles","previous_headings":"Model Implementations > Unstructured","what":"mmrm","title":"Comparison with other software","text":"","code":"mmrm(   formula = FEV1 ~ ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"gls-5","dir":"Articles","previous_headings":"Model Implementations > Unstructured","what":"gls","title":"Comparison with other software","text":"","code":"gls(   formula = FEV1 ~  ARMCD * AVISIT,   data = fev_data,   correlation = corSymm(form = ~AVISIT | USUBJID),   weights = varIdent(form = ~1|AVISIT),   na.action = na.omit )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"lmer","dir":"Articles","previous_headings":"Model Implementations > Unstructured","what":"lmer","title":"Comparison with other software","text":"","code":"lmer(   FEV1 ~ ARMCD * AVISIT + (0 + AVISIT | USUBJID),   data = fev_data,   control = lmerControl(check.nobs.vs.nRE = \"ignore\"),   na.action = na.omit )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"glmmtmb-4","dir":"Articles","previous_headings":"Model Implementations > Unstructured","what":"glmmTMB","title":"Comparison with other software","text":"","code":"glmmTMB(   FEV1 ~ ARMCD * AVISIT + us(0 + AVISIT | USUBJID),   dispformula = ~ 0,   data = fev_data )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"benchmarking","dir":"Articles","previous_headings":"","what":"Benchmarking","title":"Comparison with other software","text":"Next, MMRM fitting procedures compared using FEV BCVA datasets. FEV1 measurements modeled function race, treatment arm, visit number, interaction treatment arm visit number. Change BCVA assumed function race, baseline BCVA, treatment arm, visit number, treatment–visit interaction. datasets, repeated measures modeled using unstructured covariance matrix. implementations’ convergence times evaluated first, followed comparison estimates. Finally, fit procedures simulated BCVA-like data assess impact missingness convergence rates.","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"fev-data-1","dir":"Articles","previous_headings":"Benchmarking > Convergence Times","what":"FEV Data","title":"Comparison with other software","text":"mmrm, PROC GLIMMIX, gls, lmer, glmmTMB functions applied FEV dataset 10 times. convergence times recorded replicate reported table . Comparison convergence times: milliseconds clear results mmrm converges significantly faster R functions. Though demonstrated , generally true regardless sample size covariance structure used. mmrm faster PROC GLIMMIX.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"bcva-data-1","dir":"Articles","previous_headings":"Benchmarking > Convergence Times","what":"BCVA Data","title":"Comparison with other software","text":"MMRM implementations now applied BCVA dataset 10 times. convergence times presented . Comparison convergence times: seconds find mmrm produces fastest convergence times average.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"marginal-treatment-effect-estimates-comparison","dir":"Articles","previous_headings":"Benchmarking","what":"Marginal Treatment Effect Estimates Comparison","title":"Comparison with other software","text":"next estimate marginal mean treatment effects visit FEV BCVA datasets using MMRM fitting procedures. R implementations’ estimates reported relative PROC GLIMMIX’s estimates. Convergence status also reported.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"fev-data-2","dir":"Articles","previous_headings":"Benchmarking > Marginal Treatment Effect Estimates Comparison","what":"FEV Data","title":"Comparison with other software","text":"R procedures’ estimates similar output PROC GLIMMIX, though mmrm gls generate estimates closest produced using SAS. methods converge using default optimization arguments.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"bcva-data-2","dir":"Articles","previous_headings":"Benchmarking > Marginal Treatment Effect Estimates Comparison","what":"BCVA Data","title":"Comparison with other software","text":"mmrm, gls lmer produce estimates virtually identical PROC GLIMMIX’s, glmmTMB . likely explained glmmTMB’s failure converge. Note lmer fails converge.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"impact-of-missing-data-on-convergence-rates","dir":"Articles","previous_headings":"Benchmarking","what":"Impact of Missing Data on Convergence Rates","title":"Comparison with other software","text":"results previous benchmark suggest amount patients missing later time points affect certain implementations’ capacity converge. investigate simulating data using data-generating process similar BCVA datasets, though various rates patient dropout. Ten datasets 200 patients generated following levels missingness: none, mild, moderate, high. scenarios, observations missing random. number patients observed visit obtained one replicated dataset level missingness presented table . Number patients per visit convergence rates implementations stratified missingness level presented plot .  mmrm, gls, PROC GLIMMIX resilient missingness, exhibiting convergence problems scenarios missingness. implementations converged scenarios’ replicates. glmmTMB, hand, convergence issues -, mild-, high-missingness datasets, worst convergence rate occurring datasets dropout. Finally, lmer unreliable scenarios, suggesting ’s convergence issues stem something missing observations. Note default optimization schemes used method; schemes can modified potentially improve convergence rates. comprehensive simulation study using data-generating processes similar one used outlined simulations/missing-data-benchmarks subdirectory. addition assessing effect missing data software convergence rates, also evaluate methods’ fit times empirical bias, variance, 95% coverage rates, type error rates type II error rates. mmrm found robust software fitting MMRMs scenarios large proportion patients missing last time points. Additionally, mmrm fastest average fit times regardless amount missingness. implementations considered produce similar empirical biases, variances, 95% coverage rates, type error rates type II error rates.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/mmrm_review_methods.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session Information","title":"Comparison with other software","text":"","code":"#> R version 4.3.2 (2023-10-31) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     #>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        #>  #> time zone: Etc/UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #>  [1] ggplot2_3.4.4           emmeans_1.8.9           knitr_1.45              #>  [4] sasr_0.1.2              glmmTMB_1.1.8           nlme_3.1-163            #>  [7] lme4_1.1-35.1           Matrix_1.6-1.1          mmrm_0.3.7              #> [10] stringr_1.5.0           microbenchmark_1.4.10   purrr_1.0.2             #> [13] dplyr_1.1.3             clusterGeneration_1.3.8 MASS_7.3-60             #>  #> loaded via a namespace (and not attached): #>  [1] gtable_0.3.4        TMB_1.9.6           xfun_0.41           #>  [4] bslib_0.5.1         lattice_0.22-5      numDeriv_2016.8-1.1 #>  [7] vctrs_0.6.4         tools_4.3.2         Rdpack_2.5          #> [10] generics_0.1.3      parallel_4.3.2      sandwich_3.0-2      #> [13] tibble_3.2.1        fansi_1.0.5         highr_0.10          #> [16] pkgconfig_2.0.3     checkmate_2.3.0     desc_1.4.2          #> [19] lifecycle_1.0.4     farver_2.1.1        compiler_4.3.2      #> [22] textshaping_0.3.7   munsell_0.5.0       codetools_0.2-19    #> [25] htmltools_0.5.7     sass_0.4.7          yaml_2.3.7          #> [28] pillar_1.9.0        pkgdown_2.0.7       nloptr_2.0.3        #> [31] jquerylib_0.1.4     cachem_1.0.8        boot_1.3-28.1       #> [34] multcomp_1.4-25     tidyselect_1.2.0    digest_0.6.33       #> [37] mvtnorm_1.2-3       stringi_1.7.12      labeling_0.4.3      #> [40] splines_4.3.2       rprojroot_2.0.4     fastmap_1.1.1       #> [43] grid_4.3.2          colorspace_2.1-0    cli_3.6.1           #> [46] magrittr_2.0.3      survival_3.5-7      utf8_1.2.4          #> [49] TH.data_1.1-2       withr_2.5.2         scales_1.2.1        #> [52] backports_1.4.1     estimability_1.4.1  rmarkdown_2.25      #> [55] reticulate_1.34.0   png_0.1-8           ragg_1.2.6          #> [58] zoo_1.8-12          memoise_2.0.1       coda_0.19-4         #> [61] evaluate_0.23       rbibutils_2.2.16    mgcv_1.9-0          #> [64] rlang_1.1.2         Rcpp_1.0.11         xtable_1.8-4        #> [67] glue_1.6.2          minqa_1.2.6         jsonlite_1.8.7      #> [70] R6_2.5.1            systemfonts_1.0.5   fs_1.6.3"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Package Structure","text":"mmrm package built TMB complex structure, might hard new developers onboard. make easier new developers join, documentation created.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"package-structures","dir":"Articles","previous_headings":"","what":"Package Structures","title":"Package Structure","text":"mmrm R package, following sections describe files/folders contained package well repository.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"data","dir":"Articles","previous_headings":"Package Structures","what":"data","title":"Package Structure","text":"data/ folder mmrm example data sets stored. See documentation fev_data bcva_data details.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"data-raw","dir":"Articles","previous_headings":"Package Structures","what":"data-raw","title":"Package Structure","text":"data-raw/ folder contains source code produce simulated example data sets. Currently contains bcva_data.R (associated helper file) producing bcva_data data set, cached results comparing mmrm implementations.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"design","dir":"Articles","previous_headings":"Package Structures","what":"design","title":"Package Structure","text":"design/ folder design documents, prototype scripts SAS code comparisons stored. new idea specific implementations, can add design doc including prototype implementations Rmd file folder. Note folder part actual R package part git repository. Different folders contain R scripts Rmd files different topics, example:","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"sas","dir":"Articles","previous_headings":"Package Structures > design","what":"SAS","title":"Package Structure","text":"design/SAS/ folder contains programs run MMRM models SAS corresponding SAS outputs. results used integration tests (see integration tests).","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"tmb","dir":"Articles","previous_headings":"Package Structures > design","what":"TMB","title":"Package Structure","text":"design/TMB/ folder prototypes first mmrm implementations TMB stored.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"inst","dir":"Articles","previous_headings":"Package Structures","what":"inst","title":"Package Structure","text":"Files inst/ folder kept installation R package. jss.csl specifying Journal Statistical Software citation style used Rdpack references. REFERENCES.bib keeps list referenced literature. WORDLIST kept --date non-English words, allowing package pass spell-checker.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"man","dir":"Articles","previous_headings":"Package Structures","what":"man","title":"Package Structure","text":"man/ folder contains function documentation generated roxygen2. Please edit file folder, otherwise may run problems.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"namespace","dir":"Articles","previous_headings":"Package Structures","what":"NAMESPACE","title":"Package Structure","text":"Since use roxygen2 also NAMESPACE file automatically generated usually need edited manually. Note can exceptions, e.g. removing previously exported function package, case manual deletion corresponding entry might necessary unblock roxygen2.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"news-md","dir":"Articles","previous_headings":"Package Structures","what":"NEWS.md","title":"Package Structure","text":"file lists user facing changes (new features, bug fixes, etc.) updated development cleaned release. important user experience understand changes releases.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"r","dir":"Articles","previous_headings":"Package Structures","what":"R","title":"Package Structure","text":"folder contains source code written R, just like every R packages. Please refer documentation page details user facing API.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"readme","dir":"Articles","previous_headings":"Package Structures","what":"README","title":"Package Structure","text":"use Rmd file README.Rmd knit corresponding md file. file specifies landing page pkgdown website GitHub repository hence nice, succinct clean.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"simulations","dir":"Articles","previous_headings":"Package Structures","what":"simulations","title":"Package Structure","text":"folder contains simulation scripts results compare mmrm software modifications mmrm. Please refer README files subfolders details.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"src","dir":"Articles","previous_headings":"Package Structures","what":"src","title":"Package Structure","text":"folder includes source code written C++, either using Rcpp TMB frameworks.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"chol_cache-h","dir":"Articles","previous_headings":"Package Structures > src","what":"chol_cache.h","title":"Package Structure","text":"file contains classes caching Cholesky factorizations efficiently.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"covariance-h","dir":"Articles","previous_headings":"Package Structures > src","what":"covariance.h","title":"Package Structure","text":"file includes implementations covariance structures suitable parameterization, calculation lower triangular part Cholesky factorization covariance matrix. implementations Cholesky factorization needed, see model fitting algorithm vignette. covariance structures, see covariance structures vignette.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"derivatives-h","dir":"Articles","previous_headings":"Package Structures > src","what":"derivatives.h","title":"Package Structure","text":"file contains classes enable automatic differentiation calculation important coefficient covariance matrix calculations Kenward-Roger Satterthwaite degrees freedom calculations.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"empirical-cpp","dir":"Articles","previous_headings":"Package Structures > src","what":"empirical.cpp","title":"Package Structure","text":"file implements coefficient covariance matrix calculations.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"exports-cpp","dir":"Articles","previous_headings":"Package Structures > src","what":"exports.cpp","title":"Package Structure","text":"file contains Rcpp interfaces coefficient covariance matrix, Kenward-Roger, Jacobian prediction calculations.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"jacobian-cpp","dir":"Articles","previous_headings":"Package Structures > src","what":"jacobian.cpp","title":"Package Structure","text":"file implements Jacobian calculations needed Satterthwaite degrees freedom.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"kr_comp-cpp","dir":"Articles","previous_headings":"Package Structures > src","what":"kr_comp.cpp","title":"Package Structure","text":"file implements P, Q R matrix calculations needed Kenward-Roger degrees freedom.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"makevars","dir":"Articles","previous_headings":"Package Structures > src","what":"Makevars","title":"Package Structure","text":"file specifies additional flags used source code compilation. ask TMB use TMB automatic differentiation framework (instead default CppAD framework) efficient, disable useless warnings Eigen library compilation. Note additional flags -Wno-ignored-attributes included compiler specific. can instead specified local ~/.R/Makevars files.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"mmrm-cpp","dir":"Articles","previous_headings":"Package Structures > src","what":"mmrm.cpp","title":"Package Structure","text":"file core part likelihood calculated. objective function reads input R performs calculations inside.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"predict-cpp","dir":"Articles","previous_headings":"Package Structures > src","what":"predict.cpp","title":"Package Structure","text":"file implements prediction calculations.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"test-files","dir":"Articles","previous_headings":"Package Structures > src","what":"test files","title":"Package Structure","text":"Files starting test- tests helper files run tests. (important also aim high unit test coverage source code.)","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"tmb-cpp-and-tmb_includes-h","dir":"Articles","previous_headings":"Package Structures > src","what":"tmb.cpp and tmb_includes.h","title":"Package Structure","text":"two files includes TMB module.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"utils-h","dir":"Articles","previous_headings":"Package Structures > src","what":"utils.h","title":"Package Structure","text":"files includes utilities used internally.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"tests","dir":"Articles","previous_headings":"Package Structures","what":"tests","title":"Package Structure","text":"tests/ folder includes unit tests R functions, using testthat package.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"vignettes","dir":"Articles","previous_headings":"Package Structures","what":"vignettes","title":"Package Structure","text":"vignettes/ folder includes Rmd documentation files helps user understand usage, detail, etc. vignettes rendered .html files deployed package website.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"other-files","dir":"Articles","previous_headings":"Package Structures","what":"Other files","title":"Package Structure","text":"files can helpful package development used mmrm.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"pkgdown-yml","dir":"Articles","previous_headings":"Package Structures > Other files","what":"_pkgdown.yml","title":"Package Structure","text":"file configuration file pkgdown-based website. pkgdown used covert package documentation (man/, vignettes/) package website. , visit pkgdown documentation.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"gitignore","dir":"Articles","previous_headings":"Package Structures > Other files","what":".gitignore","title":"Package Structure","text":"file specify untracked files/file patterns git ignore.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"lintr","dir":"Articles","previous_headings":"Package Structures > Other files","what":".lintr","title":"Package Structure","text":"file serves configuration lintr static code analysis. Please install lintr package developing system enable analysis. provide information errors, style issues, etc. , visit lintr documentation.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"pre-commit-config-yaml","dir":"Articles","previous_headings":"Package Structures > Other files","what":".pre-commit-config.yaml","title":"Package Structure","text":"file includes configurations use pre-commit. pre-commit tool help us identify simple issues submit code. , visit pre-commit documentation.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/package_structure.html","id":"rbuildignore","dir":"Articles","previous_headings":"Package Structures > Other files","what":".Rbuildignore","title":"Package Structure","text":"file specifies files folders repository included building R package. Please note important know regular expressions. Hence, want specify exact file name need use e.g. ^cache$ format, just using cache instead match additional files folders cache part name. can lead problems.","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/predict.html","id":"mathematical-derivations","dir":"Articles","previous_headings":"Prediction of conditional mean","what":"Mathematical Derivations","title":"Prediction and Simulation","text":"Since residuals can correlated, potentially existing observed outcomes individual can informative predicting unobserved valued individual. Assume data sorted \\(Y_{ij} = y_{ij}, j = k+1, k+2, \\dots, p\\) observed \\(Y_{ij}, j = 1, 2, \\dots, k\\) . special case outcomes unobserved (new individual) covered \\(k=p\\). Let \\[ \\Sigma_i(X_i, \\theta) = \\begin{pmatrix} \\Sigma_i^{new,new}(X_i,\\theta) & \\Sigma_i^{new,old}(X_i,\\theta)\\\\ \\Sigma_i^{old,new}(X_i,\\theta) & \\Sigma_i^{old,old}(X_i,\\theta)\\end{pmatrix} \\] block decomposition \\(\\Sigma_i^{new,new}(X_i,\\theta) = \\Big(\\big(\\Sigma_i(X_i,\\theta)\\big)_{j,l}\\Big)_{j = 1\\dots k,\\, l = 1\\ldots k}\\) similarly blocks. Predictions can made based conditional distribution \\[ Y_{, 1\\ldots k}\\,|\\,X_i,Y_{,k+1\\ldots p}=y_{, k+1\\ldots p}\\sim\\mathcal{N}(\\mu_i, A_i) \\] \\[ \\mu_i(\\beta,\\theta) = (X_i \\ \\beta)_{1\\ldots k} +  \\Sigma_i^{new,old}(X_i,\\theta) \\, \\Big(\\big(\\Sigma_i^{old,old}(X_i,\\theta)\\big)^{-1} \\big(y_i^{k+1\\ldots p} -  (X_i \\ \\beta)_{k+1\\ldots p}\\big)\\Big) \\] \\[ A_i(\\beta, \\theta) = \\Sigma_i^{new,new}(X_i,\\theta) - \\Sigma_i^{old,new}(X_i,\\theta) \\Big(\\Sigma_i^{old,old}(X_i,\\theta)\\Big)^{-1} \\Sigma_i^{new,old}(X_i,\\theta) \\ . \\] Note \\(A_i\\) depend \\(\\beta\\).","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/predict.html","id":"implementation-of-predict","dir":"Articles","previous_headings":"Prediction of conditional mean","what":"Implementation of predict","title":"Prediction and Simulation","text":"implementing predict(), \\(\\widehat{\\mu}_i:=\\mu_i(\\widehat{\\beta},\\widehat{\\theta})\\) required. predict(interval = \"confidence\") additionally standard errors required. derived using delta methods since \\(\\mu_i\\) function estimated model parameters \\(\\beta\\) \\(\\theta\\). require Jacobian \\(\\nabla\\mu_i(\\beta,\\theta)|_{\\big(\\widehat{\\beta},\\widehat{\\theta}\\big)}\\) addition estimated variance covariance matrix parameter estimate \\(\\big(\\widehat{\\beta},\\widehat{\\theta}\\big)\\), \\(\\widehat{S}\\). Standard errors \\(\\widehat{\\mu}^{\\,()}\\) given square root diagonal elements \\[ \\Big(\\nabla\\mu_i(\\beta,\\theta)|_{\\big(\\widehat{\\beta},\\widehat{\\theta}\\big)}\\Big)^\\top\\quad \\widehat{S} \\quad \\Big(\\nabla\\mu_i(\\beta,\\theta)|_{\\big(\\widehat{\\beta},\\widehat{\\theta}\\big)}\\Big) \\] predict(interval = \"prediction\") one use square root diagonal elements \\(A_i\\big(\\widehat{\\beta},\\widehat{\\theta}\\big)\\) instead. delta method used make upper lower boundaries reflect parameter estimation uncertainty. Alternatively, intervals can derived using parametric bootstrap sample unrestricted parameters \\(\\theta\\). probably also easier interval = \"prediction\" case. Please note intervals, assume distribution approximately normal: use \\(\\mu_{,j}(\\hat\\beta, \\hat\\theta) \\pm Z_{\\alpha} * sqrt(A_{, j, j}(\\hat\\beta, \\hat\\theta))\\) construct , \\(\\mu_{,j}(\\hat\\beta, \\hat\\theta)\\) \\(j\\)th element \\(\\mu_i(\\hat\\beta, \\hat\\theta)\\), \\(A_{, j, j}(\\hat\\beta, \\hat\\theta)\\) \\(j,j\\) element \\(A_i(\\hat\\beta, \\hat\\theta)\\).","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/predict.html","id":"parametric-sampling-for-prediction-interval","dir":"Articles","previous_headings":"Prediction of conditional mean","what":"Parametric Sampling for Prediction Interval","title":"Prediction and Simulation","text":"conditional variance formula \\[ Var(Y_i) = Var(E(Y_i|\\theta)) + E(Var(Y_i|\\theta)) \\] conditional expectation \\(E(Y_i|\\theta)\\) conditional variance \\(Var(Y_i|\\theta)\\) already described \\[ E(Y_i|\\theta) = \\mu_i(\\beta, \\theta) \\] \\[ Var(Y_i|\\theta) = A_i(\\beta, \\theta), \\] can sample \\(\\theta\\) obtain \\(\\beta\\), calculate variance conditional mean mean conditional variance.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/predict.html","id":"prediction-of-conditional-mean-for-new-subjects","dir":"Articles","previous_headings":"Prediction of conditional mean","what":"Prediction of Conditional Mean for New Subjects","title":"Prediction and Simulation","text":"observations subject, prediction quite simple: \\[   Y_i = X_i \\hat\\beta \\]","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/predict.html","id":"simulate-response","dir":"Articles","previous_headings":"","what":"Simulate response","title":"Prediction and Simulation","text":"create simulation responses fitted model, multiple situations: whether simulation conditional \\(\\theta\\) \\(\\beta\\) estimates, marginal?","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/predict.html","id":"conditional-simulation","dir":"Articles","previous_headings":"Simulate response","what":"Conditional Simulation","title":"Prediction and Simulation","text":"conditional simulation setting, variance-covariance matrix, expectation \\(Y_i\\) already given Mathematical Derivations. Please note implementation predict function, use diagonal elements \\(A_i\\), however, need make use full matrix \\(A_i\\) obtain correctly correlated simulated observations.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/predict.html","id":"marginal-simulation","dir":"Articles","previous_headings":"Simulate response","what":"Marginal Simulation","title":"Prediction and Simulation","text":"simulate marginally, take variance \\(\\hat\\theta\\) \\(\\hat\\beta\\) consideration. simulation, first generate \\(\\theta\\) assuming approximately follows multivariate normal distribution. , conditional \\(\\theta\\) sampled, generate \\(\\beta\\) also assuming approximately follows multivariate normal distribution. Now \\(\\theta\\) \\(\\beta\\) estimates, just follow conditional simulation.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/predict.html","id":"implementation-of-simulate","dir":"Articles","previous_headings":"Simulate response","what":"Implementation of simulate","title":"Prediction and Simulation","text":"implement simulate function, first ensure expectation (\\(\\mu\\)) variance-covariance matrix (\\(\\)) generated predict function, subjects. simulate(method = \"conditional\"), use estimated \\(\\theta\\) \\(\\beta\\) construct \\(\\mu\\) \\(\\) directly, generate response \\(N(\\mu, )\\) distribution. simulate(method = \"marginal\"), repetition simulation, generate \\(\\theta_{new}\\) mmrm fit, estimate \\(\\theta\\) variance-covariance matrix \\(\\theta\\) provided. Using generated \\(\\theta_{new}\\), obtain \\(\\beta_{new}\\) variance-covariance matrix, \\(\\theta_{new}\\) data used fit. sample \\(\\beta\\) follows. note C++ side already robust Cholesky decomposition inverse asymptotic covariance matrix: \\[ cov(\\hat\\beta) = (X^\\top W X)^{-1} = (LDL^\\top)^{-1} \\] Hence make sure report lower triangular matrix \\(L\\) diagonal matrix \\(D\\) back R side, afterwards can generate \\(\\beta\\) samples follows: \\[ \\beta_{sample} = \\beta_{new} + L^{-\\top}D^{-1/2}z_{sample} \\] \\(z_{sample}\\) drawn standard multivariate normal distribution, since \\[ cov(L^{-\\top}D^{-1/2}z_{sample}) = L^{-\\top}D^{-1/2} I_p D^{-1/2} L^{-1} = L^{-\\top}D^{-1}L^{-1} = (LDL^\\top)^{-1} = cov(\\hat\\beta) \\] note calculating \\(w = L^{-\\top}D^{-1/2}z_{sample}\\) efficient via backwards solving \\[ L^\\top w = D^{-1/2}z_{sample} \\] since \\(L^\\top\\) upper right triangular. simulate observations simulate(method = \"conditional\", beta = beta_sample, theta = theta_new). pool repetitions together thus obtain marginal simulation results.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/predict.html","id":"relationship-between-predict-and-simulate-results","dir":"Articles","previous_headings":"","what":"Relationship Between predict and simulate Results","title":"Prediction and Simulation","text":"summarize different options predict simulate methods explain relate .","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/predict.html","id":"predict-options","dir":"Articles","previous_headings":"Relationship Between predict and simulate Results","what":"predict options","title":"Prediction and Simulation","text":"predict(type = \"confidence\") gives variance predictions conditional \\(\\theta\\) estimate, taking account uncertainty estimating \\(\\beta\\). ignore uncertainty estimating \\(\\theta\\). also add measurement error \\(\\epsilon\\). can use prediction interested predicting mean unobserved \\(y_i\\), assuming estimated \\(\\theta\\) true variance parameters. predict(type = \"prediction\") contrast takes account full uncertainty, including variance \\(\\theta\\) measurement error \\(\\epsilon\\). can use prediction interested reliable confidence intervals unobserved \\(y_i\\) well observed \\(y_i\\), assuming like predict repeated observations subjects time points.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/predict.html","id":"simulate-options","dir":"Articles","previous_headings":"Relationship Between predict and simulate Results","what":"simulate options","title":"Prediction and Simulation","text":"simulate(type = \"conditional\") simulates observations keeping \\(\\theta\\) \\(\\beta\\) estimates fixed. adds measurement errors \\(\\epsilon\\) generating simulated values. Hence mean simulated values within confidence intervals predict(type = \"conditional\"). simulate(type = \"marginal\") simulates observations taking account uncertainty \\(\\beta\\) \\(\\theta\\) sampling asymptotic frequentist distributions. top , also adds measurement errors \\(\\epsilon\\). hence using distribution predict(type = \"prediction\").","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/predict.html","id":"comparison-with-sas","dir":"Articles","previous_headings":"","what":"Comparison with SAS","title":"Prediction and Simulation","text":"SAS, proc mixed, able generate predictions using outp argument model statement. example: However, differences SAS implementation mmrm package, described follows: mmrm SAS provide predicted means (conditional observations) unobserved records, SAS also provides predicted means observed records mmrm . rationale mmrm package want consistent notion predictions conditional observed records - means observed records observed therefore prediction uncertainty anymore. prediction standard error different mmrm SAS. SAS prediction standard error conditional estimated variance parameters \\(\\theta\\), mmrm marginal prediction standard error provided. rationale mmrm package want take account full uncertainty parameter estimates including \\(\\theta\\). prediction intervals SAS based t distribution, currently mmrm use normal distribution. considering extension towards using t distribution future welcome feedback detail.","code":"PROC MIXED DATA = fev_data method=reml;   CLASS RACE(ref = 'Asian') AVISIT(ref = 'VIS4') SEX(ref = 'Male') ARMCD(ref = 'PBO') USUBJID;   MODEL FEV1 = ARMCD / ddfm=Satterthewaite solution chisq outp=pred;   REPEATED AVISIT / subject=USUBJID type=un r rcorr;   LSMEANS ARMCD / pdiff=all cl alpha=0.05 slice=AVISIT; RUN;"},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/satterthwaite.html","id":"satterthwaite-degrees-of-freedom-for-asymptotic-covariance","dir":"Articles","previous_headings":"","what":"Satterthwaite degrees of freedom for asymptotic covariance","title":"Satterthwaite","text":"Christensen (2018) Satterthwaite degrees freedom approximation based normal models well detailed computational approach models fitted lme4 package explained. follow algorithm explain implementation mmrm package. model definition Details model fitting mmrm. also using notation Details Kenward-Roger calculations. particular, assume contrast matrix \\(C \\\\mathbb{R}^{c\\times p}\\) want test linear hypothesis \\(C\\beta = 0\\). , \\(W(\\hat\\theta)\\) inverse Hessian matrix log-likelihood function \\(\\theta\\) evaluated estimate \\(\\hat\\theta\\), .e. observed Fisher Information matrix consistent estimator variance-covariance matrix \\(\\hat\\theta\\). \\(\\Phi(\\theta) = \\left\\{X^\\top \\Omega(\\theta)^{-1} X\\right\\} ^{-1}\\) asymptotic covariance matrix \\(\\hat\\beta\\).","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/satterthwaite.html","id":"one-dimensional-contrast","dir":"Articles","previous_headings":"Satterthwaite degrees of freedom for asymptotic covariance","what":"One-dimensional contrast","title":"Satterthwaite","text":"start case one-dimensional contrast, .e. \\(c = 1\\). Satterthwaite adjusted degrees freedom corresponding t-test defined : \\[ \\hat\\nu(\\hat\\theta) = \\frac{2f(\\hat\\theta)^2}{f{'}(\\hat\\theta)^\\top W(\\hat\\theta) f{'}(\\hat\\theta)} \\] \\(f(\\hat\\theta) = C \\Phi(\\hat\\theta) C^\\top\\) scalar numerator can identify variance estimate estimated scalar contrast \\(C\\hat\\beta\\). computational challenge essentially evaluate denominator expression \\(\\hat\\nu(\\hat\\theta)\\), amounts computing \\(k\\)-dimensional gradient \\(f{'}(\\hat\\theta)\\) \\(f(\\theta)\\) (given contrast matrix \\(C\\)) estimate \\(\\hat\\theta\\). already variance-covariance matrix \\(W(\\hat\\theta)\\) variance parameter vector \\(\\theta\\) model fitting.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/satterthwaite.html","id":"jacobian-approach","dir":"Articles","previous_headings":"Satterthwaite degrees of freedom for asymptotic covariance > One-dimensional contrast","what":"Jacobian approach","title":"Satterthwaite","text":"However, proceeded naive way , need recompute denominator every chosen \\(C\\). slow, e.g. changing \\(C\\) every time want test single coefficient within \\(\\beta\\). better instead evaluate gradient matrix valued function \\(\\Phi(\\theta)\\), therefore Jacobian, regards \\(\\theta\\), \\(\\mathcal{J}(\\theta) = \\nabla_\\theta \\Phi(\\theta)\\). Imagine \\(\\mathcal{J}(\\theta)\\) 3-dimensional array \\(k\\) faces size \\(p\\times p\\). Left right multiplying face \\(C\\) \\(C^\\top\\) respectively leads \\(k\\)-dimensional gradient \\(f'(\\theta) = C \\mathcal{J}(\\theta) C^\\top\\). Therefore new contrast \\(C\\) just need perform simple matrix multiplications, fast (see h_gradient() implemented). Thus, computed estimated Jacobian \\(\\mathcal{J}(\\hat\\theta)\\), matter putting different quantities together compute estimate denominator degrees freedom, \\(\\hat\\nu(\\hat\\theta)\\).","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/satterthwaite.html","id":"jacobian-calculation","dir":"Articles","previous_headings":"Satterthwaite degrees of freedom for asymptotic covariance > One-dimensional contrast","what":"Jacobian calculation","title":"Satterthwaite","text":"Currently, evaluate gradient \\(\\Phi(\\theta)\\) function h_jac_list(). uses automatic differentiation provided TMB. first obtain Jacobian inverse covariance matrix coefficient (\\(\\Phi(\\theta)^{-1}\\)), following Kenward-Roger calculations. Please note need \\(P_h\\) matrices. , obtain Jacobian covariance matrix coefficient, following algorithm, use \\(\\Phi(\\theta)\\) estimated fit obtain Jacobian. result list (length \\(k\\) \\(k\\) dimension variance parameter \\(\\theta\\)) matrices \\(p \\times p\\), \\(p\\) dimension \\(\\beta\\).","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/satterthwaite.html","id":"multi-dimensional-contrast","dir":"Articles","previous_headings":"Satterthwaite degrees of freedom for asymptotic covariance","what":"Multi-dimensional contrast","title":"Satterthwaite","text":"\\(c > 1\\) testing multiple contrasts . F-statistic \\[ F = \\frac{1}{c} (C\\hat\\beta)^\\top  (C \\Phi(\\hat\\theta) C^\\top)^{-1} C^\\top (C\\hat\\beta) \\] calculated, interested estimating appropriate denominator degrees freedom \\(F\\), assuming \\(c\\) numerator degrees freedom. Note special cases, orthogonal balanced designs, F distribution exact null hypothesis. general, approximation. calculations described detail Christensen (2018), don’t repeat detail. implementation h_df_md_sat() starts eigen-decomposition asymptotic variance-covariance matrix contrast estimate, .e. \\(C \\Phi(\\hat\\theta) C^\\top\\). F-statistic can rewritten sum \\(t^2\\) statistics based eigen-values. corresponding random variables independent (design derived orthogonal eigen-vectors) essentially one degree freedom . Hence, \\(t\\) statistics treated one-dimensional contrast case, .e. denominator degree freedom calculated . Finally, using properties F distribution’s expectation, denominator degree freedom whole F statistic derived.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/satterthwaite.html","id":"satterthwaite-degrees-of-freedom-for-empirical-covariance","dir":"Articles","previous_headings":"","what":"Satterthwaite degrees of freedom for empirical covariance","title":"Satterthwaite","text":"Bell McCaffrey (2002) Satterthwaite degrees freedom combination sandwich covariance matrix estimator described.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/satterthwaite.html","id":"one-dimensional-contrast-1","dir":"Articles","previous_headings":"Satterthwaite degrees of freedom for empirical covariance","what":"One-dimensional contrast","title":"Satterthwaite","text":"one-dimensional contrast, following notation Details model fitting mmrm Details Kenward-Roger calculations, following derivation. estimator variance following term \\[   v = s c^\\top(X^\\top X)^{-1}\\sum_{}{X_i^\\top A_i \\epsilon_i \\epsilon_i^\\top A_i X_i} (X^\\top X)^{-1} c \\] \\(s\\) takes value \\(\\frac{n}{n-1}\\), \\(1\\) \\(\\frac{n-1}{n}\\), \\(A_i\\) takes \\(I_i\\), \\((I_i - H_{ii})^{-\\frac{1}{2}}\\), \\((I_i - H_{ii})^{-1}\\) respectively, \\(c\\) column vector, \\(v\\) can decomposed weighted sum independent \\(\\chi_1^2\\) distribution, weights eigenvalues \\(n\\times n\\) matrix \\(G\\) elements \\[   G_{ij} = g_i^\\top V g_j \\] \\[   g_i = s^{\\frac{1}{2}} (- H)_i^\\top A_i X_i (X^\\top X)^{-1} c \\] \\[   H = X(X^\\top X)^{-1}X^\\top \\] \\((- H)_i\\) corresponds rows subject \\(\\). degrees freedom can represented \\[   \\nu = \\frac{(\\sum_{}\\lambda_i)^2}{\\sum_{}{\\lambda_i^2}} \\] \\(\\lambda_i, = 1, \\dotsc, n\\) eigenvalues \\(G\\). Bell McCaffrey (2002) also suggests \\(V\\) can chosen identify matrix, \\(G_{ij} = g_i ^\\top g_j\\). Following Weighted Least Square Estimator, can transform original \\(X\\) \\(\\tilde{x}\\) use equations. avoid repeated computation matrix \\(A_i\\), \\(H\\) etc different contrasts, calculate cache following \\[   G^\\ast_i = (- H)_i^\\top A_i X_i (X^\\top X)^{-1} \\] \\(\\sum_i{m_i} \\times p\\) matrix. different contrasts, need calculate following \\[   g_i = G^\\ast_i c \\] obtain \\(\\sum_i{m_i} \\times 1\\) matrix, \\(G\\) can computed \\(g_i\\). obtain degrees freedom, avoid eigen computation large matrix, can use following equation \\[   \\nu = \\frac{(\\sum_{}\\lambda_i)^2}{\\sum_{}{\\lambda_i^2}} = \\frac{tr(G)^2}{\\sum_{}{\\sum_{j}{G_{ij}^2}}} \\] scale parameter used throughout package. proof following Proof \\[   tr(AB) = tr(BA) \\] Let \\(\\) dimension \\(p\\times q\\), \\(B\\) dimension \\(q\\times p\\) \\[   tr(AB) = \\sum_{=1}^{p}{(AB)_{ii}} = \\sum_{=1}^{p}{\\sum_{j=1}^{q}{A_{ij}B_{ji}}} \\] \\[   tr(BA) = \\sum_{=1}^{q}{(BA)_{ii}} = \\sum_{=1}^{q}{\\sum_{j=1}^{p}{B_{ij}A_{ji}}} \\] \\(tr(AB) = tr(BA)\\) Proof \\[   tr(G) = \\sum_{}(\\lambda_i) \\] \\[   \\sum_{}(\\lambda_i^2) = \\sum_{}{\\sum_{j}{G_{ij}^2}} \\] \\(G = G^\\top\\) Following eigen decomposition, \\[   G = Q \\Lambda Q^\\top \\] \\(\\Lambda\\) diagonal matrix, \\(Q\\) orthogonal matrix. Using previous formula \\(tr(AB) = tr(BA)\\), \\[   tr(G) = tr(Q \\Lambda Q^\\top) = tr(\\Lambda Q^\\top Q) = tr(\\Lambda) = \\sum_{}(\\lambda_i) \\] \\[   tr(G^\\top G) = tr(Q \\Lambda Q^\\top Q \\Lambda Q^\\top) = tr(\\Lambda^2 Q^\\top Q) = tr(\\Lambda^2) = \\sum_{}(\\lambda_i^2) \\] \\(tr(G^\\top G)\\) can expressed \\[   tr(G^\\top G) = \\sum_{}{(G^\\top G)_{ii}} = \\sum_{}{\\sum_{j}{G^\\top_{ij}G_{ji}}} = \\sum_{}{\\sum_{j}{G_{ij}^2}} \\]","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/articles/satterthwaite.html","id":"multi-dimensional-contrast-1","dir":"Articles","previous_headings":"Satterthwaite degrees of freedom for empirical covariance","what":"Multi-dimensional contrast","title":"Satterthwaite","text":"multi-dimensional contrast use technique multi-dimensional contrast asymptotic covariance.","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Sabanes Bove. Author, maintainer. Julia Dedic. Author. Doug Kelkhoff. Author. Kevin Kunzmann. Author. Brian Matthew Lang. Author. Liming Li. Author. Christian Stock. Author. Ya Wang. Author. Craig Gower-Page. Contributor. Dan James. Author. Jonathan Sidi. Author. Daniel Leibovitz. Author. Daniel D. Sjoberg. Author. Boehringer Ingelheim Ltd.. Copyright holder, funder. Gilead Sciences, Inc.. Copyright holder, funder. F. Hoffmann-La Roche AG. Copyright holder, funder. Merck Sharp & Dohme, Inc.. Copyright holder, funder. AstraZeneca plc. Copyright holder, funder.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sabanes Bove D, Dedic J, Kelkhoff D, Kunzmann K, Lang B, Li L, Stock C, Wang Y, James D, Sidi J, Leibovitz D, Sjoberg D (2023). mmrm: Mixed Models Repeated Measures. R package version 0.3.7, https://openpharma.github.io/mmrm/latest-tag/.","code":"@Manual{,   title = {mmrm: Mixed Models for Repeated Measures},   author = {Daniel {Sabanes Bove} and Julia Dedic and Doug Kelkhoff and Kevin Kunzmann and Brian Matthew Lang and Liming Li and Christian Stock and Ya Wang and Dan James and Jonathan Sidi and Daniel Leibovitz and Daniel D. Sjoberg},   year = {2023},   note = {R package version 0.3.7},   url = {https://openpharma.github.io/mmrm/latest-tag/}, }"},{"path":"https://openpharma.github.io/mmrm/latest-tag/index.html","id":"mmrm-","dir":"","previous_headings":"","what":"Mixed Models for Repeated Measures","title":"Mixed Models for Repeated Measures","text":"Mixed models repeated measures (MMRM) popular choice analyzing longitudinal continuous outcomes randomized clinical trials beyond; see Cnaan, Laird Slasor (1997) tutorial Mallinckrodt, Lane Schnell (2008) review. package implements MMRM based marginal linear model without random effects using Template Model Builder (TMB) enables fast robust model fitting. Users can specify variety covariance matrices, weight observations, fit models restricted standard maximum likelihood inference, perform hypothesis testing Satterthwaite Kenward-Roger adjustment, extract least square means estimates using emmeans. Scope: Continuous responses normal (potentially heteroscedastic) residuals. Marginal linear models (individual-level random effects). Main Features: Structures: unstructured, Toeplitz, AR1, compound symmetry, ante-dependence, spatial exponential. Groups: shared covariance structure subjects group-specific covariance estimates. Variances: homogeneous heterogeneous across time points. Supports REML ML. Supports weights. Least square means: can obtained emmeans package One- multi-dimensional linear contrasts model parameters can tested. Satterthwaite adjusted degrees freedom. Kenward-Roger adjusted degrees freedom coefficients covariance matrix. Coefficient Covariance Fast implementation using C++ automatic differentiation obtain precise gradient information model fitting. Model fitting algorithm details used mmrm. Dedicated parsnip engine linear regression Integration recipes tern.mmrm package can used run mmrm fit generate tabulation plots least square means per visit treatment arm, tabulation model diagnostics, diagnostic graphs, standard model outputs.","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/index.html","id":"release","dir":"","previous_headings":"Installation","what":"Release","title":"Mixed Models for Repeated Measures","text":"can install current release version CRAN :","code":"install.packages(\"mmrm\")"},{"path":"https://openpharma.github.io/mmrm/latest-tag/index.html","id":"development","dir":"","previous_headings":"Installation","what":"Development","title":"Mixed Models for Repeated Measures","text":"can install current development version R-Universe : preferred, Windows MacOS systems can install pre-compiled binary versions packages, avoiding need compilation. Alternatively, can install current development version GitHub : Note installation source can take substantial amount time, compilation C++ sources required.","code":"install.packages(   \"mmrm\",   repos = c(\"https://openpharma.r-universe.dev\", \"https://cloud.r-project.org\") ) if (!require(\"remotes\")) {   install.packages(\"remotes\") } remotes::install_github(\"openpharma/mmrm\")"},{"path":"https://openpharma.github.io/mmrm/latest-tag/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Mixed Models for Repeated Measures","text":"See also introductory vignette get started trying example: code specifies MMRM given covariates unstructured covariance matrix timepoints (also called visits clinical trial context, given AVISIT) within subjects (USUBJID). default uses restricted maximum likelihood (REML), also possible use ML, see ?mmrm. Printing object show output familiar anyone used popular modeling functions stats::lm(), stats::glm(), glmmTMB::glmmTMB(), lme4::nlmer(). print see function call, data used, covariance structure number variance parameters, well likelihood method, model deviance achieved. Additionally user provided printout estimated coefficients model convergence information: summary() method provides coefficients table Satterthwaite degrees freedom well covariance matrix estimate:","code":"library(mmrm) fit <- mmrm(   formula = FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data ) fit #> mmrm fit #>  #> Formula:     FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID) #> Data:        fev_data (used 537 observations from 197 subjects with maximum 4  #> timepoints) #> Covariance:  unstructured (10 variance parameters) #> Inference:   REML #> Deviance:    3386.45 #>  #> Coefficients:  #>                   (Intercept) RACEBlack or African American  #>                   30.77747548                    1.53049977  #>                     RACEWhite                     SEXFemale  #>                    5.64356535                    0.32606192  #>                      ARMCDTRT                    AVISITVIS2  #>                    3.77423004                    4.83958845  #>                    AVISITVIS3                    AVISITVIS4  #>                   10.34211288                   15.05389826  #>           ARMCDTRT:AVISITVIS2           ARMCDTRT:AVISITVIS3  #>                   -0.04192625                   -0.69368537  #>           ARMCDTRT:AVISITVIS4  #>                    0.62422703  #>  #> Model Inference Optimization: #> Converged with code 0 and message: convergence: rel_reduction_of_f <= factr*epsmch summary(fit) #> mmrm fit #>  #> Formula:     FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID) #> Data:        fev_data (used 537 observations from 197 subjects with maximum 4  #> timepoints) #> Covariance:  unstructured (10 variance parameters) #> Method:      Satterthwaite #> Vcov Method: Asymptotic #> Inference:   REML #>  #> Model selection criteria: #>      AIC      BIC   logLik deviance  #>   3406.4   3439.3  -1693.2   3386.4  #>  #> Coefficients:  #>                                Estimate Std. Error        df t value Pr(>|t|) #> (Intercept)                    30.77748    0.88656 218.80000  34.715  < 2e-16 #> RACEBlack or African American   1.53050    0.62448 168.67000   2.451 0.015272 #> RACEWhite                       5.64357    0.66561 157.14000   8.479 1.56e-14 #> SEXFemale                       0.32606    0.53195 166.13000   0.613 0.540744 #> ARMCDTRT                        3.77423    1.07415 145.55000   3.514 0.000589 #> AVISITVIS2                      4.83959    0.80172 143.88000   6.037 1.27e-08 #> AVISITVIS3                     10.34211    0.82269 155.56000  12.571  < 2e-16 #> AVISITVIS4                     15.05390    1.31281 138.47000  11.467  < 2e-16 #> ARMCDTRT:AVISITVIS2            -0.04193    1.12932 138.56000  -0.037 0.970439 #> ARMCDTRT:AVISITVIS3            -0.69369    1.18765 158.17000  -0.584 0.559996 #> ARMCDTRT:AVISITVIS4             0.62423    1.85085 129.72000   0.337 0.736463 #>                                   #> (Intercept)                   *** #> RACEBlack or African American *   #> RACEWhite                     *** #> SEXFemale                         #> ARMCDTRT                      *** #> AVISITVIS2                    *** #> AVISITVIS3                    *** #> AVISITVIS4                    *** #> ARMCDTRT:AVISITVIS2               #> ARMCDTRT:AVISITVIS3               #> ARMCDTRT:AVISITVIS4               #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Covariance estimate: #>         VIS1    VIS2    VIS3    VIS4 #> VIS1 40.5537 14.3960  4.9747 13.3867 #> VIS2 14.3960 26.5715  2.7855  7.4745 #> VIS3  4.9747  2.7855 14.8979  0.9082 #> VIS4 13.3867  7.4745  0.9082 95.5568"},{"path":"https://openpharma.github.io/mmrm/latest-tag/index.html","id":"citing-mmrm","dir":"","previous_headings":"","what":"Citing mmrm","title":"Mixed Models for Repeated Measures","text":"cite mmrm please see .","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/COV_TYPES.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariance Type Database — COV_TYPES","title":"Covariance Type Database — COV_TYPES","text":"internal constant covariance type information.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/COV_TYPES.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariance Type Database — COV_TYPES","text":"","code":"COV_TYPES"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/COV_TYPES.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Covariance Type Database — COV_TYPES","text":"data frame 5 variables one record per covariance type: name long-form name covariance structure type abbr abbreviated name covariance structure type habbr abbreviated name heterogeneous version covariance structure type (abbreviated name (abbr) trailing \"h\" structure heterogeneous implementation NA otherwise). heterogeneous logical value indicating whether covariance structure heterogeneous counterpart. spatial logical value indicating whether covariance structure spatial.","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/as.cov_struct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce into a Covariance Structure Definition — as.cov_struct","text":"","code":"as.cov_struct(x, ...)  # S3 method for formula as.cov_struct(x, warn_partial = TRUE, ...)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/as.cov_struct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce into a Covariance Structure Definition — as.cov_struct","text":"x object derive covariance structure. See object specific sections details. ... additional arguments unused. warn_partial (flag) whether emit warning parts formula disregarded.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/as.cov_struct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce into a Covariance Structure Definition — as.cov_struct","text":"cov_struct() object.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/as.cov_struct.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Coerce into a Covariance Structure Definition — as.cov_struct","text":"covariance structure can parsed model definition formula call. Generally, covariance structures defined using non-standard evaluation take following form:   example, formulas may include terms   Note sp_exp (spatial) covariance structures may provide multiple coordinates, identify Euclidean distance time points.","code":"type( (visit, )* visit | (group /)? subject ) us(time | subject) cp(time | group / subject) sp_exp(coord1, coord2 | group / subject)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/as.cov_struct.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Coerce into a Covariance Structure Definition — as.cov_struct","text":".cov_struct(formula): provided formula, specialized functions assumed covariance structure definitions must follow form:   component right hand side formula considered searching covariance definition.","code":"y ~ xs + type( (visit, )* visit | (group /)? subject )"},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/as.cov_struct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce into a Covariance Structure Definition — as.cov_struct","text":"","code":"# provide a covariance structure as a right-sided formula as.cov_struct(~ csh(visit | group / subject)) #> <covariance structure> #> heterogeneous compound symmetry: #>  #>   visit | group / subject #>    # when part of a full formula, suppress warnings using `warn_partial = FALSE` as.cov_struct(y ~ x + csh(visit | group / subject), warn_partial = FALSE) #> <covariance structure> #> heterogeneous compound symmetry: #>  #>   visit | group / subject #>"},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/bcva_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Data on BCVA — bcva_data","text":"","code":"bcva_data"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/bcva_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Data on BCVA — bcva_data","text":"tibble 10,000 rows 7 variables: USUBJID: subject ID. VISITN: visit number (numeric). AVISIT: visit number (factor). ARMCD: treatment, TRT CTL. RACE: 3-category race. BCVA_BL: BCVA baseline. BCVA_CHG: Change BCVA study visits.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/bcva_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example Data on BCVA — bcva_data","text":"artificial dataset.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/bcva_data.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Example Data on BCVA — bcva_data","text":"Measurements BCVA (best corrected visual acuity) measure many letters person can read eye chart using corrective lenses contacts. common endpoint ophthalmology trials.","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/cached_mmrm_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cache Data for mmrm Model Comparison — cached_mmrm_results","text":"","code":"cached_mmrm_results"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/cached_mmrm_results.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cache Data for mmrm Model Comparison — cached_mmrm_results","text":"list following elements: conv_time_fev: Convergence time FEV data. conv_time_bcva: Convergence time BCVA data. rel_diff_ests_tbl_fev: Relative difference estimates FEV data. rel_diff_ests_tbl_bcva: Relative difference estimates BCVA data. conv_rate: Convergence rate data different missing levels. df_missingness: Summary missingness simulated data.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/cached_mmrm_results.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Cache Data for mmrm Model Comparison — cached_mmrm_results","text":"created based simulations FEV data BCVA data.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/cached_mmrm_results.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Cache Data for mmrm Model Comparison — cached_mmrm_results","text":"cached data comparison used vignettes generation. Please make sure data refreshed package release running script data-raw/mmrm_review.R. Please make sure install mmrm package instead using devtools::load_all() running script achieve accurate timings.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/check_package_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Suggested Dependency Against Version Requirements — check_package_version","title":"Check Suggested Dependency Against Version Requirements — check_package_version","text":"Check Suggested Dependency Version Requirements","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/check_package_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Suggested Dependency Against Version Requirements — check_package_version","text":"","code":"check_package_version(pkg, ver = c(NA_character_, NA_character_))"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/check_package_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Suggested Dependency Against Version Requirements — check_package_version","text":"pkg (string) package name. ver (character) length 2 whose elements can provided numeric_version(), representing minimum maximum (inclusive) version requirement interoperability. NA, version requirement imposed. Defaults version requirement.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/check_package_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Suggested Dependency Against Version Requirements — check_package_version","text":"logical (invisibly) indicating whether loaded package meets version requirements. warning emitted otherwise.","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/component.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Component Access for mmrm_tmb Objects — component","text":"","code":"component(   object,   name = c(\"cov_type\", \"subject_var\", \"n_theta\", \"n_subjects\", \"n_timepoints\", \"n_obs\",     \"beta_vcov\", \"beta_vcov_complete\", \"varcor\", \"formula\", \"dataset\", \"n_groups\",     \"reml\", \"convergence\", \"evaluations\", \"method\", \"optimizer\", \"conv_message\", \"call\",     \"theta_est\", \"beta_est\", \"beta_est_complete\", \"beta_aliased\", \"x_matrix\", \"y_vector\",     \"neg_log_lik\", \"jac_list\", \"theta_vcov\", \"full_frame\") )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/component.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Component Access for mmrm_tmb Objects — component","text":"object (mmrm_tmb) fitted MMRM. name (character) component(s) retrieved.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/component.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Component Access for mmrm_tmb Objects — component","text":"corresponding component object, see details.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/component.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Component Access for mmrm_tmb Objects — component","text":"Available component() names follows: call: low-level function call generated model. formula: model formula. dataset: data set name. cov_type: covariance structure type. n_theta: number parameters. n_subjects: number subjects. n_timepoints: number modeled time points. n_obs: total number observations. reml: REML used (ML used FALSE). neg_log_lik: negative log likelihood. convergence: convergence code optimizer. conv_message: message accompanying convergence code. evaluations: number function evaluations optimization. method: Adjustment method used (mmrm objects), otherwise NULL (mmrm_tmb objects). beta_vcov: estimated variance-covariance matrix coefficients (excluding aliased coefficients). Kenward-Roger/Empirical adjusted coefficients covariance matrix used, adjusted covariance matrix returned (still obtain original asymptotic covariance matrix use object$beta_vcov). beta_vcov_complete: estimated variance-covariance matrix including aliased coefficients entries set NA. varcor: estimated covariance matrix residuals. multiple groups, named list estimated covariance matrices residuals returned. names group levels. theta_est: estimated variance parameters. beta_est: estimated coefficients (excluding aliased coefficients). beta_est_complete: estimated coefficients including aliased coefficients set NA. beta_aliased: whether coefficient aliased (.e. estimated) . theta_vcov:  estimated variance-covariance matrix variance parameters. x_matrix: design matrix used (excluding aliased columns). y_vector: response vector used. jac_list: Jacobian, see  h_jac_list() details. full_frame: data.frame n rows containing variables needed model.","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/component.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Component Access for mmrm_tmb Objects — component","text":"","code":"fit <- mmrm(   formula = FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data ) # Get all available components. component(fit) #> $cov_type #> [1] \"us\" #>  #> $subject_var #> [1] \"USUBJID\" #>  #> $n_theta #> [1] 10 #>  #> $n_subjects #> [1] 197 #>  #> $n_timepoints #> [1] 4 #>  #> $n_obs #> [1] 537 #>  #> $beta_vcov #>                               (Intercept) RACEBlack or African American #> (Intercept)                     0.7859971                  -0.226212328 #> RACEBlack or African American  -0.2262123                   0.389969478 #> RACEWhite                      -0.1771113                   0.181466304 #> SEXFemale                      -0.1684152                   0.031537926 #> ARMCDTRT                       -0.5674809                   0.028374129 #> AVISITVIS2                     -0.4227565                   0.002972514 #> AVISITVIS3                     -0.5231223                   0.010825469 #> AVISITVIS4                     -0.4406442                   0.002205681 #> ARMCDTRT:AVISITVIS2             0.4225282                   0.005382569 #> ARMCDTRT:AVISITVIS3             0.5218971                   0.011420575 #> ARMCDTRT:AVISITVIS4             0.4489247                  -0.012589283 #>                                  RACEWhite    SEXFemale     ARMCDTRT #> (Intercept)                   -0.177111308 -0.168415217 -0.567480906 #> RACEBlack or African American  0.181466304  0.031537926  0.028374129 #> RACEWhite                      0.443035801  0.023364777 -0.042968995 #> SEXFemale                      0.023364777  0.282971189  0.001814594 #> ARMCDTRT                      -0.042968995  0.001814594  1.153791725 #> AVISITVIS2                    -0.003149280  0.006471853  0.419528600 #> AVISITVIS3                    -0.002952986  0.006771404  0.517277529 #> AVISITVIS4                    -0.008230720  0.004088901  0.440653554 #> ARMCDTRT:AVISITVIS2            0.013485683 -0.016801299 -0.845758354 #> ARMCDTRT:AVISITVIS3            0.006720617 -0.024696304 -1.044355829 #> ARMCDTRT:AVISITVIS4            0.002967665 -0.009038640 -0.877606881 #>                                 AVISITVIS2   AVISITVIS3   AVISITVIS4 #> (Intercept)                   -0.422756455 -0.523122299 -0.440644229 #> RACEBlack or African American  0.002972514  0.010825469  0.002205681 #> RACEWhite                     -0.003149280 -0.002952986 -0.008230720 #> SEXFemale                      0.006471853  0.006771404  0.004088901 #> ARMCDTRT                       0.419528600  0.517277529  0.440653554 #> AVISITVIS2                     0.642749706  0.399048940  0.368340113 #> AVISITVIS3                     0.399048940  0.676823960  0.401800094 #> AVISITVIS4                     0.368340113  0.401800094  1.723478787 #> ARMCDTRT:AVISITVIS2           -0.643020114 -0.399203255 -0.368624024 #> ARMCDTRT:AVISITVIS3           -0.399238901 -0.676484876 -0.401792995 #> ARMCDTRT:AVISITVIS4           -0.368506585 -0.402167824 -1.723586879 #>                               ARMCDTRT:AVISITVIS2 ARMCDTRT:AVISITVIS3 #> (Intercept)                           0.422528163         0.521897062 #> RACEBlack or African American         0.005382569         0.011420575 #> RACEWhite                             0.013485683         0.006720617 #> SEXFemale                            -0.016801299        -0.024696304 #> ARMCDTRT                             -0.845758354        -1.044355829 #> AVISITVIS2                           -0.643020114        -0.399238901 #> AVISITVIS3                           -0.399203255        -0.676484876 #> AVISITVIS4                           -0.368624024        -0.401792995 #> ARMCDTRT:AVISITVIS2                   1.275359305         0.805849821 #> ARMCDTRT:AVISITVIS3                   0.805849821         1.410501907 #> ARMCDTRT:AVISITVIS4                   0.728711516         0.796418986 #>                               ARMCDTRT:AVISITVIS4 #> (Intercept)                           0.448924745 #> RACEBlack or African American        -0.012589283 #> RACEWhite                             0.002967665 #> SEXFemale                            -0.009038640 #> ARMCDTRT                             -0.877606881 #> AVISITVIS2                           -0.368506585 #> AVISITVIS3                           -0.402167824 #> AVISITVIS4                           -1.723586879 #> ARMCDTRT:AVISITVIS2                   0.728711516 #> ARMCDTRT:AVISITVIS3                   0.796418986 #> ARMCDTRT:AVISITVIS4                   3.425654435 #>  #> $beta_vcov_complete #>                               (Intercept) RACEBlack or African American #> (Intercept)                     0.7859971                  -0.226212328 #> RACEBlack or African American  -0.2262123                   0.389969478 #> RACEWhite                      -0.1771113                   0.181466304 #> SEXFemale                      -0.1684152                   0.031537926 #> ARMCDTRT                       -0.5674809                   0.028374129 #> AVISITVIS2                     -0.4227565                   0.002972514 #> AVISITVIS3                     -0.5231223                   0.010825469 #> AVISITVIS4                     -0.4406442                   0.002205681 #> ARMCDTRT:AVISITVIS2             0.4225282                   0.005382569 #> ARMCDTRT:AVISITVIS3             0.5218971                   0.011420575 #> ARMCDTRT:AVISITVIS4             0.4489247                  -0.012589283 #>                                  RACEWhite    SEXFemale     ARMCDTRT #> (Intercept)                   -0.177111308 -0.168415217 -0.567480906 #> RACEBlack or African American  0.181466304  0.031537926  0.028374129 #> RACEWhite                      0.443035801  0.023364777 -0.042968995 #> SEXFemale                      0.023364777  0.282971189  0.001814594 #> ARMCDTRT                      -0.042968995  0.001814594  1.153791725 #> AVISITVIS2                    -0.003149280  0.006471853  0.419528600 #> AVISITVIS3                    -0.002952986  0.006771404  0.517277529 #> AVISITVIS4                    -0.008230720  0.004088901  0.440653554 #> ARMCDTRT:AVISITVIS2            0.013485683 -0.016801299 -0.845758354 #> ARMCDTRT:AVISITVIS3            0.006720617 -0.024696304 -1.044355829 #> ARMCDTRT:AVISITVIS4            0.002967665 -0.009038640 -0.877606881 #>                                 AVISITVIS2   AVISITVIS3   AVISITVIS4 #> (Intercept)                   -0.422756455 -0.523122299 -0.440644229 #> RACEBlack or African American  0.002972514  0.010825469  0.002205681 #> RACEWhite                     -0.003149280 -0.002952986 -0.008230720 #> SEXFemale                      0.006471853  0.006771404  0.004088901 #> ARMCDTRT                       0.419528600  0.517277529  0.440653554 #> AVISITVIS2                     0.642749706  0.399048940  0.368340113 #> AVISITVIS3                     0.399048940  0.676823960  0.401800094 #> AVISITVIS4                     0.368340113  0.401800094  1.723478787 #> ARMCDTRT:AVISITVIS2           -0.643020114 -0.399203255 -0.368624024 #> ARMCDTRT:AVISITVIS3           -0.399238901 -0.676484876 -0.401792995 #> ARMCDTRT:AVISITVIS4           -0.368506585 -0.402167824 -1.723586879 #>                               ARMCDTRT:AVISITVIS2 ARMCDTRT:AVISITVIS3 #> (Intercept)                           0.422528163         0.521897062 #> RACEBlack or African American         0.005382569         0.011420575 #> RACEWhite                             0.013485683         0.006720617 #> SEXFemale                            -0.016801299        -0.024696304 #> ARMCDTRT                             -0.845758354        -1.044355829 #> AVISITVIS2                           -0.643020114        -0.399238901 #> AVISITVIS3                           -0.399203255        -0.676484876 #> AVISITVIS4                           -0.368624024        -0.401792995 #> ARMCDTRT:AVISITVIS2                   1.275359305         0.805849821 #> ARMCDTRT:AVISITVIS3                   0.805849821         1.410501907 #> ARMCDTRT:AVISITVIS4                   0.728711516         0.796418986 #>                               ARMCDTRT:AVISITVIS4 #> (Intercept)                           0.448924745 #> RACEBlack or African American        -0.012589283 #> RACEWhite                             0.002967665 #> SEXFemale                            -0.009038640 #> ARMCDTRT                             -0.877606881 #> AVISITVIS2                           -0.368506585 #> AVISITVIS3                           -0.402167824 #> AVISITVIS4                           -1.723586879 #> ARMCDTRT:AVISITVIS2                   0.728711516 #> ARMCDTRT:AVISITVIS3                   0.796418986 #> ARMCDTRT:AVISITVIS4                   3.425654435 #>  #> $varcor #>           VIS1      VIS2       VIS3       VIS4 #> VIS1 40.553664 14.396045  4.9747288 13.3866534 #> VIS2 14.396045 26.571483  2.7854661  7.4744790 #> VIS3  4.974729  2.785466 14.8978517  0.9082111 #> VIS4 13.386653  7.474479  0.9082111 95.5568420 #>  #> $formula #> [1] \"FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID)\" #>  #> $dataset #> fev_data #>  #> $n_groups #> [1] 1 #>  #> $reml #> [1] TRUE #>  #> $convergence #> [1] 0 #>  #> $evaluations #> function gradient  #>       15       15  #>  #> $method #> [1] \"Satterthwaite\" #>  #> $optimizer #> [1] \"L-BFGS-B\" #>  #> $conv_message #> [1] \"CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH\" #>  #> $call #> mmrm(formula = FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT |  #>     USUBJID), data = fev_data) #>  #> $theta_est #>  [1]  1.85131306  1.53312022  1.32799829  2.25400062  0.48798054  0.20701987 #>  [7]  0.05832020  0.22067693  0.06169127 -0.02401589 #>  #> $beta_est #>                   (Intercept) RACEBlack or African American  #>                   30.77747548                    1.53049977  #>                     RACEWhite                     SEXFemale  #>                    5.64356535                    0.32606192  #>                      ARMCDTRT                    AVISITVIS2  #>                    3.77423004                    4.83958845  #>                    AVISITVIS3                    AVISITVIS4  #>                   10.34211288                   15.05389826  #>           ARMCDTRT:AVISITVIS2           ARMCDTRT:AVISITVIS3  #>                   -0.04192625                   -0.69368537  #>           ARMCDTRT:AVISITVIS4  #>                    0.62422703  #>  #> $beta_est_complete #>                   (Intercept) RACEBlack or African American  #>                   30.77747548                    1.53049977  #>                     RACEWhite                     SEXFemale  #>                    5.64356535                    0.32606192  #>                      ARMCDTRT                    AVISITVIS2  #>                    3.77423004                    4.83958845  #>                    AVISITVIS3                    AVISITVIS4  #>                   10.34211288                   15.05389826  #>           ARMCDTRT:AVISITVIS2           ARMCDTRT:AVISITVIS3  #>                   -0.04192625                   -0.69368537  #>           ARMCDTRT:AVISITVIS4  #>                    0.62422703  #>  #> $beta_aliased #>                   (Intercept) RACEBlack or African American  #>                         FALSE                         FALSE  #>                     RACEWhite                     SEXFemale  #>                         FALSE                         FALSE  #>                      ARMCDTRT                    AVISITVIS2  #>                         FALSE                         FALSE  #>                    AVISITVIS3                    AVISITVIS4  #>                         FALSE                         FALSE  #>           ARMCDTRT:AVISITVIS2           ARMCDTRT:AVISITVIS3  #>                         FALSE                         FALSE  #>           ARMCDTRT:AVISITVIS4  #>                         FALSE  #>  #> $x_matrix #>     (Intercept) RACEBlack or African American RACEWhite SEXFemale ARMCDTRT #> 2             1                             1         0         1        1 #> 4             1                             1         0         1        1 #> 6             1                             0         0         0        0 #> 7             1                             0         0         0        0 #> 8             1                             0         0         0        0 #> 10            1                             1         0         1        0 #> 12            1                             1         0         1        0 #> 13            1                             0         0         1        1 #> 14            1                             0         0         1        1 #> 16            1                             0         0         1        1 #> 17            1                             1         0         0        0 #> 19            1                             1         0         0        0 #> 20            1                             1         0         0        0 #> 23            1                             1         0         0        0 #> 25            1                             0         0         1        0 #> 26            1                             0         0         1        0 #> 28            1                             0         0         1        0 #> 29            1                             1         0         0        0 #> 30            1                             1         0         0        0 #> 31            1                             1         0         0        0 #> 32            1                             1         0         0        0 #> 33            1                             0         1         0        1 #> 34            1                             0         1         0        1 #> 36            1                             0         1         0        1 #> 39            1                             1         0         1        0 #> 41            1                             0         0         1        1 #> 42            1                             0         0         1        1 #> 43            1                             0         0         1        1 #> 44            1                             0         0         1        1 #> 45            1                             0         0         0        0 #> 46            1                             0         0         0        0 #> 47            1                             0         0         0        0 #> 51            1                             0         1         0        1 #> 52            1                             0         1         0        1 #> 55            1                             1         0         0        0 #> 59            1                             0         0         0        0 #> 60            1                             0         0         0        0 #> 62            1                             0         0         1        0 #> 64            1                             0         0         1        0 #> 65            1                             0         1         1        0 #> 68            1                             0         1         1        0 #> 69            1                             0         0         0        1 #> 70            1                             0         0         0        1 #> 72            1                             0         0         0        1 #> 73            1                             0         0         0        1 #> 74            1                             0         0         0        1 #> 75            1                             0         0         0        1 #> 76            1                             0         0         0        1 #> 78            1                             0         1         1        1 #> 79            1                             0         1         1        1 #> 82            1                             0         1         0        1 #> 83            1                             0         1         0        1 #> 84            1                             0         1         0        1 #> 85            1                             0         1         0        1 #> 86            1                             0         1         0        1 #> 87            1                             0         1         0        1 #> 88            1                             0         1         0        1 #> 89            1                             1         0         1        0 #> 90            1                             1         0         1        0 #> 91            1                             1         0         1        0 #> 93            1                             0         1         1        1 #> 94            1                             0         1         1        1 #> 95            1                             0         1         1        1 #> 96            1                             0         1         1        1 #> 97            1                             0         1         1        1 #> 98            1                             0         1         1        1 #> 99            1                             0         1         1        1 #> 100           1                             0         1         1        1 #> 101           1                             0         1         1        1 #> 102           1                             0         1         1        1 #> 103           1                             0         1         1        1 #> 104           1                             0         1         1        1 #> 105           1                             1         0         1        1 #> 107           1                             1         0         1        1 #> 108           1                             1         0         1        1 #> 109           1                             1         0         0        1 #> 110           1                             1         0         0        1 #> 111           1                             1         0         0        1 #> 112           1                             1         0         0        1 #> 113           1                             1         0         0        1 #> 114           1                             1         0         0        1 #> 116           1                             1         0         0        1 #> 117           1                             0         0         1        1 #> 118           1                             0         0         1        1 #> 119           1                             0         0         1        1 #> 120           1                             0         0         1        1 #> 121           1                             0         0         1        0 #> 123           1                             0         0         1        0 #> 125           1                             1         0         0        1 #> 128           1                             1         0         0        1 #> 129           1                             1         0         0        1 #> 130           1                             1         0         0        1 #> 132           1                             1         0         0        1 #> 133           1                             0         0         1        0 #> 134           1                             0         0         1        0 #> 135           1                             0         0         1        0 #> 136           1                             0         0         1        0 #> 137           1                             1         0         1        1 #> 138           1                             1         0         1        1 #> 140           1                             1         0         1        1 #> 142           1                             0         0         1        1 #> 144           1                             0         0         1        1 #> 145           1                             0         1         1        0 #> 146           1                             0         1         1        0 #> 147           1                             0         1         1        0 #> 148           1                             0         1         1        0 #> 149           1                             0         0         1        0 #> 151           1                             0         0         1        0 #> 153           1                             0         0         1        0 #> 155           1                             0         0         1        0 #> 156           1                             0         0         1        0 #> 157           1                             1         0         0        0 #> 158           1                             1         0         0        0 #> 159           1                             1         0         0        0 #> 162           1                             1         0         0        0 #> 163           1                             1         0         0        0 #> 164           1                             1         0         0        0 #> 165           1                             1         0         0        0 #> 168           1                             1         0         0        0 #> 169           1                             1         0         1        1 #> 170           1                             1         0         1        1 #> 171           1                             1         0         1        1 #> 172           1                             1         0         1        1 #> 173           1                             1         0         0        1 #> 177           1                             0         0         1        0 #> 178           1                             0         0         1        0 #> 179           1                             0         0         1        0 #> 180           1                             0         0         1        0 #> 181           1                             0         0         0        0 #> 182           1                             0         0         0        0 #> 183           1                             0         0         0        0 #> 185           1                             0         0         0        1 #> 186           1                             0         0         0        1 #> 187           1                             0         0         0        1 #> 190           1                             1         0         0        0 #> 191           1                             1         0         0        0 #> 193           1                             0         1         1        0 #> 194           1                             0         1         1        0 #> 195           1                             0         1         1        0 #> 197           1                             0         0         1        1 #> 198           1                             0         0         1        1 #> 199           1                             0         0         1        1 #> 201           1                             1         0         1        1 #> 202           1                             1         0         1        1 #> 204           1                             1         0         1        1 #> 206           1                             1         0         1        1 #> 208           1                             1         0         1        1 #> 209           1                             0         1         0        0 #> 210           1                             0         1         0        0 #> 217           1                             0         0         0        1 #> 218           1                             0         0         0        1 #> 219           1                             0         0         0        1 #> 221           1                             1         0         0        0 #> 224           1                             1         0         0        0 #> 226           1                             1         0         0        1 #> 227           1                             1         0         0        1 #> 228           1                             1         0         0        1 #> 230           1                             0         1         1        1 #> 231           1                             0         1         1        1 #> 233           1                             0         1         1        1 #> 235           1                             0         1         1        1 #> 236           1                             0         1         1        1 #> 237           1                             1         0         1        1 #> 238           1                             1         0         1        1 #> 239           1                             1         0         1        1 #> 240           1                             1         0         1        1 #> 241           1                             0         0         0        1 #> 242           1                             0         0         0        1 #> 244           1                             0         0         0        1 #> 246           1                             0         0         1        0 #> 250           1                             0         1         1        0 #> 251           1                             0         1         1        0 #> 252           1                             0         1         1        0 #> 253           1                             1         0         1        0 #> 254           1                             1         0         1        0 #> 256           1                             1         0         1        0 #> 257           1                             0         0         1        1 #> 258           1                             0         0         1        1 #> 259           1                             0         0         1        1 #> 260           1                             0         0         1        1 #> 261           1                             0         0         0        1 #> 262           1                             0         0         0        1 #> 263           1                             0         0         0        1 #> 264           1                             0         0         0        1 #> 265           1                             0         1         1        1 #> 266           1                             0         1         1        1 #> 267           1                             0         1         1        1 #> 268           1                             0         1         1        1 #> 269           1                             0         1         1        1 #> 270           1                             0         1         1        1 #> 273           1                             1         0         0        0 #> 274           1                             1         0         0        0 #> 275           1                             1         0         0        0 #> 276           1                             1         0         0        0 #> 277           1                             1         0         0        0 #> 278           1                             1         0         0        0 #> 280           1                             1         0         0        0 #> 281           1                             0         0         0        1 #> 282           1                             0         0         0        1 #> 283           1                             0         0         0        1 #> 284           1                             0         0         0        1 #> 285           1                             0         0         1        1 #> 286           1                             0         0         1        1 #> 287           1                             0         0         1        1 #> 291           1                             0         1         0        0 #> 292           1                             0         1         0        0 #> 293           1                             0         1         1        0 #> 295           1                             0         1         1        0 #> 296           1                             0         1         1        0 #> 298           1                             0         1         0        0 #> 299           1                             0         1         0        0 #> 300           1                             0         1         0        0 #> 301           1                             0         1         0        1 #> 304           1                             0         1         0        1 #> 305           1                             0         0         0        1 #> 306           1                             0         0         0        1 #> 307           1                             0         0         0        1 #> 308           1                             0         0         0        1 #> 310           1                             0         1         1        1 #> 311           1                             0         1         1        1 #> 312           1                             0         1         1        1 #> 316           1                             0         0         1        0 #> 317           1                             0         0         0        1 #> 318           1                             0         0         0        1 #> 319           1                             0         0         0        1 #> 322           1                             0         1         0        0 #> 323           1                             0         1         0        0 #> 324           1                             0         1         0        0 #> 325           1                             1         0         1        0 #> 327           1                             1         0         1        0 #> 328           1                             1         0         1        0 #> 329           1                             0         1         0        1 #> 330           1                             0         1         0        1 #> 331           1                             0         1         0        1 #> 332           1                             0         1         0        1 #> 336           1                             0         0         1        0 #> 339           1                             0         0         1        0 #> 340           1                             0         0         1        0 #> 341           1                             1         0         1        1 #> 342           1                             1         0         1        1 #> 343           1                             1         0         1        1 #> 344           1                             1         0         1        1 #> 345           1                             0         1         0        0 #> 347           1                             0         1         0        0 #> 349           1                             1         0         1        0 #> 351           1                             1         0         1        0 #> 352           1                             1         0         1        0 #> 353           1                             1         0         0        0 #> 354           1                             1         0         0        0 #> 355           1                             1         0         0        0 #> 356           1                             1         0         0        0 #> 357           1                             0         0         0        0 #> 363           1                             0         1         1        1 #> 364           1                             0         1         1        1 #> 365           1                             0         1         1        1 #> 367           1                             0         1         1        1 #> 368           1                             0         1         1        1 #> 370           1                             1         0         0        0 #> 371           1                             1         0         0        0 #> 372           1                             1         0         0        0 #> 373           1                             0         0         1        0 #> 375           1                             0         0         1        0 #> 376           1                             0         0         1        0 #> 378           1                             0         0         1        0 #> 379           1                             0         0         1        0 #> 381           1                             1         0         1        0 #> 382           1                             1         0         1        0 #> 384           1                             1         0         1        0 #> 385           1                             0         1         0        1 #> 386           1                             0         1         0        1 #> 388           1                             0         1         0        1 #> 389           1                             0         0         0        0 #> 390           1                             0         0         0        0 #> 391           1                             0         0         0        0 #> 392           1                             0         0         0        0 #> 394           1                             1         0         0        0 #> 397           1                             1         0         1        0 #> 398           1                             1         0         1        0 #> 399           1                             1         0         1        0 #> 402           1                             0         1         0        1 #> 403           1                             0         1         0        1 #> 405           1                             0         0         1        0 #> 406           1                             0         0         1        0 #> 407           1                             0         0         1        0 #> 408           1                             0         0         1        0 #> 409           1                             0         0         1        0 #> 410           1                             0         0         1        0 #> 411           1                             0         0         1        0 #> 413           1                             1         0         1        0 #> 415           1                             1         0         1        0 #> 416           1                             1         0         1        0 #> 418           1                             1         0         1        1 #> 419           1                             1         0         1        1 #> 421           1                             0         0         1        1 #> 422           1                             0         0         1        1 #> 423           1                             0         0         1        1 #> 424           1                             0         0         1        1 #> 427           1                             0         1         1        0 #> 428           1                             0         1         1        0 #> 429           1                             0         1         0        1 #> 430           1                             0         1         0        1 #> 431           1                             0         1         0        1 #> 432           1                             0         1         0        1 #> 434           1                             1         0         1        0 #> 435           1                             1         0         1        0 #> 436           1                             1         0         1        0 #> 438           1                             0         0         0        1 #> 439           1                             0         0         0        1 #> 444           1                             0         1         1        0 #> 445           1                             1         0         1        0 #> 447           1                             1         0         1        0 #> 449           1                             0         0         0        0 #> 450           1                             0         0         0        0 #> 451           1                             0         0         0        0 #> 453           1                             1         0         0        0 #> 454           1                             1         0         0        0 #> 455           1                             1         0         0        0 #> 456           1                             1         0         0        0 #> 457           1                             0         0         1        0 #> 458           1                             0         0         1        0 #> 459           1                             0         0         1        0 #> 461           1                             1         0         0        1 #> 463           1                             1         0         0        1 #> 464           1                             1         0         0        1 #> 465           1                             1         0         0        0 #> 469           1                             0         0         1        0 #> 470           1                             0         0         1        0 #> 471           1                             0         0         1        0 #> 473           1                             0         1         0        1 #> 474           1                             0         1         0        1 #> 477           1                             0         0         1        0 #> 484           1                             1         0         0        1 #> 487           1                             0         0         1        0 #> 489           1                             0         1         1        0 #> 490           1                             0         1         1        0 #> 491           1                             0         1         1        0 #> 494           1                             0         0         1        1 #> 495           1                             0         0         1        1 #> 496           1                             0         0         1        1 #> 497           1                             0         1         0        0 #> 498           1                             0         1         0        0 #> 499           1                             0         1         0        0 #> 501           1                             0         0         0        1 #> 502           1                             0         0         0        1 #> 504           1                             0         0         0        1 #> 505           1                             1         0         1        1 #> 508           1                             1         0         1        1 #> 509           1                             0         0         1        1 #> 510           1                             0         0         1        1 #> 511           1                             0         0         1        1 #> 512           1                             0         0         1        1 #> 513           1                             0         1         0        1 #> 518           1                             0         1         0        0 #> 519           1                             0         1         0        0 #> 521           1                             0         0         1        0 #> 522           1                             0         0         1        0 #> 523           1                             0         0         1        0 #> 524           1                             0         0         1        0 #> 526           1                             0         0         0        0 #> 527           1                             0         0         0        0 #> 528           1                             0         0         0        0 #> 530           1                             0         1         0        0 #> 531           1                             0         1         0        0 #> 532           1                             0         1         0        0 #> 534           1                             1         0         0        0 #> 535           1                             1         0         0        0 #> 536           1                             1         0         0        0 #> 537           1                             1         0         0        0 #> 538           1                             1         0         0        0 #> 539           1                             1         0         0        0 #> 540           1                             1         0         0        0 #> 541           1                             0         1         1        1 #> 544           1                             0         1         1        1 #> 545           1                             0         0         1        1 #> 546           1                             0         0         1        1 #> 547           1                             0         0         1        1 #> 548           1                             0         0         1        1 #> 549           1                             0         0         0        1 #> 550           1                             0         0         0        1 #> 551           1                             0         0         0        1 #> 555           1                             0         0         1        1 #> 556           1                             0         0         1        1 #> 557           1                             1         0         1        0 #> 558           1                             1         0         1        0 #> 560           1                             1         0         1        0 #> 562           1                             0         1         0        1 #> 564           1                             0         1         0        1 #> 569           1                             1         0         1        1 #> 570           1                             1         0         1        1 #> 572           1                             1         0         1        1 #> 573           1                             0         0         1        0 #> 574           1                             0         0         1        0 #> 575           1                             0         0         1        0 #> 576           1                             0         0         1        0 #> 577           1                             1         0         0        0 #> 578           1                             1         0         0        0 #> 579           1                             1         0         0        0 #> 582           1                             0         0         1        1 #> 583           1                             0         0         1        1 #> 584           1                             0         0         1        1 #> 585           1                             0         0         1        0 #> 586           1                             0         0         1        0 #> 587           1                             0         0         1        0 #> 590           1                             1         0         0        1 #> 591           1                             1         0         0        1 #> 593           1                             0         0         1        0 #> 594           1                             0         0         1        0 #> 595           1                             0         0         1        0 #> 596           1                             0         0         1        0 #> 599           1                             0         1         0        0 #> 600           1                             0         1         0        0 #> 601           1                             0         0         1        0 #> 602           1                             0         0         1        0 #> 604           1                             0         0         1        0 #> 606           1                             0         0         1        1 #> 608           1                             0         0         1        1 #> 609           1                             1         0         0        0 #> 610           1                             1         0         0        0 #> 611           1                             1         0         0        0 #> 612           1                             1         0         0        0 #> 613           1                             1         0         1        0 #> 614           1                             1         0         1        0 #> 616           1                             1         0         1        0 #> 617           1                             0         0         0        1 #> 619           1                             0         0         0        1 #> 620           1                             0         0         0        1 #> 621           1                             0         1         0        0 #> 622           1                             0         1         0        0 #> 623           1                             0         1         0        0 #> 624           1                             0         1         0        0 #> 625           1                             1         0         0        1 #> 628           1                             1         0         0        1 #> 630           1                             1         0         0        1 #> 631           1                             1         0         0        1 #> 632           1                             1         0         0        1 #> 633           1                             0         0         1        1 #> 634           1                             0         0         1        1 #> 638           1                             0         0         0        1 #> 639           1                             0         0         0        1 #> 640           1                             0         0         0        1 #> 642           1                             1         0         1        0 #> 645           1                             0         0         0        0 #> 648           1                             0         0         0        0 #> 650           1                             0         1         0        0 #> 652           1                             0         1         0        0 #> 654           1                             1         0         1        0 #> 655           1                             1         0         1        0 #> 656           1                             1         0         1        0 #> 657           1                             0         1         1        1 #> 661           1                             0         0         0        1 #> 665           1                             1         0         0        0 #> 666           1                             1         0         0        0 #> 668           1                             1         0         0        0 #> 669           1                             1         0         1        0 #> 670           1                             1         0         1        0 #> 671           1                             1         0         1        0 #> 673           1                             0         1         1        0 #> 674           1                             0         1         1        0 #> 678           1                             0         1         1        1 #> 679           1                             0         1         1        1 #> 680           1                             0         1         1        1 #> 682           1                             0         0         1        0 #> 684           1                             0         0         1        0 #> 685           1                             0         0         1        1 #> 686           1                             0         0         1        1 #> 687           1                             0         0         1        1 #> 689           1                             0         1         1        1 #> 690           1                             0         1         1        1 #> 691           1                             0         1         1        1 #> 693           1                             1         0         1        1 #> 694           1                             1         0         1        1 #> 695           1                             1         0         1        1 #> 697           1                             1         0         1        0 #> 698           1                             1         0         1        0 #> 700           1                             1         0         1        0 #> 701           1                             1         0         0        1 #> 702           1                             1         0         0        1 #> 704           1                             1         0         0        1 #> 707           1                             1         0         0        0 #> 709           1                             1         0         0        0 #> 712           1                             1         0         0        0 #> 713           1                             0         1         0        1 #> 715           1                             0         1         0        1 #> 716           1                             0         1         0        1 #> 717           1                             0         0         0        0 #> 718           1                             0         0         0        0 #> 719           1                             0         0         0        0 #> 721           1                             0         0         1        0 #> 723           1                             0         0         1        0 #> 724           1                             0         0         1        0 #> 727           1                             1         0         1        1 #> 728           1                             1         0         1        1 #> 729           1                             1         0         1        1 #> 730           1                             1         0         1        1 #> 734           1                             0         1         1        1 #> 736           1                             0         1         1        1 #> 738           1                             1         0         1        0 #> 739           1                             1         0         1        0 #> 740           1                             1         0         1        0 #> 741           1                             0         1         0        0 #> 742           1                             0         1         0        0 #> 744           1                             0         1         0        0 #> 745           1                             1         0         1        0 #> 749           1                             1         0         1        0 #> 751           1                             1         0         1        0 #> 753           1                             0         0         1        1 #> 754           1                             0         0         1        1 #> 755           1                             0         0         1        1 #> 757           1                             1         0         1        1 #> 758           1                             1         0         1        1 #> 759           1                             1         0         1        1 #> 760           1                             1         0         1        1 #> 761           1                             0         1         0        1 #> 764           1                             0         1         0        1 #> 765           1                             0         1         1        1 #> 766           1                             0         1         1        1 #> 767           1                             0         1         1        1 #> 768           1                             0         1         1        1 #> 770           1                             0         0         0        0 #> 771           1                             0         0         0        0 #> 772           1                             0         0         0        0 #> 773           1                             1         0         0        0 #> 774           1                             1         0         0        0 #> 775           1                             1         0         0        0 #> 776           1                             1         0         0        0 #> 778           1                             0         1         1        1 #> 779           1                             0         1         1        1 #> 781           1                             0         0         0        0 #> 782           1                             0         0         0        0 #> 784           1                             0         0         0        0 #> 788           1                             1         0         0        0 #> 789           1                             1         0         0        1 #> 790           1                             1         0         0        1 #> 792           1                             1         0         0        1 #> 797           1                             1         0         0        0 #> 798           1                             1         0         0        0 #> 800           1                             1         0         0        0 #>     AVISITVIS2 AVISITVIS3 AVISITVIS4 ARMCDTRT:AVISITVIS2 ARMCDTRT:AVISITVIS3 #> 2            1          0          0                   1                   0 #> 4            0          0          1                   0                   0 #> 6            1          0          0                   0                   0 #> 7            0          1          0                   0                   0 #> 8            0          0          1                   0                   0 #> 10           1          0          0                   0                   0 #> 12           0          0          1                   0                   0 #> 13           0          0          0                   0                   0 #> 14           1          0          0                   1                   0 #> 16           0          0          1                   0                   0 #> 17           0          0          0                   0                   0 #> 19           0          1          0                   0                   0 #> 20           0          0          1                   0                   0 #> 23           0          1          0                   0                   0 #> 25           0          0          0                   0                   0 #> 26           1          0          0                   0                   0 #> 28           0          0          1                   0                   0 #> 29           0          0          0                   0                   0 #> 30           1          0          0                   0                   0 #> 31           0          1          0                   0                   0 #> 32           0          0          1                   0                   0 #> 33           0          0          0                   0                   0 #> 34           1          0          0                   1                   0 #> 36           0          0          1                   0                   0 #> 39           0          1          0                   0                   0 #> 41           0          0          0                   0                   0 #> 42           1          0          0                   1                   0 #> 43           0          1          0                   0                   1 #> 44           0          0          1                   0                   0 #> 45           0          0          0                   0                   0 #> 46           1          0          0                   0                   0 #> 47           0          1          0                   0                   0 #> 51           0          1          0                   0                   1 #> 52           0          0          1                   0                   0 #> 55           0          1          0                   0                   0 #> 59           0          1          0                   0                   0 #> 60           0          0          1                   0                   0 #> 62           1          0          0                   0                   0 #> 64           0          0          1                   0                   0 #> 65           0          0          0                   0                   0 #> 68           0          0          1                   0                   0 #> 69           0          0          0                   0                   0 #> 70           1          0          0                   1                   0 #> 72           0          0          1                   0                   0 #> 73           0          0          0                   0                   0 #> 74           1          0          0                   1                   0 #> 75           0          1          0                   0                   1 #> 76           0          0          1                   0                   0 #> 78           1          0          0                   1                   0 #> 79           0          1          0                   0                   1 #> 82           1          0          0                   1                   0 #> 83           0          1          0                   0                   1 #> 84           0          0          1                   0                   0 #> 85           0          0          0                   0                   0 #> 86           1          0          0                   1                   0 #> 87           0          1          0                   0                   1 #> 88           0          0          1                   0                   0 #> 89           0          0          0                   0                   0 #> 90           1          0          0                   0                   0 #> 91           0          1          0                   0                   0 #> 93           0          0          0                   0                   0 #> 94           1          0          0                   1                   0 #> 95           0          1          0                   0                   1 #> 96           0          0          1                   0                   0 #> 97           0          0          0                   0                   0 #> 98           1          0          0                   1                   0 #> 99           0          1          0                   0                   1 #> 100          0          0          1                   0                   0 #> 101          0          0          0                   0                   0 #> 102          1          0          0                   1                   0 #> 103          0          1          0                   0                   1 #> 104          0          0          1                   0                   0 #> 105          0          0          0                   0                   0 #> 107          0          1          0                   0                   1 #> 108          0          0          1                   0                   0 #> 109          0          0          0                   0                   0 #> 110          1          0          0                   1                   0 #> 111          0          1          0                   0                   1 #> 112          0          0          1                   0                   0 #> 113          0          0          0                   0                   0 #> 114          1          0          0                   1                   0 #> 116          0          0          1                   0                   0 #> 117          0          0          0                   0                   0 #> 118          1          0          0                   1                   0 #> 119          0          1          0                   0                   1 #> 120          0          0          1                   0                   0 #> 121          0          0          0                   0                   0 #> 123          0          1          0                   0                   0 #> 125          0          0          0                   0                   0 #> 128          0          0          1                   0                   0 #> 129          0          0          0                   0                   0 #> 130          1          0          0                   1                   0 #> 132          0          0          1                   0                   0 #> 133          0          0          0                   0                   0 #> 134          1          0          0                   0                   0 #> 135          0          1          0                   0                   0 #> 136          0          0          1                   0                   0 #> 137          0          0          0                   0                   0 #> 138          1          0          0                   1                   0 #> 140          0          0          1                   0                   0 #> 142          1          0          0                   1                   0 #> 144          0          0          1                   0                   0 #> 145          0          0          0                   0                   0 #> 146          1          0          0                   0                   0 #> 147          0          1          0                   0                   0 #> 148          0          0          1                   0                   0 #> 149          0          0          0                   0                   0 #> 151          0          1          0                   0                   0 #> 153          0          0          0                   0                   0 #> 155          0          1          0                   0                   0 #> 156          0          0          1                   0                   0 #> 157          0          0          0                   0                   0 #> 158          1          0          0                   0                   0 #> 159          0          1          0                   0                   0 #> 162          1          0          0                   0                   0 #> 163          0          1          0                   0                   0 #> 164          0          0          1                   0                   0 #> 165          0          0          0                   0                   0 #> 168          0          0          1                   0                   0 #> 169          0          0          0                   0                   0 #> 170          1          0          0                   1                   0 #> 171          0          1          0                   0                   1 #> 172          0          0          1                   0                   0 #> 173          0          0          0                   0                   0 #> 177          0          0          0                   0                   0 #> 178          1          0          0                   0                   0 #> 179          0          1          0                   0                   0 #> 180          0          0          1                   0                   0 #> 181          0          0          0                   0                   0 #> 182          1          0          0                   0                   0 #> 183          0          1          0                   0                   0 #> 185          0          0          0                   0                   0 #> 186          1          0          0                   1                   0 #> 187          0          1          0                   0                   1 #> 190          1          0          0                   0                   0 #> 191          0          1          0                   0                   0 #> 193          0          0          0                   0                   0 #> 194          1          0          0                   0                   0 #> 195          0          1          0                   0                   0 #> 197          0          0          0                   0                   0 #> 198          1          0          0                   1                   0 #> 199          0          1          0                   0                   1 #> 201          0          0          0                   0                   0 #> 202          1          0          0                   1                   0 #> 204          0          0          1                   0                   0 #> 206          1          0          0                   1                   0 #> 208          0          0          1                   0                   0 #> 209          0          0          0                   0                   0 #> 210          1          0          0                   0                   0 #> 217          0          0          0                   0                   0 #> 218          1          0          0                   1                   0 #> 219          0          1          0                   0                   1 #> 221          0          0          0                   0                   0 #> 224          0          0          1                   0                   0 #> 226          1          0          0                   1                   0 #> 227          0          1          0                   0                   1 #> 228          0          0          1                   0                   0 #> 230          1          0          0                   1                   0 #> 231          0          1          0                   0                   1 #> 233          0          0          0                   0                   0 #> 235          0          1          0                   0                   1 #> 236          0          0          1                   0                   0 #> 237          0          0          0                   0                   0 #> 238          1          0          0                   1                   0 #> 239          0          1          0                   0                   1 #> 240          0          0          1                   0                   0 #> 241          0          0          0                   0                   0 #> 242          1          0          0                   1                   0 #> 244          0          0          1                   0                   0 #> 246          1          0          0                   0                   0 #> 250          1          0          0                   0                   0 #> 251          0          1          0                   0                   0 #> 252          0          0          1                   0                   0 #> 253          0          0          0                   0                   0 #> 254          1          0          0                   0                   0 #> 256          0          0          1                   0                   0 #> 257          0          0          0                   0                   0 #> 258          1          0          0                   1                   0 #> 259          0          1          0                   0                   1 #> 260          0          0          1                   0                   0 #> 261          0          0          0                   0                   0 #> 262          1          0          0                   1                   0 #> 263          0          1          0                   0                   1 #> 264          0          0          1                   0                   0 #> 265          0          0          0                   0                   0 #> 266          1          0          0                   1                   0 #> 267          0          1          0                   0                   1 #> 268          0          0          1                   0                   0 #> 269          0          0          0                   0                   0 #> 270          1          0          0                   1                   0 #> 273          0          0          0                   0                   0 #> 274          1          0          0                   0                   0 #> 275          0          1          0                   0                   0 #> 276          0          0          1                   0                   0 #> 277          0          0          0                   0                   0 #> 278          1          0          0                   0                   0 #> 280          0          0          1                   0                   0 #> 281          0          0          0                   0                   0 #> 282          1          0          0                   1                   0 #> 283          0          1          0                   0                   1 #> 284          0          0          1                   0                   0 #> 285          0          0          0                   0                   0 #> 286          1          0          0                   1                   0 #> 287          0          1          0                   0                   1 #> 291          0          1          0                   0                   0 #> 292          0          0          1                   0                   0 #> 293          0          0          0                   0                   0 #> 295          0          1          0                   0                   0 #> 296          0          0          1                   0                   0 #> 298          1          0          0                   0                   0 #> 299          0          1          0                   0                   0 #> 300          0          0          1                   0                   0 #> 301          0          0          0                   0                   0 #> 304          0          0          1                   0                   0 #> 305          0          0          0                   0                   0 #> 306          1          0          0                   1                   0 #> 307          0          1          0                   0                   1 #> 308          0          0          1                   0                   0 #> 310          1          0          0                   1                   0 #> 311          0          1          0                   0                   1 #> 312          0          0          1                   0                   0 #> 316          0          0          1                   0                   0 #> 317          0          0          0                   0                   0 #> 318          1          0          0                   1                   0 #> 319          0          1          0                   0                   1 #> 322          1          0          0                   0                   0 #> 323          0          1          0                   0                   0 #> 324          0          0          1                   0                   0 #> 325          0          0          0                   0                   0 #> 327          0          1          0                   0                   0 #> 328          0          0          1                   0                   0 #> 329          0          0          0                   0                   0 #> 330          1          0          0                   1                   0 #> 331          0          1          0                   0                   1 #> 332          0          0          1                   0                   0 #> 336          0          0          1                   0                   0 #> 339          0          1          0                   0                   0 #> 340          0          0          1                   0                   0 #> 341          0          0          0                   0                   0 #> 342          1          0          0                   1                   0 #> 343          0          1          0                   0                   1 #> 344          0          0          1                   0                   0 #> 345          0          0          0                   0                   0 #> 347          0          1          0                   0                   0 #> 349          0          0          0                   0                   0 #> 351          0          1          0                   0                   0 #> 352          0          0          1                   0                   0 #> 353          0          0          0                   0                   0 #> 354          1          0          0                   0                   0 #> 355          0          1          0                   0                   0 #> 356          0          0          1                   0                   0 #> 357          0          0          0                   0                   0 #> 363          0          1          0                   0                   1 #> 364          0          0          1                   0                   0 #> 365          0          0          0                   0                   0 #> 367          0          1          0                   0                   1 #> 368          0          0          1                   0                   0 #> 370          1          0          0                   0                   0 #> 371          0          1          0                   0                   0 #> 372          0          0          1                   0                   0 #> 373          0          0          0                   0                   0 #> 375          0          1          0                   0                   0 #> 376          0          0          1                   0                   0 #> 378          1          0          0                   0                   0 #> 379          0          1          0                   0                   0 #> 381          0          0          0                   0                   0 #> 382          1          0          0                   0                   0 #> 384          0          0          1                   0                   0 #> 385          0          0          0                   0                   0 #> 386          1          0          0                   1                   0 #> 388          0          0          1                   0                   0 #> 389          0          0          0                   0                   0 #> 390          1          0          0                   0                   0 #> 391          0          1          0                   0                   0 #> 392          0          0          1                   0                   0 #> 394          1          0          0                   0                   0 #> 397          0          0          0                   0                   0 #> 398          1          0          0                   0                   0 #> 399          0          1          0                   0                   0 #> 402          1          0          0                   1                   0 #> 403          0          1          0                   0                   1 #> 405          0          0          0                   0                   0 #> 406          1          0          0                   0                   0 #> 407          0          1          0                   0                   0 #> 408          0          0          1                   0                   0 #> 409          0          0          0                   0                   0 #> 410          1          0          0                   0                   0 #> 411          0          1          0                   0                   0 #> 413          0          0          0                   0                   0 #> 415          0          1          0                   0                   0 #> 416          0          0          1                   0                   0 #> 418          1          0          0                   1                   0 #> 419          0          1          0                   0                   1 #> 421          0          0          0                   0                   0 #> 422          1          0          0                   1                   0 #> 423          0          1          0                   0                   1 #> 424          0          0          1                   0                   0 #> 427          0          1          0                   0                   0 #> 428          0          0          1                   0                   0 #> 429          0          0          0                   0                   0 #> 430          1          0          0                   1                   0 #> 431          0          1          0                   0                   1 #> 432          0          0          1                   0                   0 #> 434          1          0          0                   0                   0 #> 435          0          1          0                   0                   0 #> 436          0          0          1                   0                   0 #> 438          1          0          0                   1                   0 #> 439          0          1          0                   0                   1 #> 444          0          0          1                   0                   0 #> 445          0          0          0                   0                   0 #> 447          0          1          0                   0                   0 #> 449          0          0          0                   0                   0 #> 450          1          0          0                   0                   0 #> 451          0          1          0                   0                   0 #> 453          0          0          0                   0                   0 #> 454          1          0          0                   0                   0 #> 455          0          1          0                   0                   0 #> 456          0          0          1                   0                   0 #> 457          0          0          0                   0                   0 #> 458          1          0          0                   0                   0 #> 459          0          1          0                   0                   0 #> 461          0          0          0                   0                   0 #> 463          0          1          0                   0                   1 #> 464          0          0          1                   0                   0 #> 465          0          0          0                   0                   0 #> 469          0          0          0                   0                   0 #> 470          1          0          0                   0                   0 #> 471          0          1          0                   0                   0 #> 473          0          0          0                   0                   0 #> 474          1          0          0                   1                   0 #> 477          0          0          0                   0                   0 #> 484          0          0          1                   0                   0 #> 487          0          1          0                   0                   0 #> 489          0          0          0                   0                   0 #> 490          1          0          0                   0                   0 #> 491          0          1          0                   0                   0 #> 494          1          0          0                   1                   0 #> 495          0          1          0                   0                   1 #> 496          0          0          1                   0                   0 #> 497          0          0          0                   0                   0 #> 498          1          0          0                   0                   0 #> 499          0          1          0                   0                   0 #> 501          0          0          0                   0                   0 #> 502          1          0          0                   1                   0 #> 504          0          0          1                   0                   0 #> 505          0          0          0                   0                   0 #> 508          0          0          1                   0                   0 #> 509          0          0          0                   0                   0 #> 510          1          0          0                   1                   0 #> 511          0          1          0                   0                   1 #> 512          0          0          1                   0                   0 #> 513          0          0          0                   0                   0 #> 518          1          0          0                   0                   0 #> 519          0          1          0                   0                   0 #> 521          0          0          0                   0                   0 #> 522          1          0          0                   0                   0 #> 523          0          1          0                   0                   0 #> 524          0          0          1                   0                   0 #> 526          1          0          0                   0                   0 #> 527          0          1          0                   0                   0 #> 528          0          0          1                   0                   0 #> 530          1          0          0                   0                   0 #> 531          0          1          0                   0                   0 #> 532          0          0          1                   0                   0 #> 534          1          0          0                   0                   0 #> 535          0          1          0                   0                   0 #> 536          0          0          1                   0                   0 #> 537          0          0          0                   0                   0 #> 538          1          0          0                   0                   0 #> 539          0          1          0                   0                   0 #> 540          0          0          1                   0                   0 #> 541          0          0          0                   0                   0 #> 544          0          0          1                   0                   0 #> 545          0          0          0                   0                   0 #> 546          1          0          0                   1                   0 #> 547          0          1          0                   0                   1 #> 548          0          0          1                   0                   0 #> 549          0          0          0                   0                   0 #> 550          1          0          0                   1                   0 #> 551          0          1          0                   0                   1 #> 555          0          1          0                   0                   1 #> 556          0          0          1                   0                   0 #> 557          0          0          0                   0                   0 #> 558          1          0          0                   0                   0 #> 560          0          0          1                   0                   0 #> 562          1          0          0                   1                   0 #> 564          0          0          1                   0                   0 #> 569          0          0          0                   0                   0 #> 570          1          0          0                   1                   0 #> 572          0          0          1                   0                   0 #> 573          0          0          0                   0                   0 #> 574          1          0          0                   0                   0 #> 575          0          1          0                   0                   0 #> 576          0          0          1                   0                   0 #> 577          0          0          0                   0                   0 #> 578          1          0          0                   0                   0 #> 579          0          1          0                   0                   0 #> 582          1          0          0                   1                   0 #> 583          0          1          0                   0                   1 #> 584          0          0          1                   0                   0 #> 585          0          0          0                   0                   0 #> 586          1          0          0                   0                   0 #> 587          0          1          0                   0                   0 #> 590          1          0          0                   1                   0 #> 591          0          1          0                   0                   1 #> 593          0          0          0                   0                   0 #> 594          1          0          0                   0                   0 #> 595          0          1          0                   0                   0 #> 596          0          0          1                   0                   0 #> 599          0          1          0                   0                   0 #> 600          0          0          1                   0                   0 #> 601          0          0          0                   0                   0 #> 602          1          0          0                   0                   0 #> 604          0          0          1                   0                   0 #> 606          1          0          0                   1                   0 #> 608          0          0          1                   0                   0 #> 609          0          0          0                   0                   0 #> 610          1          0          0                   0                   0 #> 611          0          1          0                   0                   0 #> 612          0          0          1                   0                   0 #> 613          0          0          0                   0                   0 #> 614          1          0          0                   0                   0 #> 616          0          0          1                   0                   0 #> 617          0          0          0                   0                   0 #> 619          0          1          0                   0                   1 #> 620          0          0          1                   0                   0 #> 621          0          0          0                   0                   0 #> 622          1          0          0                   0                   0 #> 623          0          1          0                   0                   0 #> 624          0          0          1                   0                   0 #> 625          0          0          0                   0                   0 #> 628          0          0          1                   0                   0 #> 630          1          0          0                   1                   0 #> 631          0          1          0                   0                   1 #> 632          0          0          1                   0                   0 #> 633          0          0          0                   0                   0 #> 634          1          0          0                   1                   0 #> 638          1          0          0                   1                   0 #> 639          0          1          0                   0                   1 #> 640          0          0          1                   0                   0 #> 642          1          0          0                   0                   0 #> 645          0          0          0                   0                   0 #> 648          0          0          1                   0                   0 #> 650          1          0          0                   0                   0 #> 652          0          0          1                   0                   0 #> 654          1          0          0                   0                   0 #> 655          0          1          0                   0                   0 #> 656          0          0          1                   0                   0 #> 657          0          0          0                   0                   0 #> 661          0          0          0                   0                   0 #> 665          0          0          0                   0                   0 #> 666          1          0          0                   0                   0 #> 668          0          0          1                   0                   0 #> 669          0          0          0                   0                   0 #> 670          1          0          0                   0                   0 #> 671          0          1          0                   0                   0 #> 673          0          0          0                   0                   0 #> 674          1          0          0                   0                   0 #> 678          1          0          0                   1                   0 #> 679          0          1          0                   0                   1 #> 680          0          0          1                   0                   0 #> 682          1          0          0                   0                   0 #> 684          0          0          1                   0                   0 #> 685          0          0          0                   0                   0 #> 686          1          0          0                   1                   0 #> 687          0          1          0                   0                   1 #> 689          0          0          0                   0                   0 #> 690          1          0          0                   1                   0 #> 691          0          1          0                   0                   1 #> 693          0          0          0                   0                   0 #> 694          1          0          0                   1                   0 #> 695          0          1          0                   0                   1 #> 697          0          0          0                   0                   0 #> 698          1          0          0                   0                   0 #> 700          0          0          1                   0                   0 #> 701          0          0          0                   0                   0 #> 702          1          0          0                   1                   0 #> 704          0          0          1                   0                   0 #> 707          0          1          0                   0                   0 #> 709          0          0          0                   0                   0 #> 712          0          0          1                   0                   0 #> 713          0          0          0                   0                   0 #> 715          0          1          0                   0                   1 #> 716          0          0          1                   0                   0 #> 717          0          0          0                   0                   0 #> 718          1          0          0                   0                   0 #> 719          0          1          0                   0                   0 #> 721          0          0          0                   0                   0 #> 723          0          1          0                   0                   0 #> 724          0          0          1                   0                   0 #> 727          0          1          0                   0                   1 #> 728          0          0          1                   0                   0 #> 729          0          0          0                   0                   0 #> 730          1          0          0                   1                   0 #> 734          1          0          0                   1                   0 #> 736          0          0          1                   0                   0 #> 738          1          0          0                   0                   0 #> 739          0          1          0                   0                   0 #> 740          0          0          1                   0                   0 #> 741          0          0          0                   0                   0 #> 742          1          0          0                   0                   0 #> 744          0          0          1                   0                   0 #> 745          0          0          0                   0                   0 #> 749          0          0          0                   0                   0 #> 751          0          1          0                   0                   0 #> 753          0          0          0                   0                   0 #> 754          1          0          0                   1                   0 #> 755          0          1          0                   0                   1 #> 757          0          0          0                   0                   0 #> 758          1          0          0                   1                   0 #> 759          0          1          0                   0                   1 #> 760          0          0          1                   0                   0 #> 761          0          0          0                   0                   0 #> 764          0          0          1                   0                   0 #> 765          0          0          0                   0                   0 #> 766          1          0          0                   1                   0 #> 767          0          1          0                   0                   1 #> 768          0          0          1                   0                   0 #> 770          1          0          0                   0                   0 #> 771          0          1          0                   0                   0 #> 772          0          0          1                   0                   0 #> 773          0          0          0                   0                   0 #> 774          1          0          0                   0                   0 #> 775          0          1          0                   0                   0 #> 776          0          0          1                   0                   0 #> 778          1          0          0                   1                   0 #> 779          0          1          0                   0                   1 #> 781          0          0          0                   0                   0 #> 782          1          0          0                   0                   0 #> 784          0          0          1                   0                   0 #> 788          0          0          1                   0                   0 #> 789          0          0          0                   0                   0 #> 790          1          0          0                   1                   0 #> 792          0          0          1                   0                   0 #> 797          0          0          0                   0                   0 #> 798          1          0          0                   0                   0 #> 800          0          0          1                   0                   0 #>     ARMCDTRT:AVISITVIS4 #> 2                     0 #> 4                     1 #> 6                     0 #> 7                     0 #> 8                     0 #> 10                    0 #> 12                    0 #> 13                    0 #> 14                    0 #> 16                    1 #> 17                    0 #> 19                    0 #> 20                    0 #> 23                    0 #> 25                    0 #> 26                    0 #> 28                    0 #> 29                    0 #> 30                    0 #> 31                    0 #> 32                    0 #> 33                    0 #> 34                    0 #> 36                    1 #> 39                    0 #> 41                    0 #> 42                    0 #> 43                    0 #> 44                    1 #> 45                    0 #> 46                    0 #> 47                    0 #> 51                    0 #> 52                    1 #> 55                    0 #> 59                    0 #> 60                    0 #> 62                    0 #> 64                    0 #> 65                    0 #> 68                    0 #> 69                    0 #> 70                    0 #> 72                    1 #> 73                    0 #> 74                    0 #> 75                    0 #> 76                    1 #> 78                    0 #> 79                    0 #> 82                    0 #> 83                    0 #> 84                    1 #> 85                    0 #> 86                    0 #> 87                    0 #> 88                    1 #> 89                    0 #> 90                    0 #> 91                    0 #> 93                    0 #> 94                    0 #> 95                    0 #> 96                    1 #> 97                    0 #> 98                    0 #> 99                    0 #> 100                   1 #> 101                   0 #> 102                   0 #> 103                   0 #> 104                   1 #> 105                   0 #> 107                   0 #> 108                   1 #> 109                   0 #> 110                   0 #> 111                   0 #> 112                   1 #> 113                   0 #> 114                   0 #> 116                   1 #> 117                   0 #> 118                   0 #> 119                   0 #> 120                   1 #> 121                   0 #> 123                   0 #> 125                   0 #> 128                   1 #> 129                   0 #> 130                   0 #> 132                   1 #> 133                   0 #> 134                   0 #> 135                   0 #> 136                   0 #> 137                   0 #> 138                   0 #> 140                   1 #> 142                   0 #> 144                   1 #> 145                   0 #> 146                   0 #> 147                   0 #> 148                   0 #> 149                   0 #> 151                   0 #> 153                   0 #> 155                   0 #> 156                   0 #> 157                   0 #> 158                   0 #> 159                   0 #> 162                   0 #> 163                   0 #> 164                   0 #> 165                   0 #> 168                   0 #> 169                   0 #> 170                   0 #> 171                   0 #> 172                   1 #> 173                   0 #> 177                   0 #> 178                   0 #> 179                   0 #> 180                   0 #> 181                   0 #> 182                   0 #> 183                   0 #> 185                   0 #> 186                   0 #> 187                   0 #> 190                   0 #> 191                   0 #> 193                   0 #> 194                   0 #> 195                   0 #> 197                   0 #> 198                   0 #> 199                   0 #> 201                   0 #> 202                   0 #> 204                   1 #> 206                   0 #> 208                   1 #> 209                   0 #> 210                   0 #> 217                   0 #> 218                   0 #> 219                   0 #> 221                   0 #> 224                   0 #> 226                   0 #> 227                   0 #> 228                   1 #> 230                   0 #> 231                   0 #> 233                   0 #> 235                   0 #> 236                   1 #> 237                   0 #> 238                   0 #> 239                   0 #> 240                   1 #> 241                   0 #> 242                   0 #> 244                   1 #> 246                   0 #> 250                   0 #> 251                   0 #> 252                   0 #> 253                   0 #> 254                   0 #> 256                   0 #> 257                   0 #> 258                   0 #> 259                   0 #> 260                   1 #> 261                   0 #> 262                   0 #> 263                   0 #> 264                   1 #> 265                   0 #> 266                   0 #> 267                   0 #> 268                   1 #> 269                   0 #> 270                   0 #> 273                   0 #> 274                   0 #> 275                   0 #> 276                   0 #> 277                   0 #> 278                   0 #> 280                   0 #> 281                   0 #> 282                   0 #> 283                   0 #> 284                   1 #> 285                   0 #> 286                   0 #> 287                   0 #> 291                   0 #> 292                   0 #> 293                   0 #> 295                   0 #> 296                   0 #> 298                   0 #> 299                   0 #> 300                   0 #> 301                   0 #> 304                   1 #> 305                   0 #> 306                   0 #> 307                   0 #> 308                   1 #> 310                   0 #> 311                   0 #> 312                   1 #> 316                   0 #> 317                   0 #> 318                   0 #> 319                   0 #> 322                   0 #> 323                   0 #> 324                   0 #> 325                   0 #> 327                   0 #> 328                   0 #> 329                   0 #> 330                   0 #> 331                   0 #> 332                   1 #> 336                   0 #> 339                   0 #> 340                   0 #> 341                   0 #> 342                   0 #> 343                   0 #> 344                   1 #> 345                   0 #> 347                   0 #> 349                   0 #> 351                   0 #> 352                   0 #> 353                   0 #> 354                   0 #> 355                   0 #> 356                   0 #> 357                   0 #> 363                   0 #> 364                   1 #> 365                   0 #> 367                   0 #> 368                   1 #> 370                   0 #> 371                   0 #> 372                   0 #> 373                   0 #> 375                   0 #> 376                   0 #> 378                   0 #> 379                   0 #> 381                   0 #> 382                   0 #> 384                   0 #> 385                   0 #> 386                   0 #> 388                   1 #> 389                   0 #> 390                   0 #> 391                   0 #> 392                   0 #> 394                   0 #> 397                   0 #> 398                   0 #> 399                   0 #> 402                   0 #> 403                   0 #> 405                   0 #> 406                   0 #> 407                   0 #> 408                   0 #> 409                   0 #> 410                   0 #> 411                   0 #> 413                   0 #> 415                   0 #> 416                   0 #> 418                   0 #> 419                   0 #> 421                   0 #> 422                   0 #> 423                   0 #> 424                   1 #> 427                   0 #> 428                   0 #> 429                   0 #> 430                   0 #> 431                   0 #> 432                   1 #> 434                   0 #> 435                   0 #> 436                   0 #> 438                   0 #> 439                   0 #> 444                   0 #> 445                   0 #> 447                   0 #> 449                   0 #> 450                   0 #> 451                   0 #> 453                   0 #> 454                   0 #> 455                   0 #> 456                   0 #> 457                   0 #> 458                   0 #> 459                   0 #> 461                   0 #> 463                   0 #> 464                   1 #> 465                   0 #> 469                   0 #> 470                   0 #> 471                   0 #> 473                   0 #> 474                   0 #> 477                   0 #> 484                   1 #> 487                   0 #> 489                   0 #> 490                   0 #> 491                   0 #> 494                   0 #> 495                   0 #> 496                   1 #> 497                   0 #> 498                   0 #> 499                   0 #> 501                   0 #> 502                   0 #> 504                   1 #> 505                   0 #> 508                   1 #> 509                   0 #> 510                   0 #> 511                   0 #> 512                   1 #> 513                   0 #> 518                   0 #> 519                   0 #> 521                   0 #> 522                   0 #> 523                   0 #> 524                   0 #> 526                   0 #> 527                   0 #> 528                   0 #> 530                   0 #> 531                   0 #> 532                   0 #> 534                   0 #> 535                   0 #> 536                   0 #> 537                   0 #> 538                   0 #> 539                   0 #> 540                   0 #> 541                   0 #> 544                   1 #> 545                   0 #> 546                   0 #> 547                   0 #> 548                   1 #> 549                   0 #> 550                   0 #> 551                   0 #> 555                   0 #> 556                   1 #> 557                   0 #> 558                   0 #> 560                   0 #> 562                   0 #> 564                   1 #> 569                   0 #> 570                   0 #> 572                   1 #> 573                   0 #> 574                   0 #> 575                   0 #> 576                   0 #> 577                   0 #> 578                   0 #> 579                   0 #> 582                   0 #> 583                   0 #> 584                   1 #> 585                   0 #> 586                   0 #> 587                   0 #> 590                   0 #> 591                   0 #> 593                   0 #> 594                   0 #> 595                   0 #> 596                   0 #> 599                   0 #> 600                   0 #> 601                   0 #> 602                   0 #> 604                   0 #> 606                   0 #> 608                   1 #> 609                   0 #> 610                   0 #> 611                   0 #> 612                   0 #> 613                   0 #> 614                   0 #> 616                   0 #> 617                   0 #> 619                   0 #> 620                   1 #> 621                   0 #> 622                   0 #> 623                   0 #> 624                   0 #> 625                   0 #> 628                   1 #> 630                   0 #> 631                   0 #> 632                   1 #> 633                   0 #> 634                   0 #> 638                   0 #> 639                   0 #> 640                   1 #> 642                   0 #> 645                   0 #> 648                   0 #> 650                   0 #> 652                   0 #> 654                   0 #> 655                   0 #> 656                   0 #> 657                   0 #> 661                   0 #> 665                   0 #> 666                   0 #> 668                   0 #> 669                   0 #> 670                   0 #> 671                   0 #> 673                   0 #> 674                   0 #> 678                   0 #> 679                   0 #> 680                   1 #> 682                   0 #> 684                   0 #> 685                   0 #> 686                   0 #> 687                   0 #> 689                   0 #> 690                   0 #> 691                   0 #> 693                   0 #> 694                   0 #> 695                   0 #> 697                   0 #> 698                   0 #> 700                   0 #> 701                   0 #> 702                   0 #> 704                   1 #> 707                   0 #> 709                   0 #> 712                   0 #> 713                   0 #> 715                   0 #> 716                   1 #> 717                   0 #> 718                   0 #> 719                   0 #> 721                   0 #> 723                   0 #> 724                   0 #> 727                   0 #> 728                   1 #> 729                   0 #> 730                   0 #> 734                   0 #> 736                   1 #> 738                   0 #> 739                   0 #> 740                   0 #> 741                   0 #> 742                   0 #> 744                   0 #> 745                   0 #> 749                   0 #> 751                   0 #> 753                   0 #> 754                   0 #> 755                   0 #> 757                   0 #> 758                   0 #> 759                   0 #> 760                   1 #> 761                   0 #> 764                   1 #> 765                   0 #> 766                   0 #> 767                   0 #> 768                   1 #> 770                   0 #> 771                   0 #> 772                   0 #> 773                   0 #> 774                   0 #> 775                   0 #> 776                   0 #> 778                   0 #> 779                   0 #> 781                   0 #> 782                   0 #> 784                   0 #> 788                   0 #> 789                   0 #> 790                   0 #> 792                   1 #> 797                   0 #> 798                   0 #> 800                   0 #> attr(,\"assign\") #>  [1] 0 1 1 2 3 4 4 4 5 5 5 #> attr(,\"contrasts\") #> attr(,\"contrasts\")$RACE #> [1] \"contr.treatment\" #>  #> attr(,\"contrasts\")$SEX #> [1] \"contr.treatment\" #>  #> attr(,\"contrasts\")$ARMCD #> [1] \"contr.treatment\" #>  #> attr(,\"contrasts\")$AVISIT #> [1] \"contr.treatment\" #>  #>  #> $y_vector #>   [1] 39.97105 20.48379 31.45522 36.87889 48.80809 35.98699 37.16444 33.89229 #>   [9] 33.74637 54.45055 32.31386 46.79361 41.71154 39.02423 31.93050 32.90947 #>  [17] 48.28031 32.23021 35.91080 45.54898 53.02877 47.16898 46.64287 58.09713 #>  [25] 44.97613 44.32755 38.97813 43.72862 46.43393 40.34576 42.76568 40.11155 #>  [33] 53.31791 56.07641 41.90837 34.65663 39.07791 35.89612 47.67264 22.65440 #>  [41] 40.85376 32.60048 33.64329 40.92278 32.14831 46.43604 41.34973 66.30382 #>  [49] 47.95358 53.97364 56.64544 49.70872 60.40497 45.98525 51.90911 41.50787 #>  [57] 53.42727 23.86859 35.98563 43.60626 29.59773 35.50688 55.42944 52.10530 #>  [65] 31.69644 32.16159 51.04735 55.85987 49.11706 49.25544 51.72211 69.99128 #>  [73] 22.07169 46.08393 52.42288 37.69466 44.59400 52.08897 58.22961 37.22824 #>  [81] 34.39863 36.34012 45.44182 41.54847 43.92172 61.83243 27.25656 45.65133 #>  [89] 33.19334 41.66826 27.12753 31.74858 41.60000 39.45250 32.61823 34.62445 #>  [97] 45.90515 36.17780 39.79796 50.08272 44.64316 39.73529 34.06164 40.18592 #> [105] 41.17584 57.76669 38.18460 47.19893 37.32785 43.16048 41.40349 30.15733 #> [113] 35.84353 40.95250 41.37928 50.17316 45.35226 39.06491 42.11960 29.81042 #> [121] 42.57055 47.81652 68.06024 35.62071 33.89134 36.42808 37.57519 58.46873 #> [129] 19.54516 31.13541 40.89955 22.18809 41.05857 37.32452 43.12432 41.99349 #> [137] 44.03080 38.66417 53.45993 29.81948 30.43859 40.18095 26.78578 34.55115 #> [145] 40.06421 43.09329 45.71567 40.74992 44.74635 40.14674 48.75859 46.43462 #> [153] 29.33990 47.93165 41.11632 47.05889 52.24599 54.14236 50.44618 37.53657 #> [161] 49.45840 59.12866 40.31268 39.66049 50.89726 56.13116 32.82981 46.53837 #> [169] 51.81265 29.91939 51.05656 50.50059 64.11388 32.21843 29.64732 45.09919 #> [177] 39.75659 37.28894 44.80145 65.95920 33.43439 33.57042 39.91543 49.57098 #> [185] 38.91634 36.69011 45.66665 52.07431 42.21411 45.02901 30.98338 44.72932 #> [193] 40.68711 34.71530 27.30752 37.31585 44.83000 32.93042 44.91911 45.68636 #> [201] 65.98800 46.60130 40.89786 46.66708 43.83270 44.11604 38.29612 51.38570 #> [209] 56.20979 43.45819 38.38741 56.42818 39.05050 54.09200 31.40521 46.13330 #> [217] 45.29845 28.06936 42.50283 46.45368 64.97366 43.97847 35.33466 39.34378 #> [225] 41.27633 39.83058 43.49673 44.06114 41.43742 46.16954 54.24024 36.61831 #> [233] 42.09272 50.69556 51.72563 53.89947 39.94420 56.42482 41.86385 34.56420 #> [241] 38.68927 62.88743 28.85343 49.29495 28.74029 43.59994 57.38616 35.36824 #> [249] 43.06110 31.27551 54.13245 25.97050 51.17493 48.44043 43.33128 55.93546 #> [257] 54.15312 40.60252 44.44715 40.54161 33.95563 43.67802 42.76023 42.82678 #> [265] 39.59218 33.49216 35.39266 42.36266 48.54368 43.94366 47.91204 20.72928 #> [273] 28.00599 40.19255 37.79360 36.75177 34.59822 39.32034 40.65702 43.03255 #> [281] 54.65715 35.55742 43.70215 42.52157 54.89337 32.03460 29.45107 45.35138 #> [289] 38.73784 41.42283 47.32385 47.55310 49.06509 29.22591 40.08175 45.68142 #> [297] 41.47403 42.51970 69.36099 42.39760 43.72376 49.47601 51.94188 40.59100 #> [305] 39.97833 31.69049 37.20517 46.28740 41.58720 32.17365 40.69375 32.28771 #> [313] 41.76205 40.06768 29.14213 39.50989 43.32349 47.16756 40.93020 42.19406 #> [321] 41.21057 38.54330 43.96324 42.67652 22.79584 31.43559 38.85064 48.24288 #> [329] 44.71302 51.85370 30.56757 59.90473 49.76150 47.21985 40.34525 48.29793 #> [337] 44.39634 41.71421 47.37535 42.03797 37.56100 45.11793 34.62530 45.28206 #> [345] 63.57761 35.80878 52.67314 35.88734 38.73222 46.70361 53.65398 36.71543 #> [353] 41.54317 51.67909 27.40130 30.33517 37.73092 29.11668 32.08830 41.66067 #> [361] 53.90815 35.06937 47.17615 56.49347 38.88006 47.54070 43.53705 31.82054 #> [369] 39.62816 44.95543 21.11543 34.74671 56.69249 22.73126 32.50075 42.37206 #> [377] 42.89847 55.62582 45.38998 52.66743 34.18931 45.59740 28.89198 38.46147 #> [385] 49.90357 44.14167 55.24278 27.38001 33.63251 39.34410 26.98575 24.04175 #> [393] 42.16648 44.75380 31.55469 44.42696 44.10343 37.87445 48.31828 50.21520 #> [401] 41.94615 39.62690 46.69763 43.75255 47.38873 32.43412 43.07163 42.99551 #> [409] 53.82759 50.64802 63.44051 34.48949 40.08056 47.46553 37.11697 36.25120 #> [417] 29.20171 31.53773 42.35683 64.78352 32.72757 37.50022 57.03861 36.32475 #> [425] 41.46725 59.01411 30.14970 34.91740 52.13900 58.73839 35.83185 56.41409 #> [433] 43.55593 44.26320 59.25579 28.47314 47.47581 46.47483 51.22677 45.82777 #> [441] 39.06783 29.99542 54.17796 44.55743 62.59579 35.48396 44.07768 46.57837 #> [449] 47.67979 22.15439 34.27765 36.90059 40.54285 29.09494 37.21768 43.08491 #> [457] 27.12174 34.11916 40.80230 45.89269 43.69153 29.22869 55.68362 31.90698 #> [465] 37.31061 40.75546 42.19474 44.87228 47.55198 50.62894 45.47551 48.62168 #> [473] 29.66493 34.57406 38.11676 33.77204 34.26148 58.81037 39.88119 31.62708 #> [481] 48.22049 42.58829 49.33262 53.74331 29.71857 30.45651 38.29800 36.81040 #> [489] 42.35045 39.39860 49.73629 41.58082 43.58901 40.16762 41.08206 69.37409 #> [497] 41.27625 44.76138 39.69815 38.44296 48.20586 35.50735 32.08153 44.69256 #> [505] 42.18689 37.01741 38.26920 49.28806 40.45953 45.10337 45.58250 62.96989 #> [513] 30.78252 44.69667 32.72491 45.78702 48.74886 84.08449 30.19495 36.78573 #> [521] 61.03588 20.36749 35.22480 37.42847 30.20501 49.12862 47.31234 19.28388 #> [529] 30.00682 49.21768 40.13353 42.34534 52.32575 69.26254 35.70341 41.64454 #> [537] 54.25081 #>  #> $neg_log_lik #> [1] 1693.225 #>  #> $jac_list #> $jac_list[[1]] #>              [,1]         [,2]          [,3]         [,4]        [,5] #>  [1,]  1.16951547 -0.051411669 -0.0450053577 -0.029651633 -1.11563537 #>  [2,] -0.05141167  0.087578417  0.0345764451  0.007196977  0.00260112 #>  [3,] -0.04500536  0.034576445  0.0850344790  0.007128258 -0.01178718 #>  [4,] -0.02965163  0.007196977  0.0071282583  0.061521074 -0.01065994 #>  [5,] -1.11563537  0.002601120 -0.0117871834 -0.010659937  2.28786967 #>  [6,] -0.98171081  0.004118345  0.0089518223 -0.003655354  0.97932241 #>  [7,] -1.07753684  0.005790797  0.0100023530 -0.006895078  1.07595394 #>  [8,] -0.99821296 -0.001933165  0.0086761892 -0.005754318  0.99903467 #>  [9,]  0.97217159  0.008520375  0.0132545932  0.002102199 -1.98758938 #> [10,]  1.06909044  0.008539116  0.0053378784  0.004325848 -2.18658687 #> [11,]  0.99545698  0.001249297  0.0000785895  0.008328731 -2.01758658 #>               [,6]         [,7]         [,8]         [,9]        [,10] #>  [1,] -0.981710811 -1.077536844 -0.998212960  0.972171586  1.069090436 #>  [2,]  0.004118345  0.005790797 -0.001933165  0.008520375  0.008539116 #>  [3,]  0.008951822  0.010002353  0.008676189  0.013254593  0.005337878 #>  [4,] -0.003655354 -0.006895078 -0.005754318  0.002102199  0.004325848 #>  [5,]  0.979322409  1.075953942  0.999034668 -1.987589379 -2.186586867 #>  [6,]  0.836813950  0.933379638  0.857077689 -0.836557168 -0.933038454 #>  [7,]  0.933379638  1.029968833  0.953510481 -0.932874939 -1.029216841 #>  [8,]  0.857077689  0.953510481  0.877307817 -0.857056128 -0.953603898 #>  [9,] -0.836557168 -0.932874939 -0.857056128  1.689099664  1.888995410 #> [10,] -0.933038454 -1.029216841 -0.953603898  1.888995410  2.089042080 #> [11,] -0.857161705 -0.953646838 -0.877357597  1.718938218  1.919022103 #>               [,11] #>  [1,]  0.9954569814 #>  [2,]  0.0012492968 #>  [3,]  0.0000785895 #>  [4,]  0.0083287309 #>  [5,] -2.0175865751 #>  [6,] -0.8571617054 #>  [7,] -0.9536468379 #>  [8,] -0.8773575973 #>  [9,]  1.7189382180 #> [10,]  1.9190221026 #> [11,]  1.7497813115 #>  #> $jac_list[[2]] #>                [,1]         [,2]          [,3]         [,4]          [,5] #>  [1,]  0.1275306312 -0.129971302 -0.0910717692 -0.098349416 -0.0096292730 #>  [2,] -0.1299713021  0.223312665  0.1008449781  0.022808956  0.0192625868 #>  [3,] -0.0910717692  0.100844978  0.2411274630  0.008554981 -0.0182023655 #>  [4,] -0.0983494163  0.022808956  0.0085549805  0.158588894  0.0074601050 #>  [5,] -0.0096292730  0.019262587 -0.0182023655  0.007460105  0.0052924415 #>  [6,]  0.1435399949 -0.001146971 -0.0062318230  0.002417212 -0.1423316326 #>  [7,] -0.0054058828  0.005303578 -0.0057570500  0.007567400  0.0017862783 #>  [8,] -0.0009468737 -0.001369925 -0.0089479596  0.005898220  0.0012090248 #>  [9,] -0.1357904146 -0.003851407 -0.0054496317 -0.008289146  0.2986740317 #> [10,]  0.0090279320  0.004055441 -0.0009261889 -0.019591078  0.0003322176 #> [11,]  0.0105498524 -0.009420670 -0.0019295670 -0.011019805 -0.0012298550 #>               [,6]          [,7]          [,8]         [,9]         [,10] #>  [1,]  0.143539995 -0.0054058828 -0.0009468737 -0.135790415  0.0090279320 #>  [2,] -0.001146971  0.0053035777 -0.0013699252 -0.003851407  0.0040554409 #>  [3,] -0.006231823 -0.0057570500 -0.0089479596 -0.005449632 -0.0009261889 #>  [4,]  0.002417212  0.0075673997  0.0058982201 -0.008289146 -0.0195910778 #>  [5,] -0.142331633  0.0017862783  0.0012090248  0.298674032  0.0003322176 #>  [6,]  0.448003739 -0.1162181844 -0.0706352008 -0.448120908  0.1161018057 #>  [7,] -0.116218184  0.0006208091  0.0004239333  0.115940070 -0.0006363702 #>  [8,] -0.070635201  0.0004239333  0.0004185595  0.070507365 -0.0006302980 #>  [9,] -0.448120908  0.1159400700  0.0705073652  0.858765561 -0.2400454621 #> [10,]  0.116101806 -0.0006363702 -0.0006302980 -0.240045462  0.0023653114 #> [11,]  0.070632348 -0.0007028853 -0.0003653047 -0.146687106  0.0008087297 #>               [,11] #>  [1,]  0.0105498524 #>  [2,] -0.0094206701 #>  [3,] -0.0019295670 #>  [4,] -0.0110198053 #>  [5,] -0.0012298550 #>  [6,]  0.0706323476 #>  [7,] -0.0007028853 #>  [8,] -0.0003653047 #>  [9,] -0.1466871056 #> [10,]  0.0008087297 #> [11,]  0.0008254937 #>  #> $jac_list[[3]] #>               [,1]         [,2]         [,3]         [,4]         [,5] #>  [1,]  0.245560091 -0.241005288 -0.199099088 -0.186929231 -0.007083200 #>  [2,] -0.241005288  0.415633400  0.207029802  0.031893969  0.028836257 #>  [3,] -0.199099088  0.207029802  0.500748613  0.030611285 -0.048411146 #>  [4,] -0.186929231  0.031893969  0.030611285  0.306670056  0.005230923 #>  [5,] -0.007083200  0.028836257 -0.048411146  0.005230923  0.011939767 #>  [6,] -0.006054804  0.001585372 -0.007248864  0.012399309  0.001516357 #>  [7,]  0.038517950  0.007606844 -0.008011985  0.011376159 -0.044066774 #>  [8,] -0.002604366  0.001058044 -0.013637332  0.008572980  0.002399258 #>  [9,]  0.007160701  0.005781258  0.015632421 -0.023181005 -0.001960056 #> [10,] -0.036322393  0.009928402  0.006711191 -0.029277060  0.097958291 #> [11,]  0.012868838 -0.013894309  0.004513448 -0.013783909 -0.002935595 #>                [,6]         [,7]          [,8]         [,9]        [,10] #>  [1,] -0.0060548037  0.038517950 -0.0026043657  0.007160701 -0.036322393 #>  [2,]  0.0015853720  0.007606844  0.0010580439  0.005781258  0.009928402 #>  [3,] -0.0072488639 -0.008011985 -0.0136373324  0.015632421  0.006711191 #>  [4,]  0.0123993094  0.011376159  0.0085729799 -0.023181005 -0.029277060 #>  [5,]  0.0015163570 -0.044066774  0.0023992582 -0.001960056  0.097958291 #>  [6,]  0.0005531212 -0.019244874  0.0005443284 -0.001131917  0.018650673 #>  [7,] -0.0192448740  0.322767842 -0.0369215897  0.018771762 -0.322953100 #>  [8,]  0.0005443284 -0.036921590  0.0006655006 -0.001070581  0.036691455 #>  [9,] -0.0011319169  0.018771762 -0.0010705809  0.002312297 -0.037787975 #> [10,]  0.0186506731 -0.322953100  0.0366914553 -0.037787975  0.729050666 #> [11,] -0.0007378620  0.036578230 -0.0007538174  0.001139903 -0.078301890 #>               [,11] #>  [1,]  0.0128688383 #>  [2,] -0.0138943092 #>  [3,]  0.0045134481 #>  [4,] -0.0137839090 #>  [5,] -0.0029355953 #>  [6,] -0.0007378620 #>  [7,]  0.0365782297 #>  [8,] -0.0007538174 #>  [9,]  0.0011399033 #> [10,] -0.0783018897 #> [11,]  0.0012934309 #>  #> $jac_list[[4]] #>               [,1]          [,2]          [,3]          [,4]          [,5] #>  [1,]  0.029388061 -0.0300363972 -0.0190464016 -0.0219001535 -0.0026139703 #>  [2,] -0.030036397  0.0534144734  0.0204813833  0.0011759493  0.0060482952 #>  [3,] -0.019046402  0.0204813833  0.0591610472  0.0004350294 -0.0075372942 #>  [4,] -0.021900153  0.0011759493  0.0004350294  0.0391623541  0.0015980966 #>  [5,] -0.002613970  0.0060482952 -0.0075372942  0.0015980966  0.0024815727 #>  [6,] -0.001287289  0.0013882825 -0.0017696952  0.0017825394  0.0005500661 #>  [7,] -0.001819822  0.0029497206 -0.0021392898  0.0014943282  0.0008816109 #>  [8,]  0.120475742  0.0066564090 -0.0025523369 -0.0005390796 -0.1213358437 #>  [9,]  0.001514454  0.0003149104  0.0035339826 -0.0042346457 -0.0006413058 #> [10,]  0.001998149  0.0003181908  0.0023183532 -0.0048503189 -0.0004152991 #> [11,] -0.121026181 -0.0031128838  0.0032728586 -0.0016022973  0.2665382626 #>                [,6]          [,7]          [,8]          [,9]         [,10] #>  [1,] -0.0012872891 -0.0018198219  0.1204757422  0.0015144537  0.0019981493 #>  [2,]  0.0013882825  0.0029497206  0.0066564090  0.0003149104  0.0003181908 #>  [3,] -0.0017696952 -0.0021392898 -0.0025523369  0.0035339826  0.0023183532 #>  [4,]  0.0017825394  0.0014943282 -0.0005390796 -0.0042346457 -0.0048503189 #>  [5,]  0.0005500661  0.0008816109 -0.1213358437 -0.0006413058 -0.0004152991 #>  [6,]  0.0001286007  0.0001813006 -0.0503065912 -0.0002302344 -0.0001918273 #>  [7,]  0.0001813006  0.0002904376 -0.1134126363 -0.0002434026 -0.0001634397 #>  [8,] -0.0503065912 -0.1134126363  2.5685656977  0.0503712957  0.1139567512 #>  [9,] -0.0002302344 -0.0002434026  0.0503712957  0.0005410877  0.0005376701 #> [10,] -0.0001918273 -0.0001634397  0.1139567512  0.0005376701  0.0005457575 #> [11,]  0.0502540493  0.1134358458 -2.5686970395 -0.1159679830 -0.2486909707 #>              [,11] #>  [1,] -0.121026181 #>  [2,] -0.003112884 #>  [3,]  0.003272859 #>  [4,] -0.001602297 #>  [5,]  0.266538263 #>  [6,]  0.050254049 #>  [7,]  0.113435846 #>  [8,] -2.568697039 #>  [9,] -0.115967983 #> [10,] -0.248690971 #> [11,]  5.099408635 #>  #> $jac_list[[5]] #>               [,1]          [,2]          [,3]          [,4]         [,5] #>  [1,]  0.004551316 -0.0879251088 -0.0675549695 -0.0619695010  0.082243669 #>  [2,] -0.087925109  0.1485375633  0.0683640555  0.0155723082  0.009620691 #>  [3,] -0.067554970  0.0683640555  0.1594567206  0.0077525334 -0.017394272 #>  [4,] -0.061969501  0.0155723082  0.0077525334  0.1048824324 -0.005511091 #>  [5,]  0.082243669  0.0096206906 -0.0173942723 -0.0055110912 -0.156537882 #>  [6,]  0.385905592 -0.0011341107  0.0027606977 -0.0059892149 -0.383415856 #>  [7,]  0.077428636  0.0046614852  0.0022487030  0.0005457593 -0.079946648 #>  [8,]  0.084542958 -0.0004665567  0.0005575601 -0.0003711182 -0.084356478 #>  [9,] -0.386649427 -0.0035180887 -0.0074083951  0.0127403370  0.789358432 #> [10,] -0.082343916  0.0054837328  0.0048099473 -0.0025669755  0.163052708 #> [11,] -0.085004957 -0.0033454411  0.0014294625  0.0037285530  0.162124303 #>               [,6]          [,7]          [,8]         [,9]        [,10] #>  [1,]  0.385905592  0.0774286360  0.0845429582 -0.386649427 -0.082343916 #>  [2,] -0.001134111  0.0046614852 -0.0004665567 -0.003518089  0.005483733 #>  [3,]  0.002760698  0.0022487030  0.0005575601 -0.007408395  0.004809947 #>  [4,] -0.005989215  0.0005457593 -0.0003711182  0.012740337 -0.002566976 #>  [5,] -0.383415856 -0.0799466479 -0.0843564778  0.789358432  0.163052708 #>  [6,] -0.453414690 -0.3488427143 -0.2936422302  0.453945774  0.349184039 #>  [7,] -0.348842714 -0.0807840816 -0.0848246967  0.349077736  0.081076804 #>  [8,] -0.293642230 -0.0848246967 -0.0924408763  0.293908832  0.084761720 #>  [9,]  0.453945774  0.3490777358  0.2939088316 -0.944430402 -0.718327934 #> [10,]  0.349184039  0.0810768042  0.0847617197 -0.718327934 -0.165357544 #> [11,]  0.293825856  0.0847300389  0.0924354630 -0.593948987 -0.164508835 #>              [,11] #>  [1,] -0.085004957 #>  [2,] -0.003345441 #>  [3,]  0.001429462 #>  [4,]  0.003728553 #>  [5,]  0.162124303 #>  [6,]  0.293825856 #>  [7,]  0.084730039 #>  [8,]  0.092435463 #>  [9,] -0.593948987 #> [10,] -0.164508835 #> [11,] -0.172559426 #>  #> $jac_list[[6]] #>              [,1]         [,2]         [,3]         [,4]        [,5] #>  [1,]  0.08542158 -0.137826562 -0.128270224 -0.078379266  0.05003098 #>  [2,] -0.13782656  0.220960935  0.114251875  0.018491525  0.01153614 #>  [3,] -0.12827022  0.114251875  0.261843779  0.019186952 -0.02405239 #>  [4,] -0.07837927  0.018491525  0.019186952  0.160356325 -0.01893061 #>  [5,]  0.05003098  0.011536140 -0.024052393 -0.018930605 -0.06335921 #>  [6,]  0.03659983  0.008950647  0.015700461 -0.014175944 -0.03717414 #>  [7,]  0.26882833  0.006132241  0.015058304 -0.015518470 -0.26769477 #>  [8,]  0.04288401  0.005444285  0.015721157 -0.017201177 -0.04062223 #>  [9,] -0.04557652  0.006113619  0.007583599  0.007848601  0.06486010 #> [10,] -0.27641022  0.002373388  0.000309449  0.014331909  0.54658686 #> [11,] -0.04574165 -0.002160890 -0.003210129  0.015234860  0.06878771 #>               [,6]         [,7]         [,8]         [,9]        [,10] #>  [1,]  0.036599825  0.268828329  0.042884008 -0.045576525 -0.276410217 #>  [2,]  0.008950647  0.006132241  0.005444285  0.006113619  0.002373388 #>  [3,]  0.015700461  0.015058304  0.015721157  0.007583599  0.000309449 #>  [4,] -0.014175944 -0.015518470 -0.017201177  0.007848601  0.014331909 #>  [5,] -0.037174140 -0.267694771 -0.040622229  0.064860104  0.546586858 #>  [6,] -0.036537526 -0.182235351 -0.036883214  0.037420938  0.183580391 #>  [7,] -0.182235351 -0.430330046 -0.191856061  0.183200040  0.431352140 #>  [8,] -0.036883214 -0.191856061 -0.040133148  0.037660138  0.192906564 #>  [9,]  0.037420938  0.183200040  0.037660138 -0.066023554 -0.369293971 #> [10,]  0.183580391  0.431352140  0.192906564 -0.369293971 -0.890527917 #> [11,]  0.036772746  0.191909626  0.039985136 -0.065412138 -0.388112965 #>              [,11] #>  [1,] -0.045741650 #>  [2,] -0.002160890 #>  [3,] -0.003210129 #>  [4,]  0.015234860 #>  [5,]  0.068787709 #>  [6,]  0.036772746 #>  [7,]  0.191909626 #>  [8,]  0.039985136 #>  [9,] -0.065412138 #> [10,] -0.388112965 #> [11,] -0.069601482 #>  #> $jac_list[[7]] #>               [,1]         [,2]         [,3]         [,4]         [,5] #>  [1,]  0.114086175 -0.097427416 -0.083769145 -0.084335895 -0.015177898 #>  [2,] -0.097427416  0.171565410  0.091327221  0.014994572  0.012589378 #>  [3,] -0.083769145  0.091327221  0.214271278  0.021099078 -0.018328293 #>  [4,] -0.084335895  0.014994572  0.021099078  0.128252725  0.003057877 #>  [5,] -0.015177898  0.012589378 -0.018328293  0.003057877  0.026047603 #>  [6,] -0.004551890 -0.009562539 -0.014683447 -0.005348838  0.015231555 #>  [7,] -0.007876719 -0.005961612 -0.011655743  0.002717432  0.012237857 #>  [8,] -0.010527501 -0.005408481 -0.012494864  0.007646904  0.012257413 #>  [9,]  0.015278321 -0.001787168 -0.003423079  0.002034905 -0.026811775 #> [10,]  0.016026962 -0.001839695  0.001582605 -0.006787331 -0.021212859 #> [11,]  0.017090675 -0.004524007  0.001369912 -0.007745888 -0.022343973 #>               [,6]         [,7]         [,8]         [,9]        [,10] #>  [1,] -0.004551890 -0.007876719 -0.010527501  0.015278321  0.016026962 #>  [2,] -0.009562539 -0.005961612 -0.005408481 -0.001787168 -0.001839695 #>  [3,] -0.014683447 -0.011655743 -0.012494864 -0.003423079  0.001582605 #>  [4,] -0.005348838  0.002717432  0.007646904  0.002034905 -0.006787331 #>  [5,]  0.015231555  0.012237857  0.012257413 -0.026811775 -0.021212859 #>  [6,]  0.004657887  0.186432601  0.014340668 -0.004729216 -0.186448882 #>  [7,]  0.186432601  0.028282920  0.031912916 -0.186868015 -0.028980205 #>  [8,]  0.014340668  0.031912916  0.011976149 -0.014607480 -0.032546102 #>  [9,] -0.004729216 -0.186868015 -0.014607480  0.011985702  0.401133296 #> [10,] -0.186448882 -0.028980205 -0.032546102  0.401133296  0.054465603 #> [11,] -0.013914903 -0.031751354 -0.011780294  0.026473177  0.067484739 #>              [,11] #>  [1,]  0.017090675 #>  [2,] -0.004524007 #>  [3,]  0.001369912 #>  [4,] -0.007745888 #>  [5,] -0.022343973 #>  [6,] -0.013914903 #>  [7,] -0.031751354 #>  [8,] -0.011780294 #>  [9,]  0.026473177 #> [10,]  0.067484739 #> [11,]  0.021879293 #>  #> $jac_list[[8]] #>               [,1]          [,2]          [,3]          [,4]          [,5] #>  [1,] -0.006323446 -0.0330247366 -0.0306335901 -2.713874e-02  0.0429007221 #>  [2,] -0.033024737  0.0689271629  0.0264214269  3.098127e-03  0.0007687077 #>  [3,] -0.030633590  0.0264214269  0.0727011520  2.052435e-03 -0.0042893481 #>  [4,] -0.027138741  0.0030981272  0.0020524350  5.004350e-02 -0.0033130635 #>  [5,]  0.042900722  0.0007687077 -0.0042893481 -3.313064e-03 -0.0739170777 #>  [6,]  0.037776600 -0.0029030175  0.0031236253 -8.298186e-05 -0.0379760317 #>  [7,]  0.040175431 -0.0026049030  0.0036099238 -3.983308e-04 -0.0404707348 #>  [8,]  0.596038716  0.0125429026  0.0064458746 -7.951491e-03 -0.5979172824 #>  [9,] -0.039473964  0.0048333133 -0.0003088884  5.586363e-04  0.0703908752 #> [10,] -0.041733451  0.0069117337 -0.0021797920 -2.391215e-04  0.0750270535 #> [11,] -0.606706604  0.0066710180  0.0026709546  8.298983e-03  1.2937347672 #>                [,6]          [,7]         [,8]          [,9]         [,10] #>  [1,]  3.777660e-02  0.0401754313  0.596038716 -0.0394739639 -0.0417334514 #>  [2,] -2.903018e-03 -0.0026049030  0.012542903  0.0048333133  0.0069117337 #>  [3,]  3.123625e-03  0.0036099238  0.006445875 -0.0003088884 -0.0021797920 #>  [4,] -8.298186e-05 -0.0003983308 -0.007951491  0.0005586363 -0.0002391215 #>  [5,] -3.797603e-02 -0.0404707348 -0.597917282  0.0703908752  0.0750270535 #>  [6,] -3.799992e-02 -0.0371638541 -0.388140282  0.0380613384  0.0369626454 #>  [7,] -3.716385e-02 -0.0395400762 -0.528270621  0.0372504433  0.0393651494 #>  [8,] -3.881403e-01 -0.5282706210 -0.719929653  0.3887917031  0.5296190334 #>  [9,]  3.806134e-02  0.0372504433  0.388791703 -0.0710154527 -0.0696899316 #> [10,]  3.696265e-02  0.0393651494  0.529619033 -0.0696899316 -0.0737155779 #> [11,]  3.883582e-01  0.5289079300  0.719834715 -0.8523505456 -1.1452150083 #>              [,11] #>  [1,] -0.606706604 #>  [2,]  0.006671018 #>  [3,]  0.002670955 #>  [4,]  0.008298983 #>  [5,]  1.293734767 #>  [6,]  0.388358232 #>  [7,]  0.528907930 #>  [8,]  0.719834715 #>  [9,] -0.852350546 #> [10,] -1.145215008 #> [11,] -1.607721760 #>  #> $jac_list[[9]] #>               [,1]          [,2]          [,3]          [,4]         [,5] #>  [1,]  0.041473955 -0.0314606247 -0.0168549181 -2.315242e-02 -0.015155127 #>  [2,] -0.031460625  0.0538809583  0.0221715378  3.655728e-03  0.005427256 #>  [3,] -0.016854918  0.0221715378  0.0558983063 -9.962610e-04 -0.007335694 #>  [4,] -0.023152416  0.0036557279 -0.0009962610  3.814286e-02  0.004271949 #>  [5,] -0.015155127  0.0054272559 -0.0073356944  4.271949e-03  0.024739070 #>  [6,] -0.014696964  0.0039311657 -0.0056691003 -1.123568e-05  0.015484056 #>  [7,] -0.013186167  0.0024647462 -0.0036293159  2.608542e-03  0.012322919 #>  [8,] -0.006261574  0.0137271535 -0.0049091078 -3.313129e-03  0.005509252 #>  [9,]  0.018453255 -0.0070166484  0.0002455213 -2.350538e-03 -0.027859077 #> [10,]  0.014008275  0.0005465727  0.0030723304 -6.571520e-03 -0.023077379 #> [11,]  0.004507730 -0.0020504007  0.0049401852 -3.219137e-03 -0.020306630 #>                [,6]         [,7]         [,8]          [,9]         [,10] #>  [1,] -1.469696e-02 -0.013186167 -0.006261574  0.0184532547  0.0140082750 #>  [2,]  3.931166e-03  0.002464746  0.013727153 -0.0070166484  0.0005465727 #>  [3,] -5.669100e-03 -0.003629316 -0.004909108  0.0002455213  0.0030723304 #>  [4,] -1.123568e-05  0.002608542 -0.003313129 -0.0023505380 -0.0065715199 #>  [5,]  1.548406e-02  0.012322919  0.005509252 -0.0278590774 -0.0230773794 #>  [6,]  3.916072e-03  0.014184771  0.435631005 -0.0039403723 -0.0138334905 #>  [7,]  1.418477e-02  0.011665630  0.022251231 -0.0143350660 -0.0116250112 #>  [8,]  4.356310e-01  0.022251231  0.108575188 -0.4352779847 -0.0209640014 #>  [9,] -3.940372e-03 -0.014335066 -0.435277985  0.0083177316  0.0267726480 #> [10,] -1.383349e-02 -0.011625011 -0.020964001  0.0267726480  0.0233268429 #> [11,] -4.357096e-01 -0.022010417 -0.108751446  0.9189699565  0.0633575572 #>              [,11] #>  [1,]  0.004507730 #>  [2,] -0.002050401 #>  [3,]  0.004940185 #>  [4,] -0.003219137 #>  [5,] -0.020306630 #>  [6,] -0.435709562 #>  [7,] -0.022010417 #>  [8,] -0.108751446 #>  [9,]  0.918969957 #> [10,]  0.063357557 #> [11,]  0.246113612 #>  #> $jac_list[[10]] #>                [,1]          [,2]         [,3]         [,4]          [,5] #>  [1,]  0.0475094828 -0.0400177827 -0.028260626 -0.034012882 -0.0080787157 #>  [2,] -0.0400177827  0.0684544431  0.031820681  0.003857394  0.0065758994 #>  [3,] -0.0282606263  0.0318206813  0.091939662  0.002503657 -0.0134695684 #>  [4,] -0.0340128825  0.0038573936  0.002503657  0.053295287  0.0039965441 #>  [5,] -0.0080787157  0.0065758994 -0.013469568  0.003996544  0.0125472134 #>  [6,] -0.0070638919  0.0004634724 -0.004672035  0.005868902  0.0054358657 #>  [7,] -0.0054458176  0.0014959299 -0.004698971  0.003207218  0.0049143464 #>  [8,] -0.0008086081  0.0032326095  0.008125465 -0.006370958  0.0003637877 #>  [9,]  0.0068928167  0.0013272395  0.007033868 -0.007504714 -0.0092578196 #> [10,]  0.0062173719 -0.0029139665  0.005195188 -0.003467928 -0.0090043526 #> [11,] -0.0110162084  0.0114643244  0.011169857  0.009527844 -0.0081867865 #>                [,6]         [,7]          [,8]         [,9]        [,10] #>  [1,] -0.0070638919 -0.005445818 -0.0008086081  0.006892817  0.006217372 #>  [2,]  0.0004634724  0.001495930  0.0032326095  0.001327239 -0.002913966 #>  [3,] -0.0046720350 -0.004698971  0.0081254648  0.007033868  0.005195188 #>  [4,]  0.0058689018  0.003207218 -0.0063709584 -0.007504714 -0.003467928 #>  [5,]  0.0054358657  0.004914346  0.0003637877 -0.009257820 -0.009004353 #>  [6,]  0.0055361284  0.003344703 -0.0009680439 -0.005842292 -0.003635238 #>  [7,]  0.0033447028  0.004126786  0.3172248172 -0.003525064 -0.004295150 #>  [8,] -0.0009680439  0.317224817 -0.0604796319  0.001431173 -0.316729583 #>  [9,] -0.0058422920 -0.003525064  0.0014311730  0.009950109  0.007200077 #> [10,] -0.0036352381 -0.004295150 -0.3167295835  0.007200077  0.009148932 #> [11,]  0.0008961357 -0.317074451  0.0602901594  0.008112522  0.703015362 #>               [,11] #>  [1,] -0.0110162084 #>  [2,]  0.0114643244 #>  [3,]  0.0111698566 #>  [4,]  0.0095278440 #>  [5,] -0.0081867865 #>  [6,]  0.0008961357 #>  [7,] -0.3170744512 #>  [8,]  0.0602901594 #>  [9,]  0.0081125222 #> [10,]  0.7030153618 #> [11,] -0.1100765249 #>  #>  #> $theta_vcov #>                [,1]          [,2]          [,3]          [,4]          [,5] #>  [1,]  3.702524e-03 -1.215947e-04 -4.731168e-05  1.450739e-05  1.497878e-03 #>  [2,] -1.215947e-04  4.166297e-03  5.181830e-06 -8.501705e-05 -2.892842e-03 #>  [3,] -4.731168e-05  5.181830e-06  4.125814e-03 -1.641174e-05 -9.040069e-05 #>  [4,]  1.450739e-05 -8.501705e-05 -1.641174e-05  3.954303e-03  1.872784e-04 #>  [5,]  1.497878e-03 -2.892842e-03 -9.040069e-05  1.872784e-04  1.162924e-02 #>  [6,]  9.528883e-04 -3.051437e-04 -1.464540e-03  1.037445e-04  1.171667e-03 #>  [7,] -2.602792e-04  7.154405e-04 -1.610053e-04 -1.022748e-04 -8.342308e-04 #>  [8,]  4.907597e-04  3.579757e-04  1.323707e-04 -1.731809e-03 -4.115907e-04 #>  [9,]  2.835132e-05  1.522769e-04 -5.031469e-05 -5.113057e-06 -9.715561e-05 #> [10,] -7.267721e-05 -1.851224e-05  8.198068e-05  1.959919e-04 -1.454858e-04 #>                [,6]          [,7]          [,8]          [,9]         [,10] #>  [1,]  0.0009528883 -0.0002602792  0.0004907597  2.835132e-05 -7.267721e-05 #>  [2,] -0.0003051437  0.0007154405  0.0003579757  1.522769e-04 -1.851224e-05 #>  [3,] -0.0014645400 -0.0001610053  0.0001323707 -5.031469e-05  8.198068e-05 #>  [4,]  0.0001037445 -0.0001022748 -0.0017318089 -5.113057e-06  1.959919e-04 #>  [5,]  0.0011716674 -0.0008342308 -0.0004115907 -9.715561e-05 -1.454858e-04 #>  [6,]  0.0113483186 -0.0011633727 -0.0004920010  1.126993e-04 -1.244717e-04 #>  [7,] -0.0011633727  0.0117530828  0.0003182121 -2.510208e-04  6.492154e-04 #>  [8,] -0.0004920010  0.0003182121  0.0152793330 -2.440027e-03  1.085145e-03 #>  [9,]  0.0001126993 -0.0002510208 -0.0024400268  9.713650e-03 -5.203255e-04 #> [10,] -0.0001244717  0.0006492154  0.0010851454 -5.203255e-04  1.123606e-02 #>  #> $full_frame #>         FEV1                      RACE    SEX ARMCD AVISIT USUBJID (weights) #> 2   39.97105 Black or African American Female   TRT   VIS2     PT1         1 #> 4   20.48379 Black or African American Female   TRT   VIS4     PT1         1 #> 6   31.45522                     Asian   Male   PBO   VIS2     PT2         1 #> 7   36.87889                     Asian   Male   PBO   VIS3     PT2         1 #> 8   48.80809                     Asian   Male   PBO   VIS4     PT2         1 #> 10  35.98699 Black or African American Female   PBO   VIS2     PT3         1 #> 12  37.16444 Black or African American Female   PBO   VIS4     PT3         1 #> 13  33.89229                     Asian Female   TRT   VIS1     PT4         1 #> 14  33.74637                     Asian Female   TRT   VIS2     PT4         1 #> 16  54.45055                     Asian Female   TRT   VIS4     PT4         1 #> 17  32.31386 Black or African American   Male   PBO   VIS1     PT5         1 #> 19  46.79361 Black or African American   Male   PBO   VIS3     PT5         1 #> 20  41.71154 Black or African American   Male   PBO   VIS4     PT5         1 #> 23  39.02423 Black or African American   Male   PBO   VIS3     PT6         1 #> 25  31.93050                     Asian Female   PBO   VIS1     PT7         1 #> 26  32.90947                     Asian Female   PBO   VIS2     PT7         1 #> 28  48.28031                     Asian Female   PBO   VIS4     PT7         1 #> 29  32.23021 Black or African American   Male   PBO   VIS1     PT8         1 #> 30  35.91080 Black or African American   Male   PBO   VIS2     PT8         1 #> 31  45.54898 Black or African American   Male   PBO   VIS3     PT8         1 #> 32  53.02877 Black or African American   Male   PBO   VIS4     PT8         1 #> 33  47.16898                     White   Male   TRT   VIS1     PT9         1 #> 34  46.64287                     White   Male   TRT   VIS2     PT9         1 #> 36  58.09713                     White   Male   TRT   VIS4     PT9         1 #> 39  44.97613 Black or African American Female   PBO   VIS3    PT10         1 #> 41  44.32755                     Asian Female   TRT   VIS1    PT11         1 #> 42  38.97813                     Asian Female   TRT   VIS2    PT11         1 #> 43  43.72862                     Asian Female   TRT   VIS3    PT11         1 #> 44  46.43393                     Asian Female   TRT   VIS4    PT11         1 #> 45  40.34576                     Asian   Male   PBO   VIS1    PT12         1 #> 46  42.76568                     Asian   Male   PBO   VIS2    PT12         1 #> 47  40.11155                     Asian   Male   PBO   VIS3    PT12         1 #> 51  53.31791                     White   Male   TRT   VIS3    PT13         1 #> 52  56.07641                     White   Male   TRT   VIS4    PT13         1 #> 55  41.90837 Black or African American   Male   PBO   VIS3    PT14         1 #> 59  34.65663                     Asian   Male   PBO   VIS3    PT15         1 #> 60  39.07791                     Asian   Male   PBO   VIS4    PT15         1 #> 62  35.89612                     Asian Female   PBO   VIS2    PT16         1 #> 64  47.67264                     Asian Female   PBO   VIS4    PT16         1 #> 65  22.65440                     White Female   PBO   VIS1    PT17         1 #> 68  40.85376                     White Female   PBO   VIS4    PT17         1 #> 69  32.60048                     Asian   Male   TRT   VIS1    PT18         1 #> 70  33.64329                     Asian   Male   TRT   VIS2    PT18         1 #> 72  40.92278                     Asian   Male   TRT   VIS4    PT18         1 #> 73  32.14831                     Asian   Male   TRT   VIS1    PT19         1 #> 74  46.43604                     Asian   Male   TRT   VIS2    PT19         1 #> 75  41.34973                     Asian   Male   TRT   VIS3    PT19         1 #> 76  66.30382                     Asian   Male   TRT   VIS4    PT19         1 #> 78  47.95358                     White Female   TRT   VIS2    PT20         1 #> 79  53.97364                     White Female   TRT   VIS3    PT20         1 #> 82  56.64544                     White   Male   TRT   VIS2    PT21         1 #> 83  49.70872                     White   Male   TRT   VIS3    PT21         1 #> 84  60.40497                     White   Male   TRT   VIS4    PT21         1 #> 85  45.98525                     White   Male   TRT   VIS1    PT22         1 #> 86  51.90911                     White   Male   TRT   VIS2    PT22         1 #> 87  41.50787                     White   Male   TRT   VIS3    PT22         1 #> 88  53.42727                     White   Male   TRT   VIS4    PT22         1 #> 89  23.86859 Black or African American Female   PBO   VIS1    PT23         1 #> 90  35.98563 Black or African American Female   PBO   VIS2    PT23         1 #> 91  43.60626 Black or African American Female   PBO   VIS3    PT23         1 #> 93  29.59773                     White Female   TRT   VIS1    PT24         1 #> 94  35.50688                     White Female   TRT   VIS2    PT24         1 #> 95  55.42944                     White Female   TRT   VIS3    PT24         1 #> 96  52.10530                     White Female   TRT   VIS4    PT24         1 #> 97  31.69644                     White Female   TRT   VIS1    PT25         1 #> 98  32.16159                     White Female   TRT   VIS2    PT25         1 #> 99  51.04735                     White Female   TRT   VIS3    PT25         1 #> 100 55.85987                     White Female   TRT   VIS4    PT25         1 #> 101 49.11706                     White Female   TRT   VIS1    PT26         1 #> 102 49.25544                     White Female   TRT   VIS2    PT26         1 #> 103 51.72211                     White Female   TRT   VIS3    PT26         1 #> 104 69.99128                     White Female   TRT   VIS4    PT26         1 #> 105 22.07169 Black or African American Female   TRT   VIS1    PT27         1 #> 107 46.08393 Black or African American Female   TRT   VIS3    PT27         1 #> 108 52.42288 Black or African American Female   TRT   VIS4    PT27         1 #> 109 37.69466 Black or African American   Male   TRT   VIS1    PT28         1 #> 110 44.59400 Black or African American   Male   TRT   VIS2    PT28         1 #> 111 52.08897 Black or African American   Male   TRT   VIS3    PT28         1 #> 112 58.22961 Black or African American   Male   TRT   VIS4    PT28         1 #> 113 37.22824 Black or African American   Male   TRT   VIS1    PT29         1 #> 114 34.39863 Black or African American   Male   TRT   VIS2    PT29         1 #> 116 36.34012 Black or African American   Male   TRT   VIS4    PT29         1 #> 117 45.44182                     Asian Female   TRT   VIS1    PT30         1 #> 118 41.54847                     Asian Female   TRT   VIS2    PT30         1 #> 119 43.92172                     Asian Female   TRT   VIS3    PT30         1 #> 120 61.83243                     Asian Female   TRT   VIS4    PT30         1 #> 121 27.25656                     Asian Female   PBO   VIS1    PT31         1 #> 123 45.65133                     Asian Female   PBO   VIS3    PT31         1 #> 125 33.19334 Black or African American   Male   TRT   VIS1    PT32         1 #> 128 41.66826 Black or African American   Male   TRT   VIS4    PT32         1 #> 129 27.12753 Black or African American   Male   TRT   VIS1    PT33         1 #> 130 31.74858 Black or African American   Male   TRT   VIS2    PT33         1 #> 132 41.60000 Black or African American   Male   TRT   VIS4    PT33         1 #> 133 39.45250                     Asian Female   PBO   VIS1    PT34         1 #> 134 32.61823                     Asian Female   PBO   VIS2    PT34         1 #> 135 34.62445                     Asian Female   PBO   VIS3    PT34         1 #> 136 45.90515                     Asian Female   PBO   VIS4    PT34         1 #> 137 36.17780 Black or African American Female   TRT   VIS1    PT35         1 #> 138 39.79796 Black or African American Female   TRT   VIS2    PT35         1 #> 140 50.08272 Black or African American Female   TRT   VIS4    PT35         1 #> 142 44.64316                     Asian Female   TRT   VIS2    PT36         1 #> 144 39.73529                     Asian Female   TRT   VIS4    PT36         1 #> 145 34.06164                     White Female   PBO   VIS1    PT37         1 #> 146 40.18592                     White Female   PBO   VIS2    PT37         1 #> 147 41.17584                     White Female   PBO   VIS3    PT37         1 #> 148 57.76669                     White Female   PBO   VIS4    PT37         1 #> 149 38.18460                     Asian Female   PBO   VIS1    PT38         1 #> 151 47.19893                     Asian Female   PBO   VIS3    PT38         1 #> 153 37.32785                     Asian Female   PBO   VIS1    PT39         1 #> 155 43.16048                     Asian Female   PBO   VIS3    PT39         1 #> 156 41.40349                     Asian Female   PBO   VIS4    PT39         1 #> 157 30.15733 Black or African American   Male   PBO   VIS1    PT40         1 #> 158 35.84353 Black or African American   Male   PBO   VIS2    PT40         1 #> 159 40.95250 Black or African American   Male   PBO   VIS3    PT40         1 #> 162 41.37928 Black or African American   Male   PBO   VIS2    PT41         1 #> 163 50.17316 Black or African American   Male   PBO   VIS3    PT41         1 #> 164 45.35226 Black or African American   Male   PBO   VIS4    PT41         1 #> 165 39.06491 Black or African American   Male   PBO   VIS1    PT42         1 #> 168 42.11960 Black or African American   Male   PBO   VIS4    PT42         1 #> 169 29.81042 Black or African American Female   TRT   VIS1    PT43         1 #> 170 42.57055 Black or African American Female   TRT   VIS2    PT43         1 #> 171 47.81652 Black or African American Female   TRT   VIS3    PT43         1 #> 172 68.06024 Black or African American Female   TRT   VIS4    PT43         1 #> 173 35.62071 Black or African American   Male   TRT   VIS1    PT44         1 #> 177 33.89134                     Asian Female   PBO   VIS1    PT45         1 #> 178 36.42808                     Asian Female   PBO   VIS2    PT45         1 #> 179 37.57519                     Asian Female   PBO   VIS3    PT45         1 #> 180 58.46873                     Asian Female   PBO   VIS4    PT45         1 #> 181 19.54516                     Asian   Male   PBO   VIS1    PT46         1 #> 182 31.13541                     Asian   Male   PBO   VIS2    PT46         1 #> 183 40.89955                     Asian   Male   PBO   VIS3    PT46         1 #> 185 22.18809                     Asian   Male   TRT   VIS1    PT47         1 #> 186 41.05857                     Asian   Male   TRT   VIS2    PT47         1 #> 187 37.32452                     Asian   Male   TRT   VIS3    PT47         1 #> 190 43.12432 Black or African American   Male   PBO   VIS2    PT48         1 #> 191 41.99349 Black or African American   Male   PBO   VIS3    PT48         1 #> 193 44.03080                     White Female   PBO   VIS1    PT49         1 #> 194 38.66417                     White Female   PBO   VIS2    PT49         1 #> 195 53.45993                     White Female   PBO   VIS3    PT49         1 #> 197 29.81948                     Asian Female   TRT   VIS1    PT50         1 #> 198 30.43859                     Asian Female   TRT   VIS2    PT50         1 #> 199 40.18095                     Asian Female   TRT   VIS3    PT50         1 #> 201 26.78578 Black or African American Female   TRT   VIS1    PT51         1 #> 202 34.55115 Black or African American Female   TRT   VIS2    PT51         1 #> 204 40.06421 Black or African American Female   TRT   VIS4    PT51         1 #> 206 43.09329 Black or African American Female   TRT   VIS2    PT52         1 #> 208 45.71567 Black or African American Female   TRT   VIS4    PT52         1 #> 209 40.74992                     White   Male   PBO   VIS1    PT53         1 #> 210 44.74635                     White   Male   PBO   VIS2    PT53         1 #> 217 40.14674                     Asian   Male   TRT   VIS1    PT55         1 #> 218 48.75859                     Asian   Male   TRT   VIS2    PT55         1 #> 219 46.43462                     Asian   Male   TRT   VIS3    PT55         1 #> 221 29.33990 Black or African American   Male   PBO   VIS1    PT56         1 #> 224 47.93165 Black or African American   Male   PBO   VIS4    PT56         1 #> 226 41.11632 Black or African American   Male   TRT   VIS2    PT57         1 #> 227 47.05889 Black or African American   Male   TRT   VIS3    PT57         1 #> 228 52.24599 Black or African American   Male   TRT   VIS4    PT57         1 #> 230 54.14236                     White Female   TRT   VIS2    PT58         1 #> 231 50.44618                     White Female   TRT   VIS3    PT58         1 #> 233 37.53657                     White Female   TRT   VIS1    PT59         1 #> 235 49.45840                     White Female   TRT   VIS3    PT59         1 #> 236 59.12866                     White Female   TRT   VIS4    PT59         1 #> 237 40.31268 Black or African American Female   TRT   VIS1    PT60         1 #> 238 39.66049 Black or African American Female   TRT   VIS2    PT60         1 #> 239 50.89726 Black or African American Female   TRT   VIS3    PT60         1 #> 240 56.13116 Black or African American Female   TRT   VIS4    PT60         1 #> 241 32.82981                     Asian   Male   TRT   VIS1    PT61         1 #> 242 46.53837                     Asian   Male   TRT   VIS2    PT61         1 #> 244 51.81265                     Asian   Male   TRT   VIS4    PT61         1 #> 246 29.91939                     Asian Female   PBO   VIS2    PT62         1 #> 250 51.05656                     White Female   PBO   VIS2    PT63         1 #> 251 50.50059                     White Female   PBO   VIS3    PT63         1 #> 252 64.11388                     White Female   PBO   VIS4    PT63         1 #> 253 32.21843 Black or African American Female   PBO   VIS1    PT64         1 #> 254 29.64732 Black or African American Female   PBO   VIS2    PT64         1 #> 256 45.09919 Black or African American Female   PBO   VIS4    PT64         1 #> 257 39.75659                     Asian Female   TRT   VIS1    PT65         1 #> 258 37.28894                     Asian Female   TRT   VIS2    PT65         1 #> 259 44.80145                     Asian Female   TRT   VIS3    PT65         1 #> 260 65.95920                     Asian Female   TRT   VIS4    PT65         1 #> 261 33.43439                     Asian   Male   TRT   VIS1    PT66         1 #> 262 33.57042                     Asian   Male   TRT   VIS2    PT66         1 #> 263 39.91543                     Asian   Male   TRT   VIS3    PT66         1 #> 264 49.57098                     Asian   Male   TRT   VIS4    PT66         1 #> 265 38.91634                     White Female   TRT   VIS1    PT67         1 #> 266 36.69011                     White Female   TRT   VIS2    PT67         1 #> 267 45.66665                     White Female   TRT   VIS3    PT67         1 #> 268 52.07431                     White Female   TRT   VIS4    PT67         1 #> 269 42.21411                     White Female   TRT   VIS1    PT68         1 #> 270 45.02901                     White Female   TRT   VIS2    PT68         1 #> 273 30.98338 Black or African American   Male   PBO   VIS1    PT69         1 #> 274 44.72932 Black or African American   Male   PBO   VIS2    PT69         1 #> 275 40.68711 Black or African American   Male   PBO   VIS3    PT69         1 #> 276 34.71530 Black or African American   Male   PBO   VIS4    PT69         1 #> 277 27.30752 Black or African American   Male   PBO   VIS1    PT70         1 #> 278 37.31585 Black or African American   Male   PBO   VIS2    PT70         1 #> 280 44.83000 Black or African American   Male   PBO   VIS4    PT70         1 #> 281 32.93042                     Asian   Male   TRT   VIS1    PT71         1 #> 282 44.91911                     Asian   Male   TRT   VIS2    PT71         1 #> 283 45.68636                     Asian   Male   TRT   VIS3    PT71         1 #> 284 65.98800                     Asian   Male   TRT   VIS4    PT71         1 #> 285 46.60130                     Asian Female   TRT   VIS1    PT72         1 #> 286 40.89786                     Asian Female   TRT   VIS2    PT72         1 #> 287 46.66708                     Asian Female   TRT   VIS3    PT72         1 #> 291 43.83270                     White   Male   PBO   VIS3    PT73         1 #> 292 44.11604                     White   Male   PBO   VIS4    PT73         1 #> 293 38.29612                     White Female   PBO   VIS1    PT74         1 #> 295 51.38570                     White Female   PBO   VIS3    PT74         1 #> 296 56.20979                     White Female   PBO   VIS4    PT74         1 #> 298 43.45819                     White   Male   PBO   VIS2    PT75         1 #> 299 38.38741                     White   Male   PBO   VIS3    PT75         1 #> 300 56.42818                     White   Male   PBO   VIS4    PT75         1 #> 301 39.05050                     White   Male   TRT   VIS1    PT76         1 #> 304 54.09200                     White   Male   TRT   VIS4    PT76         1 #> 305 31.40521                     Asian   Male   TRT   VIS1    PT77         1 #> 306 46.13330                     Asian   Male   TRT   VIS2    PT77         1 #> 307 45.29845                     Asian   Male   TRT   VIS3    PT77         1 #> 308 28.06936                     Asian   Male   TRT   VIS4    PT77         1 #> 310 42.50283                     White Female   TRT   VIS2    PT78         1 #> 311 46.45368                     White Female   TRT   VIS3    PT78         1 #> 312 64.97366                     White Female   TRT   VIS4    PT78         1 #> 316 43.97847                     Asian Female   PBO   VIS4    PT79         1 #> 317 35.33466                     Asian   Male   TRT   VIS1    PT80         1 #> 318 39.34378                     Asian   Male   TRT   VIS2    PT80         1 #> 319 41.27633                     Asian   Male   TRT   VIS3    PT80         1 #> 322 39.83058                     White   Male   PBO   VIS2    PT81         1 #> 323 43.49673                     White   Male   PBO   VIS3    PT81         1 #> 324 44.06114                     White   Male   PBO   VIS4    PT81         1 #> 325 41.43742 Black or African American Female   PBO   VIS1    PT82         1 #> 327 46.16954 Black or African American Female   PBO   VIS3    PT82         1 #> 328 54.24024 Black or African American Female   PBO   VIS4    PT82         1 #> 329 36.61831                     White   Male   TRT   VIS1    PT83         1 #> 330 42.09272                     White   Male   TRT   VIS2    PT83         1 #> 331 50.69556                     White   Male   TRT   VIS3    PT83         1 #> 332 51.72563                     White   Male   TRT   VIS4    PT83         1 #> 336 53.89947                     Asian Female   PBO   VIS4    PT84         1 #> 339 39.94420                     Asian Female   PBO   VIS3    PT85         1 #> 340 56.42482                     Asian Female   PBO   VIS4    PT85         1 #> 341 41.86385 Black or African American Female   TRT   VIS1    PT86         1 #> 342 34.56420 Black or African American Female   TRT   VIS2    PT86         1 #> 343 38.68927 Black or African American Female   TRT   VIS3    PT86         1 #> 344 62.88743 Black or African American Female   TRT   VIS4    PT86         1 #> 345 28.85343                     White   Male   PBO   VIS1    PT87         1 #> 347 49.29495                     White   Male   PBO   VIS3    PT87         1 #> 349 28.74029 Black or African American Female   PBO   VIS1    PT88         1 #> 351 43.59994 Black or African American Female   PBO   VIS3    PT88         1 #> 352 57.38616 Black or African American Female   PBO   VIS4    PT88         1 #> 353 35.36824 Black or African American   Male   PBO   VIS1    PT89         1 #> 354 43.06110 Black or African American   Male   PBO   VIS2    PT89         1 #> 355 31.27551 Black or African American   Male   PBO   VIS3    PT89         1 #> 356 54.13245 Black or African American   Male   PBO   VIS4    PT89         1 #> 357 25.97050                     Asian   Male   PBO   VIS1    PT90         1 #> 363 51.17493                     White Female   TRT   VIS3    PT91         1 #> 364 48.44043                     White Female   TRT   VIS4    PT91         1 #> 365 43.33128                     White Female   TRT   VIS1    PT92         1 #> 367 55.93546                     White Female   TRT   VIS3    PT92         1 #> 368 54.15312                     White Female   TRT   VIS4    PT92         1 #> 370 40.60252 Black or African American   Male   PBO   VIS2    PT93         1 #> 371 44.44715 Black or African American   Male   PBO   VIS3    PT93         1 #> 372 40.54161 Black or African American   Male   PBO   VIS4    PT93         1 #> 373 33.95563                     Asian Female   PBO   VIS1    PT94         1 #> 375 43.67802                     Asian Female   PBO   VIS3    PT94         1 #> 376 42.76023                     Asian Female   PBO   VIS4    PT94         1 #> 378 42.82678                     Asian Female   PBO   VIS2    PT95         1 #> 379 39.59218                     Asian Female   PBO   VIS3    PT95         1 #> 381 33.49216 Black or African American Female   PBO   VIS1    PT96         1 #> 382 35.39266 Black or African American Female   PBO   VIS2    PT96         1 #> 384 42.36266 Black or African American Female   PBO   VIS4    PT96         1 #> 385 48.54368                     White   Male   TRT   VIS1    PT97         1 #> 386 43.94366                     White   Male   TRT   VIS2    PT97         1 #> 388 47.91204                     White   Male   TRT   VIS4    PT97         1 #> 389 20.72928                     Asian   Male   PBO   VIS1    PT98         1 #> 390 28.00599                     Asian   Male   PBO   VIS2    PT98         1 #> 391 40.19255                     Asian   Male   PBO   VIS3    PT98         1 #> 392 37.79360                     Asian   Male   PBO   VIS4    PT98         1 #> 394 36.75177 Black or African American   Male   PBO   VIS2    PT99         1 #> 397 34.59822 Black or African American Female   PBO   VIS1   PT100         1 #> 398 39.32034 Black or African American Female   PBO   VIS2   PT100         1 #> 399 40.65702 Black or African American Female   PBO   VIS3   PT100         1 #> 402 43.03255                     White   Male   TRT   VIS2   PT101         1 #> 403 54.65715                     White   Male   TRT   VIS3   PT101         1 #> 405 35.55742                     Asian Female   PBO   VIS1   PT102         1 #> 406 43.70215                     Asian Female   PBO   VIS2   PT102         1 #> 407 42.52157                     Asian Female   PBO   VIS3   PT102         1 #> 408 54.89337                     Asian Female   PBO   VIS4   PT102         1 #> 409 32.03460                     Asian Female   PBO   VIS1   PT103         1 #> 410 29.45107                     Asian Female   PBO   VIS2   PT103         1 #> 411 45.35138                     Asian Female   PBO   VIS3   PT103         1 #> 413 38.73784 Black or African American Female   PBO   VIS1   PT104         1 #> 415 41.42283 Black or African American Female   PBO   VIS3   PT104         1 #> 416 47.32385 Black or African American Female   PBO   VIS4   PT104         1 #> 418 47.55310 Black or African American Female   TRT   VIS2   PT105         1 #> 419 49.06509 Black or African American Female   TRT   VIS3   PT105         1 #> 421 29.22591                     Asian Female   TRT   VIS1   PT106         1 #> 422 40.08175                     Asian Female   TRT   VIS2   PT106         1 #> 423 45.68142                     Asian Female   TRT   VIS3   PT106         1 #> 424 41.47403                     Asian Female   TRT   VIS4   PT106         1 #> 427 42.51970                     White Female   PBO   VIS3   PT107         1 #> 428 69.36099                     White Female   PBO   VIS4   PT107         1 #> 429 42.39760                     White   Male   TRT   VIS1   PT108         1 #> 430 43.72376                     White   Male   TRT   VIS2   PT108         1 #> 431 49.47601                     White   Male   TRT   VIS3   PT108         1 #> 432 51.94188                     White   Male   TRT   VIS4   PT108         1 #> 434 40.59100 Black or African American Female   PBO   VIS2   PT109         1 #> 435 39.97833 Black or African American Female   PBO   VIS3   PT109         1 #> 436 31.69049 Black or African American Female   PBO   VIS4   PT109         1 #> 438 37.20517                     Asian   Male   TRT   VIS2   PT110         1 #> 439 46.28740                     Asian   Male   TRT   VIS3   PT110         1 #> 444 41.58720                     White Female   PBO   VIS4   PT111         1 #> 445 32.17365 Black or African American Female   PBO   VIS1   PT112         1 #> 447 40.69375 Black or African American Female   PBO   VIS3   PT112         1 #> 449 32.28771                     Asian   Male   PBO   VIS1   PT113         1 #> 450 41.76205                     Asian   Male   PBO   VIS2   PT113         1 #> 451 40.06768                     Asian   Male   PBO   VIS3   PT113         1 #> 453 29.14213 Black or African American   Male   PBO   VIS1   PT114         1 #> 454 39.50989 Black or African American   Male   PBO   VIS2   PT114         1 #> 455 43.32349 Black or African American   Male   PBO   VIS3   PT114         1 #> 456 47.16756 Black or African American   Male   PBO   VIS4   PT114         1 #> 457 40.93020                     Asian Female   PBO   VIS1   PT115         1 #> 458 42.19406                     Asian Female   PBO   VIS2   PT115         1 #> 459 41.21057                     Asian Female   PBO   VIS3   PT115         1 #> 461 38.54330 Black or African American   Male   TRT   VIS1   PT116         1 #> 463 43.96324 Black or African American   Male   TRT   VIS3   PT116         1 #> 464 42.67652 Black or African American   Male   TRT   VIS4   PT116         1 #> 465 22.79584 Black or African American   Male   PBO   VIS1   PT117         1 #> 469 31.43559                     Asian Female   PBO   VIS1   PT118         1 #> 470 38.85064                     Asian Female   PBO   VIS2   PT118         1 #> 471 48.24288                     Asian Female   PBO   VIS3   PT118         1 #> 473 44.71302                     White   Male   TRT   VIS1   PT119         1 #> 474 51.85370                     White   Male   TRT   VIS2   PT119         1 #> 477 30.56757                     Asian Female   PBO   VIS1   PT120         1 #> 484 59.90473 Black or African American   Male   TRT   VIS4   PT121         1 #> 487 49.76150                     Asian Female   PBO   VIS3   PT122         1 #> 489 47.21985                     White Female   PBO   VIS1   PT123         1 #> 490 40.34525                     White Female   PBO   VIS2   PT123         1 #> 491 48.29793                     White Female   PBO   VIS3   PT123         1 #> 494 44.39634                     Asian Female   TRT   VIS2   PT124         1 #> 495 41.71421                     Asian Female   TRT   VIS3   PT124         1 #> 496 47.37535                     Asian Female   TRT   VIS4   PT124         1 #> 497 42.03797                     White   Male   PBO   VIS1   PT125         1 #> 498 37.56100                     White   Male   PBO   VIS2   PT125         1 #> 499 45.11793                     White   Male   PBO   VIS3   PT125         1 #> 501 34.62530                     Asian   Male   TRT   VIS1   PT126         1 #> 502 45.28206                     Asian   Male   TRT   VIS2   PT126         1 #> 504 63.57761                     Asian   Male   TRT   VIS4   PT126         1 #> 505 35.80878 Black or African American Female   TRT   VIS1   PT127         1 #> 508 52.67314 Black or African American Female   TRT   VIS4   PT127         1 #> 509 35.88734                     Asian Female   TRT   VIS1   PT128         1 #> 510 38.73222                     Asian Female   TRT   VIS2   PT128         1 #> 511 46.70361                     Asian Female   TRT   VIS3   PT128         1 #> 512 53.65398                     Asian Female   TRT   VIS4   PT128         1 #> 513 36.71543                     White   Male   TRT   VIS1   PT129         1 #> 518 41.54317                     White   Male   PBO   VIS2   PT130         1 #> 519 51.67909                     White   Male   PBO   VIS3   PT130         1 #> 521 27.40130                     Asian Female   PBO   VIS1   PT131         1 #> 522 30.33517                     Asian Female   PBO   VIS2   PT131         1 #> 523 37.73092                     Asian Female   PBO   VIS3   PT131         1 #> 524 29.11668                     Asian Female   PBO   VIS4   PT131         1 #> 526 32.08830                     Asian   Male   PBO   VIS2   PT132         1 #> 527 41.66067                     Asian   Male   PBO   VIS3   PT132         1 #> 528 53.90815                     Asian   Male   PBO   VIS4   PT132         1 #> 530 35.06937                     White   Male   PBO   VIS2   PT133         1 #> 531 47.17615                     White   Male   PBO   VIS3   PT133         1 #> 532 56.49347                     White   Male   PBO   VIS4   PT133         1 #> 534 38.88006 Black or African American   Male   PBO   VIS2   PT134         1 #> 535 47.54070 Black or African American   Male   PBO   VIS3   PT134         1 #> 536 43.53705 Black or African American   Male   PBO   VIS4   PT134         1 #> 537 31.82054 Black or African American   Male   PBO   VIS1   PT135         1 #> 538 39.62816 Black or African American   Male   PBO   VIS2   PT135         1 #> 539 44.95543 Black or African American   Male   PBO   VIS3   PT135         1 #> 540 21.11543 Black or African American   Male   PBO   VIS4   PT135         1 #> 541 34.74671                     White Female   TRT   VIS1   PT136         1 #> 544 56.69249                     White Female   TRT   VIS4   PT136         1 #> 545 22.73126                     Asian Female   TRT   VIS1   PT137         1 #> 546 32.50075                     Asian Female   TRT   VIS2   PT137         1 #> 547 42.37206                     Asian Female   TRT   VIS3   PT137         1 #> 548 42.89847                     Asian Female   TRT   VIS4   PT137         1 #> 549 55.62582                     Asian   Male   TRT   VIS1   PT138         1 #> 550 45.38998                     Asian   Male   TRT   VIS2   PT138         1 #> 551 52.66743                     Asian   Male   TRT   VIS3   PT138         1 #> 555 34.18931                     Asian Female   TRT   VIS3   PT139         1 #> 556 45.59740                     Asian Female   TRT   VIS4   PT139         1 #> 557 28.89198 Black or African American Female   PBO   VIS1   PT140         1 #> 558 38.46147 Black or African American Female   PBO   VIS2   PT140         1 #> 560 49.90357 Black or African American Female   PBO   VIS4   PT140         1 #> 562 44.14167                     White   Male   TRT   VIS2   PT141         1 #> 564 55.24278                     White   Male   TRT   VIS4   PT141         1 #> 569 27.38001 Black or African American Female   TRT   VIS1   PT143         1 #> 570 33.63251 Black or African American Female   TRT   VIS2   PT143         1 #> 572 39.34410 Black or African American Female   TRT   VIS4   PT143         1 #> 573 26.98575                     Asian Female   PBO   VIS1   PT144         1 #> 574 24.04175                     Asian Female   PBO   VIS2   PT144         1 #> 575 42.16648                     Asian Female   PBO   VIS3   PT144         1 #> 576 44.75380                     Asian Female   PBO   VIS4   PT144         1 #> 577 31.55469 Black or African American   Male   PBO   VIS1   PT145         1 #> 578 44.42696 Black or African American   Male   PBO   VIS2   PT145         1 #> 579 44.10343 Black or African American   Male   PBO   VIS3   PT145         1 #> 582 37.87445                     Asian Female   TRT   VIS2   PT146         1 #> 583 48.31828                     Asian Female   TRT   VIS3   PT146         1 #> 584 50.21520                     Asian Female   TRT   VIS4   PT146         1 #> 585 41.94615                     Asian Female   PBO   VIS1   PT147         1 #> 586 39.62690                     Asian Female   PBO   VIS2   PT147         1 #> 587 46.69763                     Asian Female   PBO   VIS3   PT147         1 #> 590 43.75255 Black or African American   Male   TRT   VIS2   PT148         1 #> 591 47.38873 Black or African American   Male   TRT   VIS3   PT148         1 #> 593 32.43412                     Asian Female   PBO   VIS1   PT149         1 #> 594 43.07163                     Asian Female   PBO   VIS2   PT149         1 #> 595 42.99551                     Asian Female   PBO   VIS3   PT149         1 #> 596 53.82759                     Asian Female   PBO   VIS4   PT149         1 #> 599 50.64802                     White   Male   PBO   VIS3   PT150         1 #> 600 63.44051                     White   Male   PBO   VIS4   PT150         1 #> 601 34.48949                     Asian Female   PBO   VIS1   PT151         1 #> 602 40.08056                     Asian Female   PBO   VIS2   PT151         1 #> 604 47.46553                     Asian Female   PBO   VIS4   PT151         1 #> 606 37.11697                     Asian Female   TRT   VIS2   PT152         1 #> 608 36.25120                     Asian Female   TRT   VIS4   PT152         1 #> 609 29.20171 Black or African American   Male   PBO   VIS1   PT153         1 #> 610 31.53773 Black or African American   Male   PBO   VIS2   PT153         1 #> 611 42.35683 Black or African American   Male   PBO   VIS3   PT153         1 #> 612 64.78352 Black or African American   Male   PBO   VIS4   PT153         1 #> 613 32.72757 Black or African American Female   PBO   VIS1   PT154         1 #> 614 37.50022 Black or African American Female   PBO   VIS2   PT154         1 #> 616 57.03861 Black or African American Female   PBO   VIS4   PT154         1 #> 617 36.32475                     Asian   Male   TRT   VIS1   PT155         1 #> 619 41.46725                     Asian   Male   TRT   VIS3   PT155         1 #> 620 59.01411                     Asian   Male   TRT   VIS4   PT155         1 #> 621 30.14970                     White   Male   PBO   VIS1   PT156         1 #> 622 34.91740                     White   Male   PBO   VIS2   PT156         1 #> 623 52.13900                     White   Male   PBO   VIS3   PT156         1 #> 624 58.73839                     White   Male   PBO   VIS4   PT156         1 #> 625 35.83185 Black or African American   Male   TRT   VIS1   PT157         1 #> 628 56.41409 Black or African American   Male   TRT   VIS4   PT157         1 #> 630 43.55593 Black or African American   Male   TRT   VIS2   PT158         1 #> 631 44.26320 Black or African American   Male   TRT   VIS3   PT158         1 #> 632 59.25579 Black or African American   Male   TRT   VIS4   PT158         1 #> 633 28.47314                     Asian Female   TRT   VIS1   PT159         1 #> 634 47.47581                     Asian Female   TRT   VIS2   PT159         1 #> 638 46.47483                     Asian   Male   TRT   VIS2   PT160         1 #> 639 51.22677                     Asian   Male   TRT   VIS3   PT160         1 #> 640 45.82777                     Asian   Male   TRT   VIS4   PT160         1 #> 642 39.06783 Black or African American Female   PBO   VIS2   PT161         1 #> 645 29.99542                     Asian   Male   PBO   VIS1   PT162         1 #> 648 54.17796                     Asian   Male   PBO   VIS4   PT162         1 #> 650 44.55743                     White   Male   PBO   VIS2   PT163         1 #> 652 62.59579                     White   Male   PBO   VIS4   PT163         1 #> 654 35.48396 Black or African American Female   PBO   VIS2   PT164         1 #> 655 44.07768 Black or African American Female   PBO   VIS3   PT164         1 #> 656 46.57837 Black or African American Female   PBO   VIS4   PT164         1 #> 657 47.67979                     White Female   TRT   VIS1   PT165         1 #> 661 22.15439                     Asian   Male   TRT   VIS1   PT166         1 #> 665 34.27765 Black or African American   Male   PBO   VIS1   PT167         1 #> 666 36.90059 Black or African American   Male   PBO   VIS2   PT167         1 #> 668 40.54285 Black or African American   Male   PBO   VIS4   PT167         1 #> 669 29.09494 Black or African American Female   PBO   VIS1   PT168         1 #> 670 37.21768 Black or African American Female   PBO   VIS2   PT168         1 #> 671 43.08491 Black or African American Female   PBO   VIS3   PT168         1 #> 673 27.12174                     White Female   PBO   VIS1   PT169         1 #> 674 34.11916                     White Female   PBO   VIS2   PT169         1 #> 678 40.80230                     White Female   TRT   VIS2   PT170         1 #> 679 45.89269                     White Female   TRT   VIS3   PT170         1 #> 680 43.69153                     White Female   TRT   VIS4   PT170         1 #> 682 29.22869                     Asian Female   PBO   VIS2   PT171         1 #> 684 55.68362                     Asian Female   PBO   VIS4   PT171         1 #> 685 31.90698                     Asian Female   TRT   VIS1   PT172         1 #> 686 37.31061                     Asian Female   TRT   VIS2   PT172         1 #> 687 40.75546                     Asian Female   TRT   VIS3   PT172         1 #> 689 42.19474                     White Female   TRT   VIS1   PT173         1 #> 690 44.87228                     White Female   TRT   VIS2   PT173         1 #> 691 47.55198                     White Female   TRT   VIS3   PT173         1 #> 693 50.62894 Black or African American Female   TRT   VIS1   PT174         1 #> 694 45.47551 Black or African American Female   TRT   VIS2   PT174         1 #> 695 48.62168 Black or African American Female   TRT   VIS3   PT174         1 #> 697 29.66493 Black or African American Female   PBO   VIS1   PT175         1 #> 698 34.57406 Black or African American Female   PBO   VIS2   PT175         1 #> 700 38.11676 Black or African American Female   PBO   VIS4   PT175         1 #> 701 33.77204 Black or African American   Male   TRT   VIS1   PT176         1 #> 702 34.26148 Black or African American   Male   TRT   VIS2   PT176         1 #> 704 58.81037 Black or African American   Male   TRT   VIS4   PT176         1 #> 707 39.88119 Black or African American   Male   PBO   VIS3   PT177         1 #> 709 31.62708 Black or African American   Male   PBO   VIS1   PT178         1 #> 712 48.22049 Black or African American   Male   PBO   VIS4   PT178         1 #> 713 42.58829                     White   Male   TRT   VIS1   PT179         1 #> 715 49.33262                     White   Male   TRT   VIS3   PT179         1 #> 716 53.74331                     White   Male   TRT   VIS4   PT179         1 #> 717 29.71857                     Asian   Male   PBO   VIS1   PT180         1 #> 718 30.45651                     Asian   Male   PBO   VIS2   PT180         1 #> 719 38.29800                     Asian   Male   PBO   VIS3   PT180         1 #> 721 36.81040                     Asian Female   PBO   VIS1   PT181         1 #> 723 42.35045                     Asian Female   PBO   VIS3   PT181         1 #> 724 39.39860                     Asian Female   PBO   VIS4   PT181         1 #> 727 49.73629 Black or African American Female   TRT   VIS3   PT182         1 #> 728 41.58082 Black or African American Female   TRT   VIS4   PT182         1 #> 729 43.58901 Black or African American Female   TRT   VIS1   PT183         1 #> 730 40.16762 Black or African American Female   TRT   VIS2   PT183         1 #> 734 41.08206                     White Female   TRT   VIS2   PT184         1 #> 736 69.37409                     White Female   TRT   VIS4   PT184         1 #> 738 41.27625 Black or African American Female   PBO   VIS2   PT185         1 #> 739 44.76138 Black or African American Female   PBO   VIS3   PT185         1 #> 740 39.69815 Black or African American Female   PBO   VIS4   PT185         1 #> 741 38.44296                     White   Male   PBO   VIS1   PT186         1 #> 742 48.20586                     White   Male   PBO   VIS2   PT186         1 #> 744 35.50735                     White   Male   PBO   VIS4   PT186         1 #> 745 32.08153 Black or African American Female   PBO   VIS1   PT187         1 #> 749 44.69256 Black or African American Female   PBO   VIS1   PT188         1 #> 751 42.18689 Black or African American Female   PBO   VIS3   PT188         1 #> 753 37.01741                     Asian Female   TRT   VIS1   PT189         1 #> 754 38.26920                     Asian Female   TRT   VIS2   PT189         1 #> 755 49.28806                     Asian Female   TRT   VIS3   PT189         1 #> 757 40.45953 Black or African American Female   TRT   VIS1   PT190         1 #> 758 45.10337 Black or African American Female   TRT   VIS2   PT190         1 #> 759 45.58250 Black or African American Female   TRT   VIS3   PT190         1 #> 760 62.96989 Black or African American Female   TRT   VIS4   PT190         1 #> 761 30.78252                     White   Male   TRT   VIS1   PT191         1 #> 764 44.69667                     White   Male   TRT   VIS4   PT191         1 #> 765 32.72491                     White Female   TRT   VIS1   PT192         1 #> 766 45.78702                     White Female   TRT   VIS2   PT192         1 #> 767 48.74886                     White Female   TRT   VIS3   PT192         1 #> 768 84.08449                     White Female   TRT   VIS4   PT192         1 #> 770 30.19495                     Asian   Male   PBO   VIS2   PT193         1 #> 771 36.78573                     Asian   Male   PBO   VIS3   PT193         1 #> 772 61.03588                     Asian   Male   PBO   VIS4   PT193         1 #> 773 20.36749 Black or African American   Male   PBO   VIS1   PT194         1 #> 774 35.22480 Black or African American   Male   PBO   VIS2   PT194         1 #> 775 37.42847 Black or African American   Male   PBO   VIS3   PT194         1 #> 776 30.20501 Black or African American   Male   PBO   VIS4   PT194         1 #> 778 49.12862                     White Female   TRT   VIS2   PT195         1 #> 779 47.31234                     White Female   TRT   VIS3   PT195         1 #> 781 19.28388                     Asian   Male   PBO   VIS1   PT196         1 #> 782 30.00682                     Asian   Male   PBO   VIS2   PT196         1 #> 784 49.21768                     Asian   Male   PBO   VIS4   PT196         1 #> 788 40.13353 Black or African American   Male   PBO   VIS4   PT197         1 #> 789 42.34534 Black or African American   Male   TRT   VIS1   PT198         1 #> 790 52.32575 Black or African American   Male   TRT   VIS2   PT198         1 #> 792 69.26254 Black or African American   Male   TRT   VIS4   PT198         1 #> 797 35.70341 Black or African American   Male   PBO   VIS1   PT200         1 #> 798 41.64454 Black or African American   Male   PBO   VIS2   PT200         1 #> 800 54.25081 Black or African American   Male   PBO   VIS4   PT200         1 #>  # Get convergence code and message. component(fit, c(\"convergence\", \"conv_message\")) #> $convergence #> [1] 0 #>  #> $conv_message #> [1] \"CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH\" #>  # Get modeled formula as a string. component(fit, c(\"formula\")) #> [1] \"FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID)\""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/cov_struct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a Covariance Structure — cov_struct","text":"","code":"cov_struct(   type = cov_types(),   visits,   subject,   group = character(),   heterogeneous = FALSE )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/cov_struct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a Covariance Structure — cov_struct","text":"type (string) name covariance structure type use. available options, see cov_types(). type abbreviation used implies heterogeneity (e.g. cph) value provided heterogeneous, heterogeneity derived type name. visits (character) vector variable names use longitudinal terms covariance structure. Multiple terms permitted \"spatial\" covariance type. subject (string) name variable encodes subject identifier. group (string) optionally, name variable encodes grouping variable subjects. heterogeneous (flag)","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/cov_struct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a Covariance Structure — cov_struct","text":"cov_struct object.","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/cov_struct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define a Covariance Structure — cov_struct","text":"","code":"cov_struct(\"csh\", \"AVISITN\", \"USUBJID\") #> <covariance structure> #> heterogeneous compound symmetry: #>  #>   AVISITN | USUBJID #>   cov_struct(\"spatial\", c(\"VISITA\", \"VISITB\"), group = \"GRP\", subject = \"SBJ\") #> <covariance structure> #> spatial exponential: #>  #>   VISITA, VISITB | GRP / SBJ #>"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/cov_type_abbr.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Associated Abbreviated Covariance Structure Type Name — cov_type_abbr","title":"Retrieve Associated Abbreviated Covariance Structure Type Name — cov_type_abbr","text":"Retrieve Associated Abbreviated Covariance Structure Type Name","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/cov_type_abbr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Associated Abbreviated Covariance Structure Type Name — cov_type_abbr","text":"","code":"cov_type_abbr(type)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/cov_type_abbr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Associated Abbreviated Covariance Structure Type Name — cov_type_abbr","text":"type (string) either full name abbreviate covariance structure type name collapse abbreviated type.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/cov_type_abbr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Associated Abbreviated Covariance Structure Type Name — cov_type_abbr","text":"corresponding abbreviated covariance type name.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/cov_type_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Associated Full Covariance Structure Type Name — cov_type_name","title":"Retrieve Associated Full Covariance Structure Type Name — cov_type_name","text":"Retrieve Associated Full Covariance Structure Type Name","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/cov_type_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Associated Full Covariance Structure Type Name — cov_type_name","text":"","code":"cov_type_name(type)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/cov_type_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Associated Full Covariance Structure Type Name — cov_type_name","text":"type (string) either full name abbreviate covariance structure type name convert long-form type.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/cov_type_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Associated Full Covariance Structure Type Name — cov_type_name","text":"corresponding abbreviated covariance type name.","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/covariance_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariance Types — covariance_types","text":"","code":"cov_types(   form = c(\"name\", \"abbr\", \"habbr\"),   filter = c(\"heterogeneous\", \"spatial\") )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/covariance_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covariance Types — covariance_types","text":"form (character) covariance structure type name form. One \"name\", \"abbr\" (abbreviation), \"habbr\" (heterogeneous abbreviation). filter (character) covariance structure type filter. One \"heterogeneous\" \"spatial\".","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/covariance_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covariance Types — covariance_types","text":"character vector accepted covariance structure type names abbreviations.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/covariance_types.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Covariance Types — covariance_types","text":"ante-dependence covariance structure package refers homogeneous ante-dependence, ante-dependence covariance structure SAS PROC MIXED refers heterogeneous ante-dependence homogeneous version available SAS. non-spatial covariance structures, time variable must coded factor.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/covariance_types.html","id":"spatial-covariance-structures-","dir":"Reference","previous_headings":"","what":"Spatial Covariance structures:","title":"Covariance Types — covariance_types","text":"\\(d_{ij}\\) denotes Euclidean distance time points \\(\\) \\(j\\).","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/covariance_types.html","id":"common-covariance-structures-","dir":"Reference","previous_headings":"","what":"Common Covariance Structures:","title":"Covariance Types — covariance_types","text":"\\(\\) \\(j\\) denote \\(\\)-th \\(j\\)-th time points, respectively, total \\(m\\) time points, \\(1 \\leq , j \\leq m\\).","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/df_1d.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of Degrees of Freedom for One-Dimensional Contrast — df_1d","title":"Calculation of Degrees of Freedom for One-Dimensional Contrast — df_1d","text":"Calculates estimate, adjusted standard error, degrees freedom, t statistic p-value one-dimensional contrast.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/df_1d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of Degrees of Freedom for One-Dimensional Contrast — df_1d","text":"","code":"df_1d(object, contrast)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/df_1d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of Degrees of Freedom for One-Dimensional Contrast — df_1d","text":"object (mmrm) MMRM fit. contrast (numeric) contrast vector. Note include elements singular coefficient estimates, .e. refer actually estimated coefficients.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/df_1d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of Degrees of Freedom for One-Dimensional Contrast — df_1d","text":"List est, se, df, t_stat p_val.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/df_1d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculation of Degrees of Freedom for One-Dimensional Contrast — df_1d","text":"","code":"object <- mmrm(   formula = FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data ) contrast <- numeric(length(object$beta_est)) contrast[3] <- 1 df_1d(object, contrast) #> $est #> [1] 5.643565 #>  #> $se #> [1] 0.6656093 #>  #> $df #> [1] 157.1382 #>  #> $t_stat #> [1] 8.478795 #>  #> $p_val #> [1] 1.564869e-14 #>"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/df_md.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of Degrees of Freedom for Multi-Dimensional Contrast — df_md","title":"Calculation of Degrees of Freedom for Multi-Dimensional Contrast — df_md","text":"Calculates estimate, standard error, degrees freedom, t statistic p-value one-dimensional contrast, depending method used mmrm().","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/df_md.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of Degrees of Freedom for Multi-Dimensional Contrast — df_md","text":"","code":"df_md(object, contrast)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/df_md.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of Degrees of Freedom for Multi-Dimensional Contrast — df_md","text":"object (mmrm) MMRM fit. contrast (matrix) numeric contrast matrix, given numeric coerced row vector. Note include elements singular coefficient estimates, .e. refer actually estimated coefficients.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/df_md.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of Degrees of Freedom for Multi-Dimensional Contrast — df_md","text":"List num_df, denom_df, f_stat p_val (2-sided p-value).","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/df_md.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculation of Degrees of Freedom for Multi-Dimensional Contrast — df_md","text":"","code":"object <- mmrm(   formula = FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data ) contrast <- matrix(data = 0, nrow = 2, ncol = length(object$beta_est)) contrast[1, 2] <- contrast[2, 3] <- 1 df_md(object, contrast) #> $num_df #> [1] 2 #>  #> $denom_df #> [1] 165.5553 #>  #> $f_stat #> [1] 36.91143 #>  #> $p_val #> [1] 5.544575e-14 #>"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/drop_elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop Items from an Indexible — drop_elements","title":"Drop Items from an Indexible — drop_elements","text":"Drop elements indexible object (vector, list, etc.).","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/drop_elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop Items from an Indexible — drop_elements","text":"","code":"drop_elements(x, n)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/drop_elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop Items from an Indexible — drop_elements","text":"x object can consumed seq_along() indexed logical vector length. n (integer) number terms drop.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/drop_elements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop Items from an Indexible — drop_elements","text":"subset x.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/emit_tidymodels_register_msg.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a Message to Emit When Tidymodels is Loaded — emit_tidymodels_register_msg","title":"Format a Message to Emit When Tidymodels is Loaded — emit_tidymodels_register_msg","text":"Format Message Emit Tidymodels Loaded","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/emit_tidymodels_register_msg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a Message to Emit When Tidymodels is Loaded — emit_tidymodels_register_msg","text":"","code":"emit_tidymodels_register_msg()"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/emit_tidymodels_register_msg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a Message to Emit When Tidymodels is Loaded — emit_tidymodels_register_msg","text":"character message emit. Either ansi-formatted cli output package 'cli' available plain-text message otherwise.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/emmeans_support.html","id":null,"dir":"Reference","previous_headings":"","what":"Support for emmeans — emmeans_support","title":"Support for emmeans — emmeans_support","text":"package includes methods allow mmrm objects used emmeans package. emmeans computes estimated marginal means (also called least-square means) coefficients MMRM. can also e.g. obtain differences groups applying pairs() object returned emmeans::emmeans().","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/emmeans_support.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Support for emmeans — emmeans_support","text":"","code":"fit <- mmrm(   formula = FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data ) if (require(emmeans)) {   emmeans(fit, ~ ARMCD | AVISIT)   pairs(emmeans(fit, ~ ARMCD | AVISIT), reverse = TRUE) } #> Loading required package: emmeans #> AVISIT = VIS1: #>  contrast  estimate    SE  df t.ratio p.value #>  TRT - PBO     3.77 1.074 146   3.514  0.0006 #>  #> AVISIT = VIS2: #>  contrast  estimate    SE  df t.ratio p.value #>  TRT - PBO     3.73 0.859 145   4.346  <.0001 #>  #> AVISIT = VIS3: #>  contrast  estimate    SE  df t.ratio p.value #>  TRT - PBO     3.08 0.690 131   4.467  <.0001 #>  #> AVISIT = VIS4: #>  contrast  estimate    SE  df t.ratio p.value #>  TRT - PBO     4.40 1.681 133   2.617  0.0099 #>  #> Results are averaged over the levels of: RACE, SEX"},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/fev_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Data on FEV1 — fev_data","text":"","code":"fev_data"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/fev_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Data on FEV1 — fev_data","text":"tibble 800 rows 7 variables: USUBJID: subject ID. AVISIT: visit number. ARMCD: treatment, TRT PBO. RACE: 3-category race. SEX: sex. FEV1_BL: FEV1 baseline (%). FEV1: FEV1 study visits. WEIGHT: weighting variable.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/fev_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example Data on FEV1 — fev_data","text":"artificial dataset.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/fev_data.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Example Data on FEV1 — fev_data","text":"Measurements FEV1 (forced expired volume one second) measure quickly lungs can emptied. Low levels FEV1 may indicate chronic obstructive pulmonary disease (COPD).","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/fill_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete character Vector Names From Values — fill_names","title":"Complete character Vector Names From Values — fill_names","text":"Complete character Vector Names Values","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/fill_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete character Vector Names From Values — fill_names","text":"","code":"fill_names(x)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/fill_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complete character Vector Names From Values — fill_names","text":"x (character list) value whose names completed element values.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/fill_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complete character Vector Names From Values — fill_names","text":"named vector list.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/fit_mmrm.html","id":null,"dir":"Reference","previous_headings":"","what":"Low-Level Fitting Function for MMRM — fit_mmrm","title":"Low-Level Fitting Function for MMRM — fit_mmrm","text":"low-level function fit MMRM. Note try different optimizers adds Jacobian information etc. contrast mmrm().","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/fit_mmrm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Low-Level Fitting Function for MMRM — fit_mmrm","text":"","code":"fit_mmrm(   formula,   data,   weights,   reml = TRUE,   covariance = NULL,   tmb_data,   formula_parts,   control = mmrm_control() )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/fit_mmrm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Low-Level Fitting Function for MMRM — fit_mmrm","text":"formula (formula) model formula exactly one special term specifying visits within subjects, see details. data (data.frame) input data containing variables used formula. weights (vector) input vector containing weights. reml (flag) whether restricted maximum likelihood (REML) estimation used, otherwise maximum likelihood (ML) used. covariance (cov_struct) covariance structure type definition, value can coerced covariance structure using .cov_struct(). value provided, structure derived provided formula. tmb_data (mmrm_tmb_data) object. formula_parts (mmrm_tmb_formula_parts) list formula parts h_mmrm_tmb_formula_parts(). control (mmrm_control) list control options produced mmrm_control().","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/fit_mmrm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Low-Level Fitting Function for MMRM — fit_mmrm","text":"List class mmrm_tmb, see h_mmrm_tmb_fit() details. addition, contains elements call optimizer.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/fit_mmrm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Low-Level Fitting Function for MMRM — fit_mmrm","text":"formula typically looks like: FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID) specifies response covariates usual, exactly one special term defines covariance structure used visit subject variables. Always use first optimizer multiple optimizers provided.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/fit_mmrm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Low-Level Fitting Function for MMRM — fit_mmrm","text":"","code":"formula <- FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID) data <- fev_data system.time(result <- fit_mmrm(formula, data, rep(1, nrow(fev_data)))) #>    user  system elapsed  #>   0.042   0.001   0.042"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/fit_single_optimizer.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting an MMRM with Single Optimizer — fit_single_optimizer","title":"Fitting an MMRM with Single Optimizer — fit_single_optimizer","text":"function helps fit MMRM using TMB single optimizer, capturing messages warnings.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/fit_single_optimizer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting an MMRM with Single Optimizer — fit_single_optimizer","text":"","code":"fit_single_optimizer(   formula,   data,   weights,   reml = TRUE,   covariance = NULL,   tmb_data,   formula_parts,   ...,   control = mmrm_control(...) )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/fit_single_optimizer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting an MMRM with Single Optimizer — fit_single_optimizer","text":"formula (formula) model formula, see details. data (data) data used model. weights (vector) optional vector weights used fitting process. NULL numeric vector. reml (flag) whether restricted maximum likelihood (REML) estimation used, otherwise maximum likelihood (ML) used. covariance (cov_struct) covariance structure type definition produced cov_struct(), value can coerced covariance structure using .cov_struct(). value provided, structure derived provided formula. tmb_data (mmrm_tmb_data) object. formula_parts (mmrm_tmb_formula_parts) object. ... Additional arguments pass mmrm_control(). control (mmrm_control) object.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/fit_single_optimizer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting an MMRM with Single Optimizer — fit_single_optimizer","text":"mmrm_fit object, additional attributes containing warnings, messages, optimizer used convergence status addition mmrm_tmb contents.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/fit_single_optimizer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fitting an MMRM with Single Optimizer — fit_single_optimizer","text":"fit_single_optimizer fit mmrm model using control provided. multiple optimizers provided control, first optimizer used. tmb_data formula_parts provided, formula, data, weights, reml, covariance ignored.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/fit_single_optimizer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting an MMRM with Single Optimizer — fit_single_optimizer","text":"","code":"mod_fit <- fit_single_optimizer(   formula = FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data,   weights = rep(1, nrow(fev_data)),   optimizer = \"nlminb\" ) attr(mod_fit, \"converged\") #> [1] TRUE"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/flat_expr.html","id":null,"dir":"Reference","previous_headings":"","what":"Flatten Expressions for Non-standard Evaluation — flat_expr","title":"Flatten Expressions for Non-standard Evaluation — flat_expr","text":"Used primarily support parsing covariance structure definitions formulas, functions flatten syntax tree hierarchy-less grammar, allowing parsing abide R's native operator precedence.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/flat_expr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flatten Expressions for Non-standard Evaluation — flat_expr","text":"","code":"flatten_call(call)  flatten_expr(expr)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/flat_expr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flatten Expressions for Non-standard Evaluation — flat_expr","text":"call, expr (language) language object flatten.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/flat_expr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flatten Expressions for Non-standard Evaluation — flat_expr","text":"list atomic values, symbols, infix operator names subexpressions.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/flat_expr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Flatten Expressions for Non-standard Evaluation — flat_expr","text":"1 + 2 | 3 R's syntax tree (|, (+, 1, 2), 3), flattening visual order produces (1, +, 2, |, 3), makes fluent interpretation non-standard grammar rules used formulas.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/flat_expr.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Flatten Expressions for Non-standard Evaluation — flat_expr","text":"flatten_call(): Flatten call list names argument expressions. call name arguments flattened list, meaning call form sp_exp(, b, c | d / e) produces list form (sp_exp, , b, c, |, d, /, e).   flatten_expr(): Flatten nested expressions","code":"flatten_call(quote(sp_exp(a, b, c | d / e))) flatten_expr(quote(1 + 2 + 3 | 4))"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/format.cov_struct.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Covariance Structure Object — format.cov_struct","title":"Format Covariance Structure Object — format.cov_struct","text":"Format Covariance Structure Object","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/format.cov_struct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Covariance Structure Object — format.cov_struct","text":"","code":"# S3 method for cov_struct format(x, ...)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/format.cov_struct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Covariance Structure Object — format.cov_struct","text":"x (cov_struct) covariance structure object. ... Additional arguments unused.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/format.cov_struct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Covariance Structure Object — format.cov_struct","text":"formatted string x.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/format_symbols.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Symbol Objects — format_symbols","title":"Format Symbol Objects — format_symbols","text":"printing, variable names converted symbols deparsed use R's built-formatting variables may contain spaces quote characters.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/format_symbols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Symbol Objects — format_symbols","text":"","code":"format_symbols(x)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/format_symbols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Symbol Objects — format_symbols","text":"x (character) vector variable names.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/format_symbols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Symbol Objects — format_symbols","text":"formatted string comma-separated variables.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/formula_rhs.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Right-Hand-Side (rhs) from Formula — formula_rhs","title":"Extract Right-Hand-Side (rhs) from Formula — formula_rhs","text":"Extract Right-Hand-Side (rhs) Formula","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/formula_rhs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Right-Hand-Side (rhs) from Formula — formula_rhs","text":"","code":"formula_rhs(f)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/formula_rhs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Right-Hand-Side (rhs) from Formula — formula_rhs","text":"f (formula) formula.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/formula_rhs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Right-Hand-Side (rhs) from Formula — formula_rhs","text":"formula without response, derived right-hand-side formula, f.","code":"formula_rhs(a ~ b + c) formula_rhs(~ b + c)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_add_covariance_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Individual Covariance Variables As Terms to Formula — h_add_covariance_terms","title":"Add Individual Covariance Variables As Terms to Formula — h_add_covariance_terms","text":"Add Individual Covariance Variables Terms Formula","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_add_covariance_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Individual Covariance Variables As Terms to Formula — h_add_covariance_terms","text":"","code":"h_add_covariance_terms(f, covariance)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_add_covariance_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Individual Covariance Variables As Terms to Formula — h_add_covariance_terms","text":"f (formula) formula covariance structure terms added. covariance (cov_struct) covariance structure object additional variables sourced.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_add_covariance_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Individual Covariance Variables As Terms to Formula — h_add_covariance_terms","text":"new formula included covariance terms.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_add_covariance_terms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Individual Covariance Variables As Terms to Formula — h_add_covariance_terms","text":"stats::update() used append covariance structure environment attribute changed. ensures returned formula input formula environment.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_add_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Formula Terms with Character — h_add_terms","title":"Add Formula Terms with Character — h_add_terms","text":"Add formula terms original formula character representation.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_add_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Formula Terms with Character — h_add_terms","text":"","code":"h_add_terms(f, adds, drop_response = FALSE)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_add_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Formula Terms with Character — h_add_terms","text":"f (formula) formula updated. adds (character) representation elements added. drop_response (flag) whether response dropped.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_add_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Formula Terms with Character — h_add_terms","text":"new formula elements drops removed.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_add_terms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Formula Terms with Character — h_add_terms","text":"Elements adds added formula, environment formula unchanged. adds NULL character(0), formula unchanged.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_coef_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Coefficients Table for MMRM Fit — h_coef_table","title":"Coefficients Table for MMRM Fit — h_coef_table","text":"used summary.mmrm() obtain coefficients table.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_coef_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coefficients Table for MMRM Fit — h_coef_table","text":"","code":"h_coef_table(object)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_coef_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coefficients Table for MMRM Fit — h_coef_table","text":"object (mmrm) model fit.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_coef_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coefficients Table for MMRM Fit — h_coef_table","text":"Matrix one row per coefficient columns Estimate, Std. Error, df, t value Pr(>|t|).","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_confirm_large_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Ask for Confirmation on Large Visit Levels — h_confirm_large_levels","title":"Ask for Confirmation on Large Visit Levels — h_confirm_large_levels","text":"Ask user confirmation many visit levels non-spatial covariance structure interactive sessions.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_confirm_large_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ask for Confirmation on Large Visit Levels — h_confirm_large_levels","text":"","code":"h_confirm_large_levels(x)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_confirm_large_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ask for Confirmation on Large Visit Levels — h_confirm_large_levels","text":"x (numeric) number visit levels.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_construct_model_frame_inputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Construction of Model Frame Formula and Data Inputs — h_construct_model_frame_inputs","title":"Construction of Model Frame Formula and Data Inputs — h_construct_model_frame_inputs","text":"Input formulas converted mmrm-style style compatible default stats::model.frame() stats::model.matrix() methods. full formula returned can construct, example, model.frame() including columns well requested subset. full set used identify rows include reduced model frame.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_construct_model_frame_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construction of Model Frame Formula and Data Inputs — h_construct_model_frame_inputs","text":"","code":"h_construct_model_frame_inputs(   formula,   data,   include,   include_choice = c(\"subject_var\", \"visit_var\", \"group_var\", \"response_var\"),   full )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_construct_model_frame_inputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construction of Model Frame Formula and Data Inputs — h_construct_model_frame_inputs","text":"formula (mmrm) mmrm fit object. data optional data frame passed model.frame() model.matrix() include (character) names variable include full (flag) indicator whether return full model frame (deprecated).","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_construct_model_frame_inputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construction of Model Frame Formula and Data Inputs — h_construct_model_frame_inputs","text":"named list four elements: \"formula\": formula including columns requested include= argument. \"formula_full\": formula including columns \"data\": data frame including columns factor character columns processed h_factor_ref(). \"is_full\": logical scalar indicating formula full formula identical","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_default_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Value on NULL\nReturn default value when first argument is NULL. — h_default_value","title":"Default Value on NULL\nReturn default value when first argument is NULL. — h_default_value","text":"Default Value NULL Return default value first argument NULL.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_default_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Value on NULL\nReturn default value when first argument is NULL. — h_default_value","text":"","code":"h_default_value(x, y)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_default_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default Value on NULL\nReturn default value when first argument is NULL. — h_default_value","text":"x Object. y Object.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_default_value.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Default Value on NULL\nReturn default value when first argument is NULL. — h_default_value","text":"x NULL, returns y. Otherwise return x.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_1d_bw.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of Between-Within Degrees of Freedom for One-Dimensional Contrast — h_df_1d_bw","title":"Calculation of Between-Within Degrees of Freedom for One-Dimensional Contrast — h_df_1d_bw","text":"Used df_1d() method \"-Within\".","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_1d_bw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of Between-Within Degrees of Freedom for One-Dimensional Contrast — h_df_1d_bw","text":"","code":"h_df_1d_bw(object, contrast)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_1d_bw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of Between-Within Degrees of Freedom for One-Dimensional Contrast — h_df_1d_bw","text":"object (mmrm) MMRM fit. contrast (numeric) contrast vector. Note include elements singular coefficient estimates, .e. refer actually estimated coefficients.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_1d_bw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of Between-Within Degrees of Freedom for One-Dimensional Contrast — h_df_1d_bw","text":"List est, se, df, t_stat p_val.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_1d_kr.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of Kenward-Roger Degrees of Freedom for One-Dimensional Contrast — h_df_1d_kr","title":"Calculation of Kenward-Roger Degrees of Freedom for One-Dimensional Contrast — h_df_1d_kr","text":"Used df_1d() method \"Kenward-Roger\" \"Kenward-Roger-Linear\".","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_1d_kr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of Kenward-Roger Degrees of Freedom for One-Dimensional Contrast — h_df_1d_kr","text":"","code":"h_df_1d_kr(object, contrast)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_1d_kr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of Kenward-Roger Degrees of Freedom for One-Dimensional Contrast — h_df_1d_kr","text":"object (mmrm) MMRM fit. contrast (numeric) contrast vector. Note include elements singular coefficient estimates, .e. refer actually estimated coefficients.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_1d_kr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of Kenward-Roger Degrees of Freedom for One-Dimensional Contrast — h_df_1d_kr","text":"List est, se, df, t_stat p_val.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_1d_res.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of Residual Degrees of Freedom for One-Dimensional Contrast — h_df_1d_res","title":"Calculation of Residual Degrees of Freedom for One-Dimensional Contrast — h_df_1d_res","text":"Used df_1d() method \"Residual\".","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_1d_res.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of Residual Degrees of Freedom for One-Dimensional Contrast — h_df_1d_res","text":"","code":"h_df_1d_res(object, contrast)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_1d_res.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of Residual Degrees of Freedom for One-Dimensional Contrast — h_df_1d_res","text":"object (mmrm) MMRM fit. contrast (numeric) contrast vector. Note include elements singular coefficient estimates, .e. refer actually estimated coefficients.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_1d_res.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of Residual Degrees of Freedom for One-Dimensional Contrast — h_df_1d_res","text":"List est, se, df, t_stat p_val.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_1d_sat.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of Satterthwaite Degrees of Freedom for One-Dimensional Contrast — h_df_1d_sat","title":"Calculation of Satterthwaite Degrees of Freedom for One-Dimensional Contrast — h_df_1d_sat","text":"Used df_1d() method \"Satterthwaite\".","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_1d_sat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of Satterthwaite Degrees of Freedom for One-Dimensional Contrast — h_df_1d_sat","text":"","code":"h_df_1d_sat(object, contrast)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_1d_sat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of Satterthwaite Degrees of Freedom for One-Dimensional Contrast — h_df_1d_sat","text":"object (mmrm) MMRM fit. contrast (numeric) contrast vector. Note include elements singular coefficient estimates, .e. refer actually estimated coefficients.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_1d_sat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of Satterthwaite Degrees of Freedom for One-Dimensional Contrast — h_df_1d_sat","text":"List est, se, df, t_stat p_val.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_bw_calc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of Between-Within Degrees of Freedom — h_df_bw_calc","title":"Calculation of Between-Within Degrees of Freedom — h_df_bw_calc","text":"Used h_df_1d_bw() h_df_md_bw().","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_bw_calc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of Between-Within Degrees of Freedom — h_df_bw_calc","text":"","code":"h_df_bw_calc(object)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_bw_calc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of Between-Within Degrees of Freedom — h_df_bw_calc","text":"object (mmrm) fitted MMRM.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_bw_calc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of Between-Within Degrees of Freedom — h_df_bw_calc","text":"List : coefs_between_within calculated via h_within_or_between() ddf_between ddf_within","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_md_bw.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of Between-Within Degrees of Freedom for Multi-Dimensional Contrast — h_df_md_bw","title":"Calculation of Between-Within Degrees of Freedom for Multi-Dimensional Contrast — h_df_md_bw","text":"Used df_md() method \"-Within\".","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_md_bw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of Between-Within Degrees of Freedom for Multi-Dimensional Contrast — h_df_md_bw","text":"","code":"h_df_md_bw(object, contrast)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_md_bw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of Between-Within Degrees of Freedom for Multi-Dimensional Contrast — h_df_md_bw","text":"object (mmrm) MMRM fit. contrast (matrix) numeric contrast matrix, given numeric coerced row vector. Note include elements singular coefficient estimates, .e. refer actually estimated coefficients.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_md_bw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of Between-Within Degrees of Freedom for Multi-Dimensional Contrast — h_df_md_bw","text":"List num_df, denom_df, f_stat p_val (2-sided p-value).","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_md_from_1d.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating F-Statistic Results from One-Dimensional Contrast — h_df_md_from_1d","title":"Creating F-Statistic Results from One-Dimensional Contrast — h_df_md_from_1d","text":"Creates multi-dimensional result one-dimensional contrast df_1d().","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_md_from_1d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating F-Statistic Results from One-Dimensional Contrast — h_df_md_from_1d","text":"","code":"h_df_md_from_1d(object, contrast)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_md_from_1d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating F-Statistic Results from One-Dimensional Contrast — h_df_md_from_1d","text":"object (mmrm) model fit. contrast (numeric) one-dimensional contrast.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_md_from_1d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creating F-Statistic Results from One-Dimensional Contrast — h_df_md_from_1d","text":"one-dimensional degrees freedom calculated based p-value calculated.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_md_kr.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of Kenward-Roger Degrees of Freedom for Multi-Dimensional Contrast — h_df_md_kr","title":"Calculation of Kenward-Roger Degrees of Freedom for Multi-Dimensional Contrast — h_df_md_kr","text":"Used df_md() method \"Kenward-Roger\" \"Kenward-Roger-Linear\".","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_md_kr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of Kenward-Roger Degrees of Freedom for Multi-Dimensional Contrast — h_df_md_kr","text":"","code":"h_df_md_kr(object, contrast)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_md_kr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of Kenward-Roger Degrees of Freedom for Multi-Dimensional Contrast — h_df_md_kr","text":"object (mmrm) MMRM fit. contrast (matrix) numeric contrast matrix, given numeric coerced row vector. Note include elements singular coefficient estimates, .e. refer actually estimated coefficients.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_md_kr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of Kenward-Roger Degrees of Freedom for Multi-Dimensional Contrast — h_df_md_kr","text":"List num_df, denom_df, f_stat p_val (2-sided p-value).","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_md_res.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of Residual Degrees of Freedom for Multi-Dimensional Contrast — h_df_md_res","title":"Calculation of Residual Degrees of Freedom for Multi-Dimensional Contrast — h_df_md_res","text":"Used df_md() method \"Residual\".","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_md_res.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of Residual Degrees of Freedom for Multi-Dimensional Contrast — h_df_md_res","text":"","code":"h_df_md_res(object, contrast)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_md_res.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of Residual Degrees of Freedom for Multi-Dimensional Contrast — h_df_md_res","text":"object (mmrm) MMRM fit. contrast (matrix) numeric contrast matrix, given numeric coerced row vector. Note include elements singular coefficient estimates, .e. refer actually estimated coefficients.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_md_res.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of Residual Degrees of Freedom for Multi-Dimensional Contrast — h_df_md_res","text":"List num_df, denom_df, f_stat p_val (2-sided p-value).","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_md_sat.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of Satterthwaite Degrees of Freedom for Multi-Dimensional Contrast — h_df_md_sat","title":"Calculation of Satterthwaite Degrees of Freedom for Multi-Dimensional Contrast — h_df_md_sat","text":"Used df_md() method \"Satterthwaite\".","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_md_sat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of Satterthwaite Degrees of Freedom for Multi-Dimensional Contrast — h_df_md_sat","text":"","code":"h_df_md_sat(object, contrast)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_md_sat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of Satterthwaite Degrees of Freedom for Multi-Dimensional Contrast — h_df_md_sat","text":"object (mmrm) MMRM fit. contrast (matrix) numeric contrast matrix, given numeric coerced row vector. Note include elements singular coefficient estimates, .e. refer actually estimated coefficients.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_md_sat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of Satterthwaite Degrees of Freedom for Multi-Dimensional Contrast — h_df_md_sat","text":"List num_df, denom_df, f_stat p_val (2-sided p-value).","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_min_bw.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign Minimum Degrees of Freedom Given Involved Coefficients — h_df_min_bw","title":"Assign Minimum Degrees of Freedom Given Involved Coefficients — h_df_min_bw","text":"Used h_df_1d_bw() h_df_md_bw().","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_min_bw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign Minimum Degrees of Freedom Given Involved Coefficients — h_df_min_bw","text":"","code":"h_df_min_bw(bw_calc, is_coef_involved)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_min_bw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign Minimum Degrees of Freedom Given Involved Coefficients — h_df_min_bw","text":"bw_calc (list) h_df_bw_calc(). is_coef_involved (logical) whether coefficient involved contrast.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_min_bw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign Minimum Degrees of Freedom Given Involved Coefficients — h_df_min_bw","text":"minimum degrees freedom assigned involved coefficient according -within categorization.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_to_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce a Data Frame to a tibble — h_df_to_tibble","title":"Coerce a Data Frame to a tibble — h_df_to_tibble","text":"used h_newdata_add_pred().","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_to_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce a Data Frame to a tibble — h_df_to_tibble","text":"","code":"h_df_to_tibble(data)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_to_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce a Data Frame to a tibble — h_df_to_tibble","text":"data (data.frame) coerce.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_to_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce a Data Frame to a tibble — h_df_to_tibble","text":"data tibble, potentially .rownames column.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_df_to_tibble.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Coerce a Data Frame to a tibble — h_df_to_tibble","text":"thin wrapper around tibble::as_tibble(), except giving useful error message checks rownames adds new column .rownames just numeric sequence per tibble::has_rownames() decision.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_drop_covariance_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop Formula Terms used for Covariance Structure Definition — h_drop_covariance_terms","title":"Drop Formula Terms used for Covariance Structure Definition — h_drop_covariance_terms","text":"Drop Formula Terms used Covariance Structure Definition","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_drop_covariance_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop Formula Terms used for Covariance Structure Definition — h_drop_covariance_terms","text":"","code":"h_drop_covariance_terms(f)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_drop_covariance_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop Formula Terms used for Covariance Structure Definition — h_drop_covariance_terms","text":"f (formula) formula covariance terms dropped.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_drop_covariance_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop Formula Terms used for Covariance Structure Definition — h_drop_covariance_terms","text":"formula without accepted covariance terms.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_drop_covariance_terms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Drop Formula Terms used for Covariance Structure Definition — h_drop_covariance_terms","text":"terms used preserve environment attribute. ensures returned formula input formula environment.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_extract_covariance_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Formula Terms used for Covariance Structure Definition — h_extract_covariance_terms","title":"Extract Formula Terms used for Covariance Structure Definition — h_extract_covariance_terms","text":"Extract Formula Terms used Covariance Structure Definition","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_extract_covariance_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Formula Terms used for Covariance Structure Definition — h_extract_covariance_terms","text":"","code":"h_extract_covariance_terms(f)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_extract_covariance_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Formula Terms used for Covariance Structure Definition — h_extract_covariance_terms","text":"f (formula) formula covariance terms extracted.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_extract_covariance_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Formula Terms used for Covariance Structure Definition — h_extract_covariance_terms","text":"list covariance structure expressions found f.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_factor_ref.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Character to Factor Following Reference — h_factor_ref","title":"Convert Character to Factor Following Reference — h_factor_ref","text":"Convert Character Factor Following Reference","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_factor_ref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Character to Factor Following Reference — h_factor_ref","text":"","code":"h_factor_ref(x, ref, var_name = vname(x))"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_factor_ref.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Character to Factor Following Reference — h_factor_ref","text":"x (character factor)  input. ref (factor) reference. var_name (string) variable name input x.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_factor_ref.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert Character to Factor Following Reference — h_factor_ref","text":"Use ref convert x factor levels. needed even x ref character model.matrix x one level errors.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_get_cov_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain Default Covariance Method — h_get_cov_default","title":"Obtain Default Covariance Method — h_get_cov_default","text":"Obtain default covariance method depending degrees freedom method used.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_get_cov_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain Default Covariance Method — h_get_cov_default","text":"","code":"h_get_cov_default(   method = c(\"Satterthwaite\", \"Kenward-Roger\", \"Residual\", \"Between-Within\") )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_get_cov_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain Default Covariance Method — h_get_cov_default","text":"method (string) degrees freedom method.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_get_cov_default.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain Default Covariance Method — h_get_cov_default","text":"default covariance method different different degrees freedom method. \"Satterthwaite\" \"-Within\", \"Asymptotic\" returned. \"Kenward-Roger\" , \"Kenward-Roger\" returned. \"Residual\" , \"Empirical\" returned.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_get_empirical.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain Empirical/Jackknife/Bias-Reduced Covariance — h_get_empirical","title":"Obtain Empirical/Jackknife/Bias-Reduced Covariance — h_get_empirical","text":"Obtain empirical Jackknife covariance \\(\\beta\\). Used mmrm fitting method \"Empirical\", \"Empirical-Jackknife\" \"Empirical-Bias-Reduced\".","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_get_empirical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain Empirical/Jackknife/Bias-Reduced Covariance — h_get_empirical","text":"","code":"h_get_empirical(tmb_data, theta, beta, beta_vcov, type)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_get_empirical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain Empirical/Jackknife/Bias-Reduced Covariance — h_get_empirical","text":"tmb_data (mmrm_tmb_data) produced h_mmrm_tmb_data(). theta (numeric) theta estimate. beta (numeric) beta estimate. beta_vcov (matrix) covariance beta estimate. type (string) type empirical method, including \"Empirical\", \"Empirical-Jackknife\" \"Empirical-Bias-Reduced\".","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_get_empirical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain Empirical/Jackknife/Bias-Reduced Covariance — h_get_empirical","text":"Named list elements: cov: matrix empirical covariance. df_mat: matrix calculate Satterthwaite degree freedom.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_get_kr_comp.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain Kenward-Roger Adjustment Components — h_get_kr_comp","title":"Obtain Kenward-Roger Adjustment Components — h_get_kr_comp","text":"Obtains components needed downstream computation Kenward-Roger degrees freedom. Used mmrm() fitting method \"Kenward-Roger\".","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_get_kr_comp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain Kenward-Roger Adjustment Components — h_get_kr_comp","text":"","code":"h_get_kr_comp(tmb_data, theta)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_get_kr_comp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain Kenward-Roger Adjustment Components — h_get_kr_comp","text":"tmb_data (mmrm_tmb_data) produced h_mmrm_tmb_data(). theta (numeric) theta estimate.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_get_kr_comp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain Kenward-Roger Adjustment Components — h_get_kr_comp","text":"Named list elements: P: matrix \\(P\\) component. Q: matrix \\(Q\\) component. R: matrix \\(R\\) component.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_get_kr_comp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain Kenward-Roger Adjustment Components — h_get_kr_comp","text":"function returns named list, \\(P\\), \\(Q\\) \\(R\\), corresponds paper 1997. matrices stacked columns \\(P\\), \\(Q\\) \\(R\\) column number(number beta parameters). number rows, dependent total number theta number groups, fit grouped mmrm. \\(P\\) matrix, stacked sequentially. \\(Q\\) \\(R\\) matrix, stacked \\(Q_{ij}\\) \\(R_{ij}\\) stacked \\(j\\) \\(\\), .e. \\(R_{i1}\\), \\(R_{i2}\\), etc. \\(Q\\) \\(R\\) contains intra-group results inter-group results zero matrices stacked result.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_get_optimizers.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain Optimizer according to Optimizer String Value — h_get_optimizers","title":"Obtain Optimizer according to Optimizer String Value — h_get_optimizers","text":"function creates optimizer functions arguments.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_get_optimizers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain Optimizer according to Optimizer String Value — h_get_optimizers","text":"","code":"h_get_optimizers(   optimizer = c(\"L-BFGS-B\", \"BFGS\", \"CG\", \"nlminb\"),   optimizer_fun = h_optimizer_fun(optimizer),   optimizer_args = list(),   optimizer_control = list() )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_get_optimizers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain Optimizer according to Optimizer String Value — h_get_optimizers","text":"optimizer (character) names built-optimizers try, subset \"L-BFGS-B\", \"BFGS\", \"CG\" \"nlminb\". optimizer_fun (function list function) alternatively optimizer, optimizer function list optimizer functions can passed directly . optimizer_args (list) additional arguments optimizer_fun. optimizer_control (list) passed argument control optimizer_fun.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_get_optimizers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain Optimizer according to Optimizer String Value — h_get_optimizers","text":"Named list optimizers created h_partial_fun_args().","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_get_optimizers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain Optimizer according to Optimizer String Value — h_get_optimizers","text":"want use built-optimizers: optimizer shortcut create list built-optimizer functions passed optimizer_fun. Allowed \"L-BFGS-B\", \"BFGS\", \"CG\" (using stats::optim() corresponding method) \"nlminb\" (using stats::nlminb()). arguments go optimizer_args. want use optimizer function: Make sure three arguments: parameter (start value), objective function gradient function sequentially function arguments. named arguments front , make sure correctly specified optimizer_args. hessian can used, please make sure argument name hessian please add attribute use_hessian = TRUE function, using attr(fun, \"use_hessian) <- TRUE.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_get_prediction.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Prediction — h_get_prediction","title":"Get Prediction — h_get_prediction","text":"Get predictions given data, theta, beta, beta_vcov.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_get_prediction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Prediction — h_get_prediction","text":"","code":"h_get_prediction(tmb_data, theta, beta, beta_vcov)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_get_prediction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Prediction — h_get_prediction","text":"tmb_data (mmrm_tmb_data) object. theta (numeric) theta value. beta (numeric) beta value. beta_vcov (matrix) beta_vcov matrix.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_get_prediction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Prediction — h_get_prediction","text":"List : prediction: Matrix columns fit, conf_var, var. covariance: List subject specific covariance matrices. index: List zero-based subject indices.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_get_prediction.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Prediction — h_get_prediction","text":"See predict function predict.cpp called internally.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_get_prediction_variance.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Prediction Variance — h_get_prediction_variance","title":"Get Prediction Variance — h_get_prediction_variance","text":"Get prediction variance given fit, tmb_data Monte Carlo sampling method.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_get_prediction_variance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Prediction Variance — h_get_prediction_variance","text":"","code":"h_get_prediction_variance(object, nsim, tmb_data)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_get_prediction_variance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Prediction Variance — h_get_prediction_variance","text":"object (mmrm_tmb) fitted MMRM. nsim (count) number samples. tmb_data (mmrm_tmb_data) object.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_get_sim_per_subj.html","id":null,"dir":"Reference","previous_headings":"","what":"Get simulated values by patient. — h_get_sim_per_subj","title":"Get simulated values by patient. — h_get_sim_per_subj","text":"Get simulated values patient.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_get_sim_per_subj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get simulated values by patient. — h_get_sim_per_subj","text":"","code":"h_get_sim_per_subj(predict_res, nsub, nsim)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_get_sim_per_subj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get simulated values by patient. — h_get_sim_per_subj","text":"predict_res (list) h_get_prediction(). nsub (count) number subjects. nsim (count) number values simulate.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_gradient.html","id":null,"dir":"Reference","previous_headings":"","what":"Computation of a Gradient Given Jacobian and Contrast Vector — h_gradient","title":"Computation of a Gradient Given Jacobian and Contrast Vector — h_gradient","text":"Computes gradient linear combination beta given Jacobian matrix variance parameters.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_gradient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computation of a Gradient Given Jacobian and Contrast Vector — h_gradient","text":"","code":"h_gradient(jac_list, contrast)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_gradient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computation of a Gradient Given Jacobian and Contrast Vector — h_gradient","text":"jac_list (list) Jacobian list produced e.g. h_jac_list(). contrast (numeric) contrast vector, needs number elements rows columns element jac_list.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_gradient.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computation of a Gradient Given Jacobian and Contrast Vector — h_gradient","text":"Numeric vector contains quadratic forms element jac_list contrast vector.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_jac_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain List of Jacobian Matrix Entries for Covariance Matrix — h_jac_list","title":"Obtain List of Jacobian Matrix Entries for Covariance Matrix — h_jac_list","text":"Obtain Jacobian matrices given covariance function variance parameters.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_jac_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain List of Jacobian Matrix Entries for Covariance Matrix — h_jac_list","text":"","code":"h_jac_list(tmb_data, theta_est, beta_vcov)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_jac_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain List of Jacobian Matrix Entries for Covariance Matrix — h_jac_list","text":"tmb_data (mmrm_tmb_data) produced h_mmrm_tmb_data(). theta_est (numeric) variance parameters point estimate. beta_vcov (matrix) vairance covariance matrix coefficients.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_jac_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain List of Jacobian Matrix Entries for Covariance Matrix — h_jac_list","text":"List one element per variance parameter containing matrix dimensions covariance matrix. values derivatives regards variance parameter.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_kr_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain the Adjusted Kenward-Roger degrees of freedom — h_kr_df","title":"Obtain the Adjusted Kenward-Roger degrees of freedom — h_kr_df","text":"Obtains adjusted Kenward-Roger degrees freedom F statistic scale parameter. Used h_df_md_kr() h_df_1d_kr.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_kr_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain the Adjusted Kenward-Roger degrees of freedom — h_kr_df","text":"","code":"h_kr_df(v0, l, w, p)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_kr_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain the Adjusted Kenward-Roger degrees of freedom — h_kr_df","text":"v0 (matrix) unadjusted covariance matrix. l (matrix) linear combination matrix. w (matrix) hessian matrix. p (matrix) P matrix h_get_kr_comp().","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_kr_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain the Adjusted Kenward-Roger degrees of freedom — h_kr_df","text":"Named list elements: m: numeric degrees freedom. lambda: numeric F statistic scale parameter.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_md_denom_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculating Denominator Degrees of Freedom for the Multi-Dimensional Case — h_md_denom_df","title":"Calculating Denominator Degrees of Freedom for the Multi-Dimensional Case — h_md_denom_df","text":"Calculates degrees freedom multi-dimensional contrast.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_md_denom_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculating Denominator Degrees of Freedom for the Multi-Dimensional Case — h_md_denom_df","text":"","code":"h_md_denom_df(t_stat_df)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_md_denom_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculating Denominator Degrees of Freedom for the Multi-Dimensional Case — h_md_denom_df","text":"t_stat_df (numeric)n t-statistic derived degrees freedom.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_md_denom_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculating Denominator Degrees of Freedom for the Multi-Dimensional Case — h_md_denom_df","text":"Usually calculation returning 2 * E / (E - n) E sum t / (t - 2) t_stat_df values t.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_md_denom_df.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculating Denominator Degrees of Freedom for the Multi-Dimensional Case — h_md_denom_df","text":"input values two similar just average returned. inputs larger 2 2 returned.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_mmrm_tmb_assert_start.html","id":null,"dir":"Reference","previous_headings":"","what":"Asserting Sane Start Values for TMB Fit — h_mmrm_tmb_assert_start","title":"Asserting Sane Start Values for TMB Fit — h_mmrm_tmb_assert_start","text":"Asserting Sane Start Values TMB Fit","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_mmrm_tmb_assert_start.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Asserting Sane Start Values for TMB Fit — h_mmrm_tmb_assert_start","text":"","code":"h_mmrm_tmb_assert_start(tmb_object)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_mmrm_tmb_assert_start.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Asserting Sane Start Values for TMB Fit — h_mmrm_tmb_assert_start","text":"tmb_object (list) created TMB::MakeADFun().","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_mmrm_tmb_assert_start.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Asserting Sane Start Values for TMB Fit — h_mmrm_tmb_assert_start","text":"Nothing, used assertions.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_mmrm_tmb_check_conv.html","id":null,"dir":"Reference","previous_headings":"","what":"Checking the TMB Optimization Result — h_mmrm_tmb_check_conv","title":"Checking the TMB Optimization Result — h_mmrm_tmb_check_conv","text":"Checking TMB Optimization Result","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_mmrm_tmb_check_conv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checking the TMB Optimization Result — h_mmrm_tmb_check_conv","text":"","code":"h_mmrm_tmb_check_conv(tmb_opt, mmrm_tmb)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_mmrm_tmb_check_conv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checking the TMB Optimization Result — h_mmrm_tmb_check_conv","text":"tmb_opt (list) optimization result. mmrm_tmb (mmrm_tmb) result h_mmrm_tmb_fit().","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_mmrm_tmb_check_conv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checking the TMB Optimization Result — h_mmrm_tmb_check_conv","text":"Nothing, used generate warnings case model converge.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_mmrm_tmb_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Data for TMB Fit — h_mmrm_tmb_data","title":"Data for TMB Fit — h_mmrm_tmb_data","text":"Data TMB Fit","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_mmrm_tmb_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data for TMB Fit — h_mmrm_tmb_data","text":"","code":"h_mmrm_tmb_data(   formula_parts,   data,   weights,   reml,   singular = c(\"drop\", \"error\", \"keep\"),   drop_visit_levels,   allow_na_response = FALSE,   drop_levels = TRUE )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_mmrm_tmb_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data for TMB Fit — h_mmrm_tmb_data","text":"formula_parts (mmrm_tmb_formula_parts) list formula parts h_mmrm_tmb_formula_parts(). data (data.frame) contains variables used formula_parts. weights (vector) weights used fitting process. reml (flag) whether restricted maximum likelihood (REML) estimation used, otherwise maximum likelihood (ML) used. singular (string) choices method deal rank-deficient matrices. \"error\" stop function return error, \"drop\" drop columns, \"keep\" keep columns. drop_visit_levels (flag) whether drop levels visit variable, visit variable factor. allow_na_response (flag) whether NA response allowed. drop_levels (flag) whether drop levels covariates. dropped lead singular matrix.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_mmrm_tmb_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data for TMB Fit — h_mmrm_tmb_data","text":"List class mmrm_tmb_data elements: full_frame: data.frame n rows containing variables needed model. data: data.frame input dataset. x_matrix: matrix n rows p columns specifying overall design matrix. x_cols_aliased: logical potentially p elements indicating columns original design matrix left obtain full rank x_matrix. y_vector: length n numeric specifying overall response vector. weights_vector: length n numeric specifying weights vector. n_visits: int number visits, dimension covariance matrix. n_subjects: int number subjects. subject_zero_inds: length n_subjects integer containing zero-based start indices subject. subject_n_visits: length n_subjects integer containing number observed visits subjects. sum vector equals n. cov_type: string value specifying covariance type. is_spatial_int: int specifying whether covariance structure spatial(1) (0). reml: int specifying whether REML estimation used (1), otherwise ML (0). subject_groups: factor specifying grouping subject. n_groups: int number total groups","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_mmrm_tmb_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data for TMB Fit — h_mmrm_tmb_data","text":"Note subject_var must factor can also character. character, converted factor internally. levels unique values, sorted alphabetically numerically common string prefix numbers character elements. full control order please use factor.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_mmrm_tmb_extract_cov.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract covariance matrix from TMB report and input data — h_mmrm_tmb_extract_cov","title":"Extract covariance matrix from TMB report and input data — h_mmrm_tmb_extract_cov","text":"helper simple post-processing extract covariance matrix named list covariance matrices fitting using grouped covariance matrices.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_mmrm_tmb_extract_cov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract covariance matrix from TMB report and input data — h_mmrm_tmb_extract_cov","text":"","code":"h_mmrm_tmb_extract_cov(tmb_report, tmb_data, visit_var, is_spatial)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_mmrm_tmb_extract_cov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract covariance matrix from TMB report and input data — h_mmrm_tmb_extract_cov","text":"tmb_report (list) report created TMB::MakeADFun() report function. tmb_data (mmrm_tmb_data) produced h_mmrm_tmb_data(). visit_var (character) character vector visit variable is_spatial (flag) indicator whether covariance structure spatial.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_mmrm_tmb_extract_cov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract covariance matrix from TMB report and input data — h_mmrm_tmb_extract_cov","text":"Return simple covariance matrix grouping, named list estimated grouped covariance matrices, name equal group levels.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_mmrm_tmb_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Build TMB Fit Result List — h_mmrm_tmb_fit","title":"Build TMB Fit Result List — h_mmrm_tmb_fit","text":"helper simple post-processing TMB object optimization results, including setting names, inverting matrices etc.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_mmrm_tmb_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build TMB Fit Result List — h_mmrm_tmb_fit","text":"","code":"h_mmrm_tmb_fit(tmb_object, tmb_opt, formula_parts, tmb_data)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_mmrm_tmb_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build TMB Fit Result List — h_mmrm_tmb_fit","text":"tmb_object (list) created TMB::MakeADFun(). tmb_opt (list) optimization result. formula_parts (mmrm_tmb_formula_parts) produced h_mmrm_tmb_formula_parts(). tmb_data (mmrm_tmb_data) produced h_mmrm_tmb_data().","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_mmrm_tmb_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build TMB Fit Result List — h_mmrm_tmb_fit","text":"List class mmrm_tmb : cov: estimated covariance matrix, named list estimated group specific covariance matrices. beta_est: vector coefficient estimates. beta_vcov: Variance-covariance matrix coefficient estimates. beta_vcov_inv_L: Lower triangular matrix L inverse variance-covariance matrix decomposition. beta_vcov_inv_D: vector diagonal matrix D inverse variance-covariance matrix decomposition. theta_est: vector variance parameter estimates. theta_vcov: variance-covariance matrix variance parameter estimates. neg_log_lik: obtained negative log-likelihood. formula_parts: input. data: input. weights: input. reml: input flag. opt_details: list optimization details including convergence code. tmb_object: original TMB object created TMB::MakeADFun(). tmb_data: input.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_mmrm_tmb_fit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build TMB Fit Result List — h_mmrm_tmb_fit","text":"Instead inverting decomposing beta_vcov, can efficient use robust Cholesky decomposition LDL^T, therefore return corresponding two components L D well since available C++ side already.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_mmrm_tmb_formula_parts.html","id":null,"dir":"Reference","previous_headings":"","what":"Processing the Formula for TMB Fit — h_mmrm_tmb_formula_parts","title":"Processing the Formula for TMB Fit — h_mmrm_tmb_formula_parts","text":"Processing Formula TMB Fit","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_mmrm_tmb_formula_parts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Processing the Formula for TMB Fit — h_mmrm_tmb_formula_parts","text":"","code":"h_mmrm_tmb_formula_parts(   formula,   covariance = as.cov_struct(formula, warn_partial = FALSE) )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_mmrm_tmb_formula_parts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Processing the Formula for TMB Fit — h_mmrm_tmb_formula_parts","text":"formula (formula) Original formula. covariance (cov_struct) covariance structure additional formula parts added.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_mmrm_tmb_formula_parts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Processing the Formula for TMB Fit — h_mmrm_tmb_formula_parts","text":"List class mmrm_tmb_formula_parts elements: formula: original input. model_formula: formula covariance term removed. model_formula: formula covariance term removed. full_formula: model_formula includes covariance structure's subject, visit (optionally) group variables. cov_type: string covariance term type (e.g. \"us\"). is_spatial: flag indicator whether covariance structure spatial visit_var: character visit variable name. subject_var: string subject variable name. group_var: string group variable name. group specified, element NULL.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_mmrm_tmb_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Start Parameters for TMB Fit — h_mmrm_tmb_parameters","title":"Start Parameters for TMB Fit — h_mmrm_tmb_parameters","text":"Start Parameters TMB Fit","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_mmrm_tmb_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start Parameters for TMB Fit — h_mmrm_tmb_parameters","text":"","code":"h_mmrm_tmb_parameters(formula_parts, tmb_data, start, n_groups = 1L)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_mmrm_tmb_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start Parameters for TMB Fit — h_mmrm_tmb_parameters","text":"formula_parts (mmrm_tmb_formula_parts) produced h_mmrm_tmb_formula_parts(). tmb_data (mmrm_tmb_data) produced h_mmrm_tmb_data(). start (numeric NULL) optional start values variance parameters. n_groups (int) number groups.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_mmrm_tmb_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start Parameters for TMB Fit — h_mmrm_tmb_parameters","text":"List element theta containing start values variance parameters.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_newdata_add_pred.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Prediction Results to New Data — h_newdata_add_pred","title":"Add Prediction Results to New Data — h_newdata_add_pred","text":"used augment.mmrm().","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_newdata_add_pred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Prediction Results to New Data — h_newdata_add_pred","text":"","code":"h_newdata_add_pred(x, newdata, se_fit, interval, ...)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_newdata_add_pred.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Prediction Results to New Data — h_newdata_add_pred","text":"x (mmrm) fit. newdata (data.frame) data predict. se_fit (flag) whether return standard error prediction, can used interval \"none\". interval (string) type interval. ... passed predict.mmrm_tmb().","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_newdata_add_pred.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Prediction Results to New Data — h_newdata_add_pred","text":"newdata tibble additional columns .fitted, .lower, .upper (interval none) .se.fit (se_fit requested).","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_optimizer_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain Optimizer Function with Character — h_optimizer_fun","title":"Obtain Optimizer Function with Character — h_optimizer_fun","text":"Obtain optimizer function character provided.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_optimizer_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain Optimizer Function with Character — h_optimizer_fun","text":"","code":"h_optimizer_fun(optimizer = c(\"L-BFGS-B\", \"BFGS\", \"CG\", \"nlminb\"))"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_optimizer_fun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain Optimizer Function with Character — h_optimizer_fun","text":"optimizer (character) vector optimizers.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_optimizer_fun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain Optimizer Function with Character — h_optimizer_fun","text":"(list) optimizer functions generated h_partial_fun_args().","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_partial_fun_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Partial Functions — h_partial_fun_args","title":"Create Partial Functions — h_partial_fun_args","text":"Creates partial functions arguments.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_partial_fun_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Partial Functions — h_partial_fun_args","text":"","code":"h_partial_fun_args(fun, ..., additional_attr = list())"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_partial_fun_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Partial Functions — h_partial_fun_args","text":"fun (function) wrapped. ... Additional arguments fun. additional_attr (list) additional attributes apply result.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_partial_fun_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Partial Functions — h_partial_fun_args","text":"Object S3 class \"partial\", function args attribute (possibly attributes additional_attr).","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_partial_fun_args.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Partial Functions — h_partial_fun_args","text":"function add args attribute original function, add extra class partial function. args argument function, elements ... override existing arguments attribute args. additional_attr override existing attributes.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_print_aic_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing AIC and other Model Fit Criteria — h_print_aic_list","title":"Printing AIC and other Model Fit Criteria — h_print_aic_list","text":"used print.summary.mmrm().","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_print_aic_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing AIC and other Model Fit Criteria — h_print_aic_list","text":"","code":"h_print_aic_list(aic_list, digits = 1)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_print_aic_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printing AIC and other Model Fit Criteria — h_print_aic_list","text":"aic_list (list) list part summary.mmrm(). digits (number) number decimal places used round().","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_print_call.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing MMRM Function Call — h_print_call","title":"Printing MMRM Function Call — h_print_call","text":"used print.summary.mmrm().","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_print_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing MMRM Function Call — h_print_call","text":"","code":"h_print_call(call, n_obs, n_subjects, n_timepoints)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_print_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printing MMRM Function Call — h_print_call","text":"call (call) original mmrm() function call. n_obs (int) number observations. n_subjects (int) number subjects. n_timepoints (int) number timepoints.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_print_cov.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing MMRM Covariance Type — h_print_cov","title":"Printing MMRM Covariance Type — h_print_cov","text":"used print.summary.mmrm().","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_print_cov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing MMRM Covariance Type — h_print_cov","text":"","code":"h_print_cov(cov_type, n_theta, n_groups)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_print_cov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printing MMRM Covariance Type — h_print_cov","text":"cov_type (string) covariance structure abbreviation. n_theta (count) number variance parameters. n_groups (count) number groups.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_quad_form.html","id":null,"dir":"Reference","previous_headings":"","what":"Quadratic Form Calculations — h_quad_form","title":"Quadratic Form Calculations — h_quad_form","text":"helpers mainly easier readability slightly better efficiency quadratic forms used Satterthwaite calculations.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_quad_form.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quadratic Form Calculations — h_quad_form","text":"","code":"h_quad_form_vec(vec, center)  h_quad_form_mat(mat, center)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_quad_form.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quadratic Form Calculations — h_quad_form","text":"vec (numeric) interpreted row vector. center (matrix) square numeric matrix dimensions x center quadratic form. mat (matrix) numeric matrix multiplied left right center, therefore needs many columns rows columns center.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_quad_form.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Quadratic Form Calculations — h_quad_form","text":"h_quad_form_vec(): calculates number vec %*% center %*% t(vec) numeric (matrix). h_quad_form_mat(): calculates quadratic form mat %*% center %*% t(mat) matrix, result square dimensions identical number rows mat.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_reconcile_cov_struct.html","id":null,"dir":"Reference","previous_headings":"","what":"Reconcile Possible Covariance Structure Inputs — h_reconcile_cov_struct","title":"Reconcile Possible Covariance Structure Inputs — h_reconcile_cov_struct","text":"Reconcile Possible Covariance Structure Inputs","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_reconcile_cov_struct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reconcile Possible Covariance Structure Inputs — h_reconcile_cov_struct","text":"","code":"h_reconcile_cov_struct(formula = NULL, covariance = NULL)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_reconcile_cov_struct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reconcile Possible Covariance Structure Inputs — h_reconcile_cov_struct","text":"formula (formula) model formula, see details. covariance (cov_struct) covariance structure type definition produced cov_struct(), value can coerced covariance structure using .cov_struct(). value provided, structure derived provided formula.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_reconcile_cov_struct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reconcile Possible Covariance Structure Inputs — h_reconcile_cov_struct","text":"value covariance provided covariance structure derived provided formula otherwise. error raised provided.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_record_all_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Capture all Output — h_record_all_output","title":"Capture all Output — h_record_all_output","text":"function silences warnings, errors & messages instead returns list containing results (error), well warnings, errors messages divergence signals character vectors.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_record_all_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Capture all Output — h_record_all_output","text":"","code":"h_record_all_output(expr, remove = list(), divergence = list())"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_record_all_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Capture all Output — h_record_all_output","text":"expr (expression) executed. remove (list) optional list elements warnings, errors, messages can character vectors, removed results specified. divergence (list) optional list similar remove, character vectors moved divergence result signal fit converge.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_record_all_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Capture all Output — h_record_all_output","text":"list containing result: object returned expr list() error thrown. warnings: NULL character vector warnings thrown. errors: NULL string error thrown. messages: NULL character vector messages produced. divergence: NULL character vector divergence messages caught.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_residuals_normalized.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate normalized residuals — h_residuals_normalized","title":"Calculate normalized residuals — h_residuals_normalized","text":"used residuals.mmrm_tmb() calculate normalized / scaled residuals.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_residuals_normalized.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate normalized residuals — h_residuals_normalized","text":"","code":"h_residuals_normalized(object)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_residuals_normalized.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate normalized residuals — h_residuals_normalized","text":"object (mmrm_tmb) fitted MMRM.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_residuals_normalized.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate normalized residuals — h_residuals_normalized","text":"Vector residuals","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_residuals_pearson.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Pearson Residuals — h_residuals_pearson","title":"Calculate Pearson Residuals — h_residuals_pearson","text":"used residuals.mmrm_tmb() calculate Pearson residuals.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_residuals_pearson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Pearson Residuals — h_residuals_pearson","text":"","code":"h_residuals_pearson(object)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_residuals_pearson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Pearson Residuals — h_residuals_pearson","text":"object (mmrm_tmb) fitted MMRM.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_residuals_pearson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Pearson Residuals — h_residuals_pearson","text":"Vector residuals.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_residuals_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate response residuals. — h_residuals_response","title":"Calculate response residuals. — h_residuals_response","text":"used residuals.mmrm_tmb() calculate response residuals.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_residuals_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate response residuals. — h_residuals_response","text":"","code":"h_residuals_response(object)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_residuals_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate response residuals. — h_residuals_response","text":"object (mmrm_tmb) fitted MMRM.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_residuals_response.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate response residuals. — h_residuals_response","text":"Vector residuals","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_split_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Split Control List — h_split_control","title":"Split Control List — h_split_control","text":"Split mmrm_control() object according optimizers use additional arguments replace elements original object.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_split_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split Control List — h_split_control","text":"","code":"h_split_control(control, ...)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_split_control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split Control List — h_split_control","text":"control (mmrm_control) object. ... additional parameters update control object.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_split_control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split Control List — h_split_control","text":"list mmrm_control entries.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_summarize_all_fits.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizing List of Fits — h_summarize_all_fits","title":"Summarizing List of Fits — h_summarize_all_fits","text":"Summarizing List Fits","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_summarize_all_fits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizing List of Fits — h_summarize_all_fits","text":"","code":"h_summarize_all_fits(all_fits)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_summarize_all_fits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizing List of Fits — h_summarize_all_fits","text":"all_fits (list mmrm_fit try-error) list fits.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_summarize_all_fits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarizing List of Fits — h_summarize_all_fits","text":"List warnings, messages, log_liks converged results.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_tbl_confint_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract tibble with Confidence Intervals and Term Names — h_tbl_confint_terms","title":"Extract tibble with Confidence Intervals and Term Names — h_tbl_confint_terms","text":"used tidy.mmrm().","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_tbl_confint_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract tibble with Confidence Intervals and Term Names — h_tbl_confint_terms","text":"","code":"h_tbl_confint_terms(x, ...)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_tbl_confint_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract tibble with Confidence Intervals and Term Names — h_tbl_confint_terms","text":"x (mmrm) fit object. ... passed stats::confint(), hence used moment.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_tbl_confint_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract tibble with Confidence Intervals and Term Names — h_tbl_confint_terms","text":"tibble term, conf.low, conf.high columns.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_test_1d.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating T-Statistic Test Results For One-Dimensional Contrast — h_test_1d","title":"Creating T-Statistic Test Results For One-Dimensional Contrast — h_test_1d","text":"Creates list results one-dimensional contrasts using t-test statistic given degrees freedom.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_test_1d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating T-Statistic Test Results For One-Dimensional Contrast — h_test_1d","text":"","code":"h_test_1d(object, contrast, df)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_test_1d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating T-Statistic Test Results For One-Dimensional Contrast — h_test_1d","text":"object (mmrm) MMRM fit. contrast (numeric) contrast vector. Note include elements singular coefficient estimates, .e. refer actually estimated coefficients. df (number) degrees freedom one-dimensional contrast.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_test_1d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creating T-Statistic Test Results For One-Dimensional Contrast — h_test_1d","text":"List est, se, df, t_stat p_val (2-sided p-value).","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_test_md.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating F-Statistic Test Results For Multi-Dimensional Contrast — h_test_md","title":"Creating F-Statistic Test Results For Multi-Dimensional Contrast — h_test_md","text":"Creates list results multi-dimensional contrasts using F-test statistic given degrees freedom.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_test_md.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating F-Statistic Test Results For Multi-Dimensional Contrast — h_test_md","text":"","code":"h_test_md(object, contrast, df, f_stat_factor = 1)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_test_md.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating F-Statistic Test Results For Multi-Dimensional Contrast — h_test_md","text":"object (mmrm) MMRM fit. contrast (matrix) numeric contrast matrix. df (number) denominator degrees freedom multi-dimensional contrast. f_stat_factor (number) optional scaling factor top standard F-statistic.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_test_md.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creating F-Statistic Test Results For Multi-Dimensional Contrast — h_test_md","text":"List num_df, denom_df, f_stat p_val (2-sided p-value).","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_tr.html","id":null,"dir":"Reference","previous_headings":"","what":"Trace of a Matrix — h_tr","title":"Trace of a Matrix — h_tr","text":"Obtain trace matrix matrix diagonal, otherwise raise error.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_tr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trace of a Matrix — h_tr","text":"","code":"h_tr(x)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_tr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trace of a Matrix — h_tr","text":"x (matrix) square matrix input.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_tr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trace of a Matrix — h_tr","text":"trace square matrix.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_valid_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate mmrm Formula — h_valid_formula","title":"Validate mmrm Formula — h_valid_formula","text":"Validate mmrm Formula","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_valid_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate mmrm Formula — h_valid_formula","text":"","code":"h_valid_formula(formula)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_valid_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate mmrm Formula — h_valid_formula","text":"formula (formula) check.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_valid_formula.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate mmrm Formula — h_valid_formula","text":"mmrm models, . allowed introduces ambiguity covariates used, allowed formula.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_var_adj.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain the Adjusted Covariance Matrix — h_var_adj","title":"Obtain the Adjusted Covariance Matrix — h_var_adj","text":"Obtains Kenward-Roger adjusted covariance matrix coefficient estimates. Used mmrm() fitting method \"Kenward-Roger\" \"Kenward-Roger-Linear\".","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_var_adj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain the Adjusted Covariance Matrix — h_var_adj","text":"","code":"h_var_adj(v, w, p, q, r, linear = FALSE)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_var_adj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain the Adjusted Covariance Matrix — h_var_adj","text":"v (matrix) unadjusted covariance matrix. w (matrix) hessian matrix. p (matrix) P matrix h_get_kr_comp(). q (matrix) Q matrix h_get_kr_comp(). r (matrix) R matrix h_get_kr_comp(). linear (flag) whether use linear Kenward-Roger approximation.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_var_adj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain the Adjusted Covariance Matrix — h_var_adj","text":"matrix adjusted covariance matrix.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_warn_na_action.html","id":null,"dir":"Reference","previous_headings":"","what":"Warn on na.action — h_warn_na_action","title":"Warn on na.action — h_warn_na_action","text":"Warn na.action","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_warn_na_action.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Warn on na.action — h_warn_na_action","text":"","code":"h_warn_na_action()"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_within_or_between.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine Within or Between for each Design Matrix Column — h_within_or_between","title":"Determine Within or Between for each Design Matrix Column — h_within_or_between","text":"Used h_df_bw_calc() determine whether variable differs subjects also within subjects.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_within_or_between.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine Within or Between for each Design Matrix Column — h_within_or_between","text":"","code":"h_within_or_between(x_matrix, subject_ids)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_within_or_between.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine Within or Between for each Design Matrix Column — h_within_or_between","text":"x_matrix (matrix) design matrix column names. subject_ids (factor) subject IDs.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/h_within_or_between.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine Within or Between for each Design Matrix Column — h_within_or_between","text":"Character vector \"intercept\", \"within\" \"\" design matrix column identified via names vector.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/is_infix.html","id":null,"dir":"Reference","previous_headings":"","what":"Test Whether a Symbol is an Infix Operator — is_infix","title":"Test Whether a Symbol is an Infix Operator — is_infix","text":"Test Whether Symbol Infix Operator","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/is_infix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test Whether a Symbol is an Infix Operator — is_infix","text":"","code":"is_infix(name)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/is_infix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test Whether a Symbol is an Infix Operator — is_infix","text":"name (symbol name string) possible reference infix operator check.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/is_infix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test Whether a Symbol is an Infix Operator — is_infix","text":"logical indicating whether name name infix operator.","code":"is_infix(as.name(\"|\")) is_infix(\"|\") is_infix(\"c\")"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mmrm Package — mmrm-package","title":"mmrm Package — mmrm-package","text":"mmrm implements mixed models repeated measures (MMRM) R.","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mmrm Package — mmrm-package","text":"Maintainer: Daniel Sabanes Bove daniel.sabanes_bove@roche.com Authors: Julia Dedic julia.dedic@roche.com Doug Kelkhoff doug.kelkhoff@roche.com Kevin Kunzmann kevin.kunzmann@boehringer-ingelheim.com Brian Matthew Lang brian.lang@msd.com Liming Li liming.li@roche.com Christian Stock christian.stock@boehringer-ingelheim.com Ya Wang ya.wang10@gilead.com Dan James dan.james@astrazeneca.com Jonathan Sidi yoni@pinpointstrategies.io Daniel Leibovitz daniel.leibovitz@roche.com Daniel D. Sjoberg sjobergd@gene.com (ORCID) contributors: Craig Gower-Page craig.gower-page@roche.com [contributor] Boehringer Ingelheim Ltd. [copyright holder, funder] Gilead Sciences, Inc. [copyright holder, funder] F. Hoffmann-La Roche AG [copyright holder, funder] Merck Sharp & Dohme, Inc. [copyright holder, funder] AstraZeneca plc [copyright holder, funder]","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit an MMRM — mmrm","title":"Fit an MMRM — mmrm","text":"main function fitting MMRM.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit an MMRM — mmrm","text":"","code":"mmrm(   formula,   data,   weights = NULL,   covariance = NULL,   reml = TRUE,   control = mmrm_control(...),   ... )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit an MMRM — mmrm","text":"formula (formula) model formula, see details. data (data) data used model. weights (vector) optional vector weights used fitting process. NULL numeric vector. covariance (cov_struct) covariance structure type definition produced cov_struct(), value can coerced covariance structure using .cov_struct(). value provided, structure derived provided formula. reml (flag) whether restricted maximum likelihood (REML) estimation used, otherwise maximum likelihood (ML) used. control (mmrm_control) fine-grained fitting specifications list created mmrm_control(). ... arguments passed mmrm_control().","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit an MMRM — mmrm","text":"mmrm object.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit an MMRM — mmrm","text":"formula typically looks like: FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID) specifies response covariates usual, exactly one special term defines covariance structure used time point subject variables. covariance structures formula can found covariance_types. time points unique subject. , time points multiple observations subject. rationale observations need correlated, possible within currently implemented covariance structure framework correctly. Moreover, non-spatial covariance structures, time variable must factor variable. optimizer set, first default optimizer (L-BFGS-B) used fit model. converges, returned. , available optimizers h_get_optimizers(), including BFGS, CG nlminb tried (parallel n_cores set Windows). none optimizers converge, function fails. Otherwise best fit returned. Note fine-grained control specifications can either passed directly mmrm function, via control argument bundling together mmrm_control() function. used together, since delete arguments passed via mmrm.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Fit an MMRM — mmrm","text":"mmrm object also mmrm_fit mmrm_tmb object, therefore corresponding methods also work (see mmrm_tmb_methods). Additional contents depend choice adjustment method: Satterthwaite adjustment used, Jacobian information jac_list included. Kenward-Roger adjustment used, kr_comp contains necessary components beta_vcov_adj includes adjusted coefficients covariance matrix. Use package emmeans supported, see emmeans_support. NA values always omitted regardless na.action setting. number visit levels large, usually requires large memory create covariance matrix. default, maximum allowed visit levels 100, visit levels, confirmation needed run interactively. can use options(mmrm.max_visits = <target>) increase maximum allowed number visit levels. non-interactive sessions confirmation raised directly give error number visit levels exceeds maximum.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit an MMRM — mmrm","text":"","code":"fit <- mmrm(   formula = FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data )  # Direct specification of control details: fit <- mmrm(   formula = FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data,   weights = fev_data$WEIGHTS,   method = \"Kenward-Roger\" )  # Alternative specification via control argument (but you cannot mix the # two approaches): fit <- mmrm(   formula = FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data,   control = mmrm_control(method = \"Kenward-Roger\") )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Control Parameters for Fitting an MMRM — mmrm_control","title":"Control Parameters for Fitting an MMRM — mmrm_control","text":"Fine-grained specification MMRM fit details possible using control function.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Control Parameters for Fitting an MMRM — mmrm_control","text":"","code":"mmrm_control(   n_cores = 1L,   method = c(\"Satterthwaite\", \"Kenward-Roger\", \"Residual\", \"Between-Within\"),   vcov = NULL,   start = NULL,   accept_singular = TRUE,   drop_visit_levels = TRUE,   ...,   optimizers = h_get_optimizers(...) )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm_control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Control Parameters for Fitting an MMRM — mmrm_control","text":"n_cores (count) number cores used. method (string) adjustment method degrees freedom. vcov (string) coefficients covariance matrix adjustment method. start (numeric NULL) optional start values variance parameters. accept_singular (flag) whether singular design matrices reduced full rank automatically additional coefficient estimates missing. drop_visit_levels (flag) whether drop levels visit variable, visit variable factor, see details. ... additional arguments passed h_get_optimizers(). optimizers (list) optimizer specification, created h_get_optimizers().","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm_control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Control Parameters for Fitting an MMRM — mmrm_control","text":"List class mmrm_control control parameters.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm_control.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Control Parameters for Fitting an MMRM — mmrm_control","text":"example, data observations visits VIS1, VIS3 VIS4, default treated equally spaced, distance VIS1 VIS3, VIS3 VIS4, identical. However, can manually convert visit factor, levels = c(\"VIS1\", \"VIS2\", \"VIS3\", \"VIS4\"), also use drop_visits_levels = FALSE, distance VIS1 VIS3 double, VIS2 valid visit. However, please cautious can lead convergence failure using unstructured covariance matrix observations missing visits. method vcov arguments specify degrees freedom coefficients covariance matrix adjustment methods, respectively. Allowed vcov includes: \"Asymptotic\", \"Kenward-Roger\", \"Kenward-Roger-Linear\", \"Empirical\" (CR0), \"Empirical-Jackknife\" (CR3), \"Empirical-Bias-Reduced\" (CR2). Allowed method includes: \"Satterthwaite\", \"Kenward-Roger\", \"-Within\" \"Residual\". method \"Kenward-Roger\" \"Kenward-Roger\" \"Kenward-Roger-Linear\" allowed vcov. vcov argument can NULL use default covariance method depending method used degrees freedom, see following table: Please note \"Kenward-Roger\" \"Unstructured\" covariance gives different results compared SAS; Use \"Kenward-Roger-Linear\" vcov instead better matching SAS results.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm_control.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Control Parameters for Fitting an MMRM — mmrm_control","text":"","code":"mmrm_control(   optimizer_fun = stats::optim,   optimizer_args = list(method = \"L-BFGS-B\") ) #> $optimizers #> $optimizers$custom_optimizer #> function (par, fn, gr = NULL, ..., method = c(\"Nelder-Mead\",  #>     \"BFGS\", \"CG\", \"L-BFGS-B\", \"SANN\", \"Brent\"), lower = -Inf,  #>     upper = Inf, control = list(), hessian = FALSE)  #> { #>     fn1 <- function(par) fn(par, ...) #>     gr1 <- if (!is.null(gr))  #>         function(par) gr(par, ...) #>     method <- match.arg(method) #>     if ((any(lower > -Inf) || any(upper < Inf)) && !any(method ==  #>         c(\"L-BFGS-B\", \"Brent\"))) { #>         warning(\"bounds can only be used with method L-BFGS-B (or Brent)\") #>         method <- \"L-BFGS-B\" #>     } #>     npar <- length(par) #>     con <- list(trace = 0, fnscale = 1, parscale = rep.int(1,  #>         npar), ndeps = rep.int(0.001, npar), maxit = 100L, abstol = -Inf,  #>         reltol = sqrt(.Machine$double.eps), alpha = 1, beta = 0.5,  #>         gamma = 2, REPORT = 10, warn.1d.NelderMead = TRUE, type = 1,  #>         lmm = 5, factr = 1e+07, pgtol = 0, tmax = 10, temp = 10) #>     nmsC <- names(con) #>     if (method == \"Nelder-Mead\")  #>         con$maxit <- 500 #>     if (method == \"SANN\") { #>         con$maxit <- 10000 #>         con$REPORT <- 100 #>     } #>     con[(namc <- names(control))] <- control #>     if (length(noNms <- namc[!namc %in% nmsC]))  #>         warning(\"unknown names in control: \", paste(noNms, collapse = \", \")) #>     if (con$trace < 0)  #>         warning(\"read the documentation for 'trace' more carefully\") #>     else if (method == \"SANN\" && con$trace && as.integer(con$REPORT) ==  #>         0)  #>         stop(\"'trace != 0' needs 'REPORT >= 1'\") #>     if (method == \"L-BFGS-B\" && any(!is.na(match(c(\"reltol\",  #>         \"abstol\"), namc))))  #>         warning(\"method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol'\") #>     if (npar == 1 && method == \"Nelder-Mead\" && isTRUE(con$warn.1d.NelderMead))  #>         warning(\"one-dimensional optimization by Nelder-Mead is unreliable:\\nuse \\\"Brent\\\" or optimize() directly\") #>     if (npar > 1 && method == \"Brent\")  #>         stop(\"method = \\\"Brent\\\" is only available for one-dimensional optimization\") #>     lower <- as.double(rep_len(lower, npar)) #>     upper <- as.double(rep_len(upper, npar)) #>     res <- if (method == \"Brent\") { #>         if (any(!is.finite(c(upper, lower))))  #>             stop(\"'lower' and 'upper' must be finite values\") #>         res <- optimize(function(par) fn(par, ...)/con$fnscale,  #>             lower = lower, upper = upper, tol = con$reltol) #>         names(res)[names(res) == c(\"minimum\", \"objective\")] <- c(\"par\",  #>             \"value\") #>         res$value <- res$value * con$fnscale #>         c(res, list(counts = c(`function` = NA, gradient = NA),  #>             convergence = 0L, message = NULL)) #>     } #>     else .External2(C_optim, par, fn1, gr1, method, con, lower,  #>         upper) #>     if (hessian)  #>         res$hessian <- .External2(C_optimhess, res$par, fn1,  #>             gr1, con) #>     res #> } #> <bytecode: 0x5583959826f8> #> <environment: namespace:stats> #> attr(,\"args\") #> attr(,\"args\")$control #> list() #>  #> attr(,\"args\")$method #> [1] \"L-BFGS-B\" #>  #> attr(,\"class\") #> [1] \"partial\"  \"function\" #>  #>  #> $start #> NULL #>  #> $accept_singular #> [1] TRUE #>  #> $method #> [1] \"Satterthwaite\" #>  #> $vcov #> [1] \"Asymptotic\" #>  #> $n_cores #> [1] 1 #>  #> $drop_visit_levels #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"mmrm_control\""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods for mmrm Objects — mmrm_methods","text":"","code":"# S3 method for mmrm summary(object, ...)  # S3 method for summary.mmrm print(   x,   digits = max(3, getOption(\"digits\") - 3),   signif.stars = getOption(\"show.signif.stars\"),   ... )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods for mmrm Objects — mmrm_methods","text":"object (mmrm) fitted MMRM including Jacobian call etc. ... used.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Methods for mmrm Objects — mmrm_methods","text":"Depends method, see Details Functions.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm_methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Methods for mmrm Objects — mmrm_methods","text":"printing summary (mmrm) object, following displayed: Formula. formula used model. Data. data used analysis, including number subjects, number valid observations. Covariance. covariance structure number variance parameters. Method. Restricted maximum likelihood(REML) maximum likelihood(ML). Model selection criteria. AIC, BIC, log likelihood deviance. Coefficients. Coefficients covariates. Covariance estimate. covariance estimate(group). covariance structure non-spatial, covariance matrix categorical time points available data displayed. covariance structure spatial, covariance matrix two time points unit distance displayed.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm_methods.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Methods for mmrm Objects — mmrm_methods","text":"summary(mmrm): summarizes MMRM fit results. print(summary.mmrm): prints MMRM fit summary.","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm_methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Methods for mmrm Objects — mmrm_methods","text":"","code":"formula <- FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID) object <- mmrm(formula, fev_data) # Summary: summary(object) #> mmrm fit #>  #> Formula:     FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID) #> Data:        fev_data (used 537 observations from 197 subjects with maximum 4  #> timepoints) #> Covariance:  unstructured (10 variance parameters) #> Method:      Satterthwaite #> Vcov Method: Asymptotic #> Inference:   REML #>  #> Model selection criteria: #>      AIC      BIC   logLik deviance  #>   3406.4   3439.3  -1693.2   3386.4  #>  #> Coefficients:  #>                                Estimate Std. Error        df t value Pr(>|t|) #> (Intercept)                    30.77748    0.88656 218.80000  34.715  < 2e-16 #> RACEBlack or African American   1.53050    0.62448 168.67000   2.451 0.015272 #> RACEWhite                       5.64357    0.66561 157.14000   8.479 1.56e-14 #> SEXFemale                       0.32606    0.53195 166.13000   0.613 0.540744 #> ARMCDTRT                        3.77423    1.07415 145.55000   3.514 0.000589 #> AVISITVIS2                      4.83959    0.80172 143.88000   6.037 1.27e-08 #> AVISITVIS3                     10.34211    0.82269 155.56000  12.571  < 2e-16 #> AVISITVIS4                     15.05390    1.31281 138.47000  11.467  < 2e-16 #> ARMCDTRT:AVISITVIS2            -0.04193    1.12932 138.56000  -0.037 0.970439 #> ARMCDTRT:AVISITVIS3            -0.69369    1.18765 158.17000  -0.584 0.559996 #> ARMCDTRT:AVISITVIS4             0.62423    1.85085 129.72000   0.337 0.736463 #>                                   #> (Intercept)                   *** #> RACEBlack or African American *   #> RACEWhite                     *** #> SEXFemale                         #> ARMCDTRT                      *** #> AVISITVIS2                    *** #> AVISITVIS3                    *** #> AVISITVIS4                    *** #> ARMCDTRT:AVISITVIS2               #> ARMCDTRT:AVISITVIS3               #> ARMCDTRT:AVISITVIS4               #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Covariance estimate: #>         VIS1    VIS2    VIS3    VIS4 #> VIS1 40.5537 14.3960  4.9747 13.3867 #> VIS2 14.3960 26.5715  2.7855  7.4745 #> VIS3  4.9747  2.7855 14.8979  0.9082 #> VIS4 13.3867  7.4745  0.9082 95.5568 #>"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm_tidiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidying Methods for mmrm Objects — mmrm_tidiers","title":"Tidying Methods for mmrm Objects — mmrm_tidiers","text":"methods tidy estimates mmrm object summary.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm_tidiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidying Methods for mmrm Objects — mmrm_tidiers","text":"","code":"# S3 method for mmrm tidy(x, conf.int = FALSE, conf.level = 0.95, ...)  # S3 method for mmrm glance(x, ...)  # S3 method for mmrm augment(   x,   newdata = NULL,   interval = c(\"none\", \"confidence\", \"prediction\"),   se_fit = (interval != \"none\"),   type.residuals = c(\"response\", \"pearson\", \"normalized\"),   ... )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm_tidiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidying Methods for mmrm Objects — mmrm_tidiers","text":"x (mmrm) fitted model. conf.int (flag) TRUE columns lower (conf.low) upper bounds (conf.high) coefficient estimates included. conf.level (number) defines range optional confidence internal. ... used augment() pass arguments predict.mmrm_tmb() method. newdata (data.frame NULL) optional new data frame. interval (string) type interval calculation. se_fit (flag) whether return standard errors fit. type.residuals (string) passed residuals.mmrm_tmb().","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm_tidiers.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Tidying Methods for mmrm Objects — mmrm_tidiers","text":"tidy(mmrm): derives tidy tibble mmrm object. glance(mmrm): derives glance tibble mmrm object. augment(mmrm): derives augment tibble mmrm object.","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm_tidiers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidying Methods for mmrm Objects — mmrm_tidiers","text":"","code":"fit <- mmrm(   formula = FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data ) # Applying tidy method to return summary table of covariate estimates. fit |> tidy() #> # A tibble: 11 × 6 #>    term                          estimate std.error    df statistic  p.value #>    <chr>                            <dbl>     <dbl> <dbl>     <dbl>    <dbl> #>  1 (Intercept)                    30.8        0.887  219.   34.7    5.96e-91 #>  2 RACEBlack or African American   1.53       0.624  169.    2.45   1.53e- 2 #>  3 RACEWhite                       5.64       0.666  157.    8.48   1.56e-14 #>  4 SEXFemale                       0.326      0.532  166.    0.613  5.41e- 1 #>  5 ARMCDTRT                        3.77       1.07   146.    3.51   5.89e- 4 #>  6 AVISITVIS2                      4.84       0.802  144.    6.04   1.27e- 8 #>  7 AVISITVIS3                     10.3        0.823  156.   12.6    1.86e-25 #>  8 AVISITVIS4                     15.1        1.31   138.   11.5    8.11e-22 #>  9 ARMCDTRT:AVISITVIS2            -0.0419     1.13   139.   -0.0371 9.70e- 1 #> 10 ARMCDTRT:AVISITVIS3            -0.694      1.19   158.   -0.584  5.60e- 1 #> 11 ARMCDTRT:AVISITVIS4             0.624      1.85   130.    0.337  7.36e- 1 fit |> tidy(conf.int = TRUE, conf.level = 0.9) #> # A tibble: 11 × 8 #>    term           estimate std.error    df statistic  p.value conf.low conf.high #>    <chr>             <dbl>     <dbl> <dbl>     <dbl>    <dbl>    <dbl>     <dbl> #>  1 (Intercept)     30.8        0.887  219.   34.7    5.96e-91   29.3       32.2  #>  2 ARMCDTRT         3.77       1.07   146.    3.51   5.89e- 4    2.01       5.54 #>  3 ARMCDTRT:AVIS…  -0.0419     1.13   139.   -0.0371 9.70e- 1   -1.90       1.82 #>  4 ARMCDTRT:AVIS…  -0.694      1.19   158.   -0.584  5.60e- 1   -2.65       1.26 #>  5 ARMCDTRT:AVIS…   0.624      1.85   130.    0.337  7.36e- 1   -2.42       3.67 #>  6 AVISITVIS2       4.84       0.802  144.    6.04   1.27e- 8    3.52       6.16 #>  7 AVISITVIS3      10.3        0.823  156.   12.6    1.86e-25    8.99      11.7  #>  8 AVISITVIS4      15.1        1.31   138.   11.5    8.11e-22   12.9       17.2  #>  9 RACEBlack or …   1.53       0.624  169.    2.45   1.53e- 2    0.503      2.56 #> 10 RACEWhite        5.64       0.666  157.    8.48   1.56e-14    4.55       6.74 #> 11 SEXFemale        0.326      0.532  166.    0.613  5.41e- 1   -0.549      1.20 # Applying glance method to return summary table of goodness of fit statistics. fit |> glance() #> # A tibble: 1 × 4 #>     AIC   BIC logLik deviance #>   <dbl> <dbl>  <dbl>    <dbl> #> 1 3406. 3439. -1693.    3386. # Applying augment method to return merged `tibble` of model data, fitted and residuals. fit |> augment() #> # A tibble: 537 × 9 #>    .rownames  FEV1 RACE               SEX   ARMCD AVISIT USUBJID .fitted  .resid #>        <dbl> <dbl> <fct>              <fct> <fct> <fct>  <fct>     <dbl>   <dbl> #>  1         2  40.0 Black or African … Fema… TRT   VIS2   PT1        40.0  -1.23  #>  2         4  20.5 Black or African … Fema… TRT   VIS4   PT1        20.5 -31.6   #>  3         6  31.5 Asian              Male  PBO   VIS2   PT2        31.5  -4.16  #>  4         7  36.9 Asian              Male  PBO   VIS3   PT2        36.9  -4.24  #>  5         8  48.8 Asian              Male  PBO   VIS4   PT2        48.8   2.98  #>  6        10  36.0 Black or African … Fema… PBO   VIS2   PT3        36.0  -1.49  #>  7        12  37.2 Black or African … Fema… PBO   VIS4   PT3        37.2 -10.5   #>  8        13  33.9 Asian              Fema… TRT   VIS1   PT4        33.9  -0.985 #>  9        14  33.7 Asian              Fema… TRT   VIS2   PT4        33.7  -5.93  #> 10        16  54.5 Asian              Fema… TRT   VIS4   PT4        54.5   3.89  #> # ℹ 527 more rows fit |> augment(interval = \"confidence\") #> # A tibble: 537 × 12 #>    .rownames  FEV1 RACE         SEX   ARMCD AVISIT USUBJID .fitted .lower .upper #>        <dbl> <dbl> <fct>        <fct> <fct> <fct>  <fct>     <dbl>  <dbl>  <dbl> #>  1         2  40.0 Black or Af… Fema… TRT   VIS2   PT1        40.0   40.0   40.0 #>  2         4  20.5 Black or Af… Fema… TRT   VIS4   PT1        20.5   20.5   20.5 #>  3         6  31.5 Asian        Male  PBO   VIS2   PT2        31.5   31.5   31.5 #>  4         7  36.9 Asian        Male  PBO   VIS3   PT2        36.9   36.9   36.9 #>  5         8  48.8 Asian        Male  PBO   VIS4   PT2        48.8   48.8   48.8 #>  6        10  36.0 Black or Af… Fema… PBO   VIS2   PT3        36.0   36.0   36.0 #>  7        12  37.2 Black or Af… Fema… PBO   VIS4   PT3        37.2   37.2   37.2 #>  8        13  33.9 Asian        Fema… TRT   VIS1   PT4        33.9   33.9   33.9 #>  9        14  33.7 Asian        Fema… TRT   VIS2   PT4        33.7   33.7   33.7 #> 10        16  54.5 Asian        Fema… TRT   VIS4   PT4        54.5   54.5   54.5 #> # ℹ 527 more rows #> # ℹ 2 more variables: .se.fit <dbl>, .resid <dbl> fit |> augment(type.residuals = \"pearson\") #> # A tibble: 537 × 9 #>    .rownames  FEV1 RACE                SEX   ARMCD AVISIT USUBJID .fitted .resid #>        <dbl> <dbl> <fct>               <fct> <fct> <fct>  <fct>     <dbl>  <dbl> #>  1         2  40.0 Black or African A… Fema… TRT   VIS2   PT1        40.0 -0.240 #>  2         4  20.5 Black or African A… Fema… TRT   VIS4   PT1        20.5 -3.23  #>  3         6  31.5 Asian               Male  PBO   VIS2   PT2        31.5 -0.807 #>  4         7  36.9 Asian               Male  PBO   VIS3   PT2        36.9 -1.10  #>  5         8  48.8 Asian               Male  PBO   VIS4   PT2        48.8  0.305 #>  6        10  36.0 Black or African A… Fema… PBO   VIS2   PT3        36.0 -0.288 #>  7        12  37.2 Black or African A… Fema… PBO   VIS4   PT3        37.2 -1.08  #>  8        13  33.9 Asian               Fema… TRT   VIS1   PT4        33.9 -0.155 #>  9        14  33.7 Asian               Fema… TRT   VIS2   PT4        33.7 -1.15  #> 10        16  54.5 Asian               Fema… TRT   VIS4   PT4        54.5  0.398 #> # ℹ 527 more rows"},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm_tmb_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods for mmrm_tmb Objects — mmrm_tmb_methods","text":"","code":"# S3 method for mmrm_tmb coef(object, complete = TRUE, ...)  # S3 method for mmrm_tmb fitted(object, ...)  # S3 method for mmrm_tmb predict(   object,   newdata,   se.fit = FALSE,   interval = c(\"none\", \"confidence\", \"prediction\"),   level = 0.95,   nsim = 1000L,   ... )  # S3 method for mmrm_tmb model.frame(   formula,   data,   include = c(\"subject_var\", \"visit_var\", \"group_var\", \"response_var\"),   full,   na.action = \"na.omit\",   ... )  # S3 method for mmrm_tmb model.matrix(object, data, include = NULL, ...)  # S3 method for mmrm_tmb terms(x, include = \"response_var\", ...)  # S3 method for mmrm_tmb logLik(object, ...)  # S3 method for mmrm_tmb formula(x, ...)  # S3 method for mmrm_tmb vcov(object, complete = TRUE, ...)  # S3 method for mmrm_tmb VarCorr(x, sigma = NA, ...)  # S3 method for mmrm_tmb deviance(object, ...)  # S3 method for mmrm_tmb AIC(object, corrected = FALSE, ..., k = 2)  # S3 method for mmrm_tmb BIC(object, ...)  # S3 method for mmrm_tmb print(x, ...)  # S3 method for mmrm_tmb residuals(object, type = c(\"response\", \"pearson\", \"normalized\"), ...)  # S3 method for mmrm_tmb simulate(   object,   nsim = 1,   seed = NULL,   newdata,   ...,   method = c(\"conditional\", \"marginal\") )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm_tmb_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods for mmrm_tmb Objects — mmrm_tmb_methods","text":"object (mmrm_tmb) fitted MMRM object. complete (flag) whether include potential non-estimable coefficients. ... mostly used; Exception model.matrix() passing ... default method. newdata (data.frame) optional new data, otherwise data object used. se.fit (flag) indicator standard errors required. interval (string) type interval calculation. Can abbreviated. level (number) tolerance/confidence level. nsim (count) number simulations use. formula (mmrm_tmb) object. data (data.frame) object construct frame. include (character) names variable types include. Must NULL one c(\"subject_var\", \"visit_var\", \"group_var\", \"response_var\"). full (flag) indicator whether return full model frame (deprecated). na.action (string) na action. x (mmrm_tmb) object. sigma used (parameter exist MMRM). corrected (flag) whether corrected AIC calculated. k (number) penalty per parameter used; default k = 2 classical AIC. type (string) unscaled (response), pearson normalized. Default response, type available use models spatial covariance structure. seed unused argument stats::simulate(). method (string) simulation method use. \"conditional\", simulated values sampled given estimated covariance matrix object. \"marginal\", variance estimated covariance matrix taken account.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm_tmb_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Methods for mmrm_tmb Objects — mmrm_tmb_methods","text":"Depends method, see Functions.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm_tmb_methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Methods for mmrm_tmb Objects — mmrm_tmb_methods","text":"include argument controls variables returned model frame include. Possible options \"response_var\", \"subject_var\", \"visit_var\" \"group_var\", representing response variable, subject variable, visit variable group variable. character values new data always factorized according data fit avoid mismatched levels issues model.matrix.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm_tmb_methods.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Methods for mmrm_tmb Objects — mmrm_tmb_methods","text":"coef(mmrm_tmb): obtains estimated coefficients. fitted(mmrm_tmb): obtains fitted values. predict(mmrm_tmb): predict conditional means new data; optionally standard errors confidence prediction intervals. Returns vector predictions se.fit == FALSE interval == \"none\"; otherwise returns data.frame multiple columns one row per input data row. model.frame(mmrm_tmb): obtains model frame. model.matrix(mmrm_tmb): obtains model matrix. terms(mmrm_tmb): obtains terms object. logLik(mmrm_tmb): obtains attained log likelihood value. formula(mmrm_tmb): obtains used formula. vcov(mmrm_tmb): obtains variance-covariance matrix estimate coefficients. VarCorr(mmrm_tmb): obtains variance-covariance matrix estimate residuals. deviance(mmrm_tmb): obtains deviance, defined twice negative log likelihood, can either integrated coefficients REML fits usual one ML fits. AIC(mmrm_tmb): obtains Akaike Information Criterion, degrees freedom number variance parameters (n_theta). corrected, multiplied m / (m - n_theta - 1) m number observations minus number coefficients, n_theta + 2 smaller (Hurvich Tsai 1989; Burnham Anderson 1998) . BIC(mmrm_tmb): obtains Bayesian Information Criterion, using natural logarithm number subjects penalty parameter k. print(mmrm_tmb): prints object. residuals(mmrm_tmb): obtain residuals - either unscaled ('response'), 'pearson' 'normalized'. simulate(mmrm_tmb): simulate responses fitted model according simulation method, returning data.frame dimension [n, m] n number rows newdata, m number nsim simulated responses.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm_tmb_methods.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Methods for mmrm_tmb Objects — mmrm_tmb_methods","text":"Hurvich CM, Tsai C (1989). “Regression time series model selection small samples.” Biometrika, 76(2), 297--307. doi:10.2307/2336663 . Burnham KP, Anderson DR (1998). “Practical use information-theoretic approach.” Model selection inference, 75--117. Springer. doi:10.1007/978-1-4757-2917-7_3 . Gałecki , Burzykowski T (2013). “Linear mixed-effects model.” Linear mixed-effects models using R, 245--273. Springer.","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/mmrm_tmb_methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Methods for mmrm_tmb Objects — mmrm_tmb_methods","text":"","code":"formula <- FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID) object <- fit_mmrm(formula, fev_data, weights = rep(1, nrow(fev_data))) # Estimated coefficients: coef(object) #>                   (Intercept) RACEBlack or African American  #>                   30.77747548                    1.53049977  #>                     RACEWhite                     SEXFemale  #>                    5.64356535                    0.32606192  #>                      ARMCDTRT                    AVISITVIS2  #>                    3.77423004                    4.83958845  #>                    AVISITVIS3                    AVISITVIS4  #>                   10.34211288                   15.05389826  #>           ARMCDTRT:AVISITVIS2           ARMCDTRT:AVISITVIS3  #>                   -0.04192625                   -0.69368537  #>           ARMCDTRT:AVISITVIS4  #>                    0.62422703  # Fitted values: fitted(object) #>        2        4        6        7        8       10       12       13  #> 41.20593 52.08639 35.61706 41.11959 45.83137 37.47363 47.68794 34.87777  #>       14       16       17       19       20       23       25       26  #> 39.67543 50.55589 32.30798 42.65009 47.36187 42.65009 31.10354 35.94313  #>       28       29       30       31       32       33       34       36  #> 46.15744 32.30798 37.14756 42.65009 47.36187 40.19527 44.99293 55.87340  #>       39       41       42       43       44       45       46       47  #> 42.97615 34.87777 39.67543 44.52619 50.55589 30.77748 35.61706 41.11959  #>       51       52       55       59       60       62       64       65  #> 49.84370 55.87340 42.65009 41.11959 45.83137 35.94313 46.15744 36.74710  #>       68       69       70       72       73       74       75       76  #> 51.80100 34.55171 39.34937 50.22983 34.55171 39.34937 44.20013 50.22983  #>       78       79       82       83       84       85       86       87  #> 45.31900 50.16976 44.99293 49.84370 55.87340 40.19527 44.99293 49.84370  #>       88       89       90       91       93       94       95       96  #> 55.87340 32.63404 37.47363 42.97615 40.52133 45.31900 50.16976 56.19946  #>       97       98       99      100      101      102      103      104  #> 40.52133 45.31900 50.16976 56.19946 40.52133 45.31900 50.16976 56.19946  #>      105      107      108      109      110      111      112      113  #> 36.40827 46.05669 52.08639 36.08221 40.87987 45.73063 51.76033 36.08221  #>      114      116      117      118      119      120      121      123  #> 40.87987 51.76033 34.87777 39.67543 44.52619 50.55589 31.10354 41.44565  #>      125      128      129      130      132      133      134      135  #> 36.08221 51.76033 36.08221 40.87987 51.76033 31.10354 35.94313 41.44565  #>      136      137      138      140      142      144      145      146  #> 46.15744 36.40827 41.20593 52.08639 39.67543 50.55589 36.74710 41.58669  #>      147      148      149      151      153      155      156      157  #> 47.08922 51.80100 31.10354 41.44565 31.10354 41.44565 46.15744 32.30798  #>      158      159      162      163      164      165      168      169  #> 37.14756 42.65009 37.14756 42.65009 47.36187 32.30798 47.36187 36.40827  #>      170      171      172      173      177      178      179      180  #> 41.20593 46.05669 52.08639 36.08221 31.10354 35.94313 41.44565 46.15744  #>      181      182      183      185      186      187      190      191  #> 30.77748 35.61706 41.11959 34.55171 39.34937 44.20013 37.14756 42.65009  #>      193      194      195      197      198      199      201      202  #> 36.74710 41.58669 47.08922 34.87777 39.67543 44.52619 36.40827 41.20593  #>      204      206      208      209      210      217      218      219  #> 52.08639 41.20593 52.08639 36.42104 41.26063 34.55171 39.34937 44.20013  #>      221      224      226      227      228      230      231      233  #> 32.30798 47.36187 40.87987 45.73063 51.76033 45.31900 50.16976 40.52133  #>      235      236      237      238      239      240      241      242  #> 50.16976 56.19946 36.40827 41.20593 46.05669 52.08639 34.55171 39.34937  #>      244      246      250      251      252      253      254      256  #> 50.22983 35.94313 41.58669 47.08922 51.80100 32.63404 37.47363 47.68794  #>      257      258      259      260      261      262      263      264  #> 34.87777 39.67543 44.52619 50.55589 34.55171 39.34937 44.20013 50.22983  #>      265      266      267      268      269      270      273      274  #> 40.52133 45.31900 50.16976 56.19946 40.52133 45.31900 32.30798 37.14756  #>      275      276      277      278      280      281      282      283  #> 42.65009 47.36187 32.30798 37.14756 47.36187 34.55171 39.34937 44.20013  #>      284      285      286      287      291      292      293      295  #> 50.22983 34.87777 39.67543 44.52619 46.76315 51.47494 36.74710 47.08922  #>      296      298      299      300      301      304      305      306  #> 51.80100 41.26063 46.76315 51.47494 40.19527 55.87340 34.55171 39.34937  #>      307      308      310      311      312      316      317      318  #> 44.20013 50.22983 45.31900 50.16976 56.19946 46.15744 34.55171 39.34937  #>      319      322      323      324      325      327      328      329  #> 44.20013 41.26063 46.76315 51.47494 32.63404 42.97615 47.68794 40.19527  #>      330      331      332      336      339      340      341      342  #> 44.99293 49.84370 55.87340 46.15744 41.44565 46.15744 36.40827 41.20593  #>      343      344      345      347      349      351      352      353  #> 46.05669 52.08639 36.42104 46.76315 32.63404 42.97615 47.68794 32.30798  #>      354      355      356      357      363      364      365      367  #> 37.14756 42.65009 47.36187 30.77748 50.16976 56.19946 40.52133 50.16976  #>      368      370      371      372      373      375      376      378  #> 56.19946 37.14756 42.65009 47.36187 31.10354 41.44565 46.15744 35.94313  #>      379      381      382      384      385      386      388      389  #> 41.44565 32.63404 37.47363 47.68794 40.19527 44.99293 55.87340 30.77748  #>      390      391      392      394      397      398      399      402  #> 35.61706 41.11959 45.83137 37.14756 32.63404 37.47363 42.97615 44.99293  #>      403      405      406      407      408      409      410      411  #> 49.84370 31.10354 35.94313 41.44565 46.15744 31.10354 35.94313 41.44565  #>      413      415      416      418      419      421      422      423  #> 32.63404 42.97615 47.68794 41.20593 46.05669 34.87777 39.67543 44.52619  #>      424      427      428      429      430      431      432      434  #> 50.55589 47.08922 51.80100 40.19527 44.99293 49.84370 55.87340 37.47363  #>      435      436      438      439      444      445      447      449  #> 42.97615 47.68794 39.34937 44.20013 51.80100 32.63404 42.97615 30.77748  #>      450      451      453      454      455      456      457      458  #> 35.61706 41.11959 32.30798 37.14756 42.65009 47.36187 31.10354 35.94313  #>      459      461      463      464      465      469      470      471  #> 41.44565 36.08221 45.73063 51.76033 32.30798 31.10354 35.94313 41.44565  #>      473      474      477      484      487      489      490      491  #> 40.19527 44.99293 31.10354 51.76033 41.44565 36.74710 41.58669 47.08922  #>      494      495      496      497      498      499      501      502  #> 39.67543 44.52619 50.55589 36.42104 41.26063 46.76315 34.55171 39.34937  #>      504      505      508      509      510      511      512      513  #> 50.22983 36.40827 52.08639 34.87777 39.67543 44.52619 50.55589 40.19527  #>      518      519      521      522      523      524      526      527  #> 41.26063 46.76315 31.10354 35.94313 41.44565 46.15744 35.61706 41.11959  #>      528      530      531      532      534      535      536      537  #> 45.83137 41.26063 46.76315 51.47494 37.14756 42.65009 47.36187 32.30798  #>      538      539      540      541      544      545      546      547  #> 37.14756 42.65009 47.36187 40.52133 56.19946 34.87777 39.67543 44.52619  #>      548      549      550      551      555      556      557      558  #> 50.55589 34.55171 39.34937 44.20013 44.52619 50.55589 32.63404 37.47363  #>      560      562      564      569      570      572      573      574  #> 47.68794 44.99293 55.87340 36.40827 41.20593 52.08639 31.10354 35.94313  #>      575      576      577      578      579      582      583      584  #> 41.44565 46.15744 32.30798 37.14756 42.65009 39.67543 44.52619 50.55589  #>      585      586      587      590      591      593      594      595  #> 31.10354 35.94313 41.44565 40.87987 45.73063 31.10354 35.94313 41.44565  #>      596      599      600      601      602      604      606      608  #> 46.15744 46.76315 51.47494 31.10354 35.94313 46.15744 39.67543 50.55589  #>      609      610      611      612      613      614      616      617  #> 32.30798 37.14756 42.65009 47.36187 32.63404 37.47363 47.68794 34.55171  #>      619      620      621      622      623      624      625      628  #> 44.20013 50.22983 36.42104 41.26063 46.76315 51.47494 36.08221 51.76033  #>      630      631      632      633      634      638      639      640  #> 40.87987 45.73063 51.76033 34.87777 39.67543 39.34937 44.20013 50.22983  #>      642      645      648      650      652      654      655      656  #> 37.47363 30.77748 45.83137 41.26063 51.47494 37.47363 42.97615 47.68794  #>      657      661      665      666      668      669      670      671  #> 40.52133 34.55171 32.30798 37.14756 47.36187 32.63404 37.47363 42.97615  #>      673      674      678      679      680      682      684      685  #> 36.74710 41.58669 45.31900 50.16976 56.19946 35.94313 46.15744 34.87777  #>      686      687      689      690      691      693      694      695  #> 39.67543 44.52619 40.52133 45.31900 50.16976 36.40827 41.20593 46.05669  #>      697      698      700      701      702      704      707      709  #> 32.63404 37.47363 47.68794 36.08221 40.87987 51.76033 42.65009 32.30798  #>      712      713      715      716      717      718      719      721  #> 47.36187 40.19527 49.84370 55.87340 30.77748 35.61706 41.11959 31.10354  #>      723      724      727      728      729      730      734      736  #> 41.44565 46.15744 46.05669 52.08639 36.40827 41.20593 45.31900 56.19946  #>      738      739      740      741      742      744      745      749  #> 37.47363 42.97615 47.68794 36.42104 41.26063 51.47494 32.63404 32.63404  #>      751      753      754      755      757      758      759      760  #> 42.97615 34.87777 39.67543 44.52619 36.40827 41.20593 46.05669 52.08639  #>      761      764      765      766      767      768      770      771  #> 40.19527 55.87340 40.52133 45.31900 50.16976 56.19946 35.61706 41.11959  #>      772      773      774      775      776      778      779      781  #> 45.83137 32.30798 37.14756 42.65009 47.36187 45.31900 50.16976 30.77748  #>      782      784      788      789      790      792      797      798  #> 35.61706 45.83137 47.36187 36.08221 40.87987 51.76033 32.30798 37.14756  #>      800  #> 47.36187  predict(object, newdata = fev_data) #>        1        2        3        4        5        6        7        8  #> 32.61649 39.97105 45.88555 20.48379 28.03626 31.45522 36.87889 48.80809  #>        9       10       11       12       13       14       15       16  #> 30.81897 35.98699 42.80683 37.16444 33.89229 33.74637 44.09341 54.45055  #>       17       18       19       20       21       22       23       24  #> 32.31386 37.27959 46.79361 41.71154 31.09722 36.46963 39.02423 47.14083  #>       25       26       27       28       29       30       31       32  #> 31.93050 32.90947 41.36743 48.28031 32.23021 35.91080 45.54898 53.02877  #>       33       34       35       36       37       38       39       40  #> 47.16898 46.64287 50.65969 58.09713 33.30188 37.84756 44.97613 47.80986  #>       41       42       43       44       45       46       47       48  #> 44.32755 38.97813 43.72862 46.43393 40.34576 42.76568 40.11155 49.60886  #>       49       50       51       52       53       54       55       56  #> 41.35419 45.64184 53.31791 56.07641 32.06030 37.00888 41.90837 47.31666  #>       57       58       59       60       61       62       63       64  #> 27.74812 33.92226 34.65663 39.07791 31.23078 35.89612 41.44276 47.67264  #>       65       66       67       68       69       70       71       72  #> 22.65440 36.39591 45.41116 40.85376 32.60048 33.64329 43.79894 40.92278  #>       73       74       75       76       77       78       79       80  #> 32.14831 46.43604 41.34973 66.30382 42.78575 47.95358 53.97364 56.97067  #>       81       82       83       84       85       86       87       88  #> 46.31259 56.64544 49.70872 60.40497 45.98525 51.90911 41.50787 53.42727  #>       89       90       91       92       93       94       95       96  #> 23.86859 35.98563 43.60626 44.90173 29.59773 35.50688 55.42944 52.10530  #>       97       98       99      100      101      102      103      104  #> 31.69644 32.16159 51.04735 55.85987 49.11706 49.25544 51.72211 69.99128  #>      105      106      107      108      109      110      111      112  #> 22.07169 36.40124 46.08393 52.42288 37.69466 44.59400 52.08897 58.22961  #>      113      114      115      116      117      118      119      120  #> 37.22824 34.39863 45.68591 36.34012 45.44182 41.54847 43.92172 61.83243  #>      121      122      123      124      125      126      127      128  #> 27.25656 34.91127 45.65133 44.64728 33.19334 39.58138 45.44985 41.66826  #>      129      130      131      132      133      134      135      136  #> 27.12753 31.74858 44.41071 41.60000 39.45250 32.61823 34.62445 45.90515  #>      137      138      139      140      141      142      143      144  #> 36.17780 39.79796 45.98215 50.08272 36.34850 44.64316 45.03066 39.73529  #>      145      146      147      148      149      150      151      152  #> 34.06164 40.18592 41.17584 57.76669 38.18460 38.80536 47.19893 48.24396  #>      153      154      155      156      157      158      159      160  #> 37.32785 38.01467 43.16048 41.40349 30.15733 35.84353 40.95250 46.66874  #>      161      162      163      164      165      166      167      168  #> 35.95571 41.37928 50.17316 45.35226 39.06491 39.32297 43.53914 42.11960  #>      169      170      171      172      173      174      175      176  #> 29.81042 42.57055 47.81652 68.06024 35.62071 40.71604 45.67402 51.60799  #>      177      178      179      180      181      182      183      184  #> 33.89134 36.42808 37.57519 58.46873 19.54516 31.13541 40.89955 41.98929  #>      185      186      187      188      189      190      191      192  #> 22.18809 41.05857 37.32452 47.26465 35.24164 43.12432 41.99349 49.03216  #>      193      194      195      196      197      198      199      200  #> 44.03080 38.66417 53.45993 53.15869 29.81948 30.43859 40.18095 48.14662  #>      201      202      203      204      205      206      207      208  #> 26.78578 34.55115 44.80264 40.06421 36.74126 43.09329 46.24534 45.71567  #>      209      210      211      212      213      214      215      216  #> 40.74992 44.74635 47.38677 53.15113 40.52133 45.31900 50.16976 56.19946  #>      217      218      219      220      221      222      223      224  #> 40.14674 48.75859 46.43462 52.94589 29.33990 36.14022 42.27352 47.93165  #>      225      226      227      228      229      230      231      232  #> 36.56023 41.11632 47.05889 52.24599 45.14782 54.14236 50.44618 58.67591  #>      233      234      235      236      237      238      239      240  #> 37.53657 44.35350 49.45840 59.12866 40.31268 39.66049 50.89726 56.13116  #>      241      242      243      244      245      246      247      248  #> 32.82981 46.53837 44.34841 51.81265 27.83996 29.91939 40.81419 44.46298  #>      249      250      251      252      253      254      255      256  #> 43.41057 51.05656 50.50059 64.11388 32.21843 29.64732 42.57444 45.09919  #>      257      258      259      260      261      262      263      264  #> 39.75659 37.28894 44.80145 65.95920 33.43439 33.57042 39.91543 49.57098  #>      265      266      267      268      269      270      271      272  #> 38.91634 36.69011 45.66665 52.07431 42.21411 45.02901 50.33509 56.64523  #>      273      274      275      276      277      278      279      280  #> 30.98338 44.72932 40.68711 34.71530 27.30752 37.31585 42.13972 44.83000  #>      281      282      283      284      285      286      287      288  #> 32.93042 44.91911 45.68636 65.98800 46.60130 40.89786 46.66708 54.00187  #>      289      290      291      292      293      294      295      296  #> 34.45883 40.16352 43.83270 44.11604 38.29612 42.55473 51.38570 56.20979  #>      297      298      299      300      301      302      303      304  #> 36.00870 43.45819 38.38741 56.42818 39.05050 44.54463 49.71457 54.09200  #>      305      306      307      308      309      310      311      312  #> 31.40521 46.13330 45.29845 28.06936 39.13956 42.50283 46.45368 64.97366  #>      313      314      315      316      317      318      319      320  #> 30.79828 35.77269 41.42494 43.97847 35.33466 39.34378 41.27633 50.63458  #>      321      322      323      324      325      326      327      328  #> 34.21113 39.83058 43.49673 44.06114 41.43742 40.86389 46.16954 54.24024  #>      329      330      331      332      333      334      335      336  #> 36.61831 42.09272 50.69556 51.72563 32.18813 36.54871 41.51923 53.89947  #>      337      338      339      340      341      342      343      344  #> 32.02131 36.45473 39.94420 56.42482 41.86385 34.56420 38.68927 62.88743  #>      345      346      347      348      349      350      351      352  #> 28.85343 38.82112 49.29495 48.79915 28.74029 36.50625 43.59994 57.38616  #>      353      354      355      356      357      358      359      360  #> 35.36824 43.06110 31.27551 54.13245 25.97050 33.91065 40.52992 44.24460  #>      361      362      363      364      365      366      367      368  #> 39.78563 44.90878 51.17493 48.44043 43.33128 46.62121 55.93546 54.15312  #>      369      370      371      372      373      374      375      376  #> 33.74300 40.60252 44.44715 40.54161 33.95563 36.96071 43.67802 42.76023  #>      377      378      379      380      381      382      383      384  #> 34.22200 42.82678 39.59218 48.07181 33.49216 35.39266 43.01854 42.36266  #>      385      386      387      388      389      390      391      392  #> 48.54368 43.94366 50.77423 47.91204 20.72928 28.00599 40.19255 37.79360  #>      393      394      395      396      397      398      399      400  #> 32.09354 36.75177 42.60860 47.25054 34.59822 39.32034 40.65702 48.64064  #>      401      402      403      404      405      406      407      408  #> 40.32404 43.03255 54.65715 55.36478 35.55742 43.70215 42.52157 54.89337  #>      409      410      411      412      413      414      415      416  #> 32.03460 29.45107 45.35138 45.34981 38.73784 39.40007 41.42283 47.32385  #>      417      418      419      420      421      422      423      424  #> 40.40301 47.55310 49.06509 53.89183 29.22591 40.08175 45.68142 41.47403  #>      425      426      427      428      429      430      431      432  #> 37.66506 42.09675 42.51970 69.36099 42.39760 43.72376 49.47601 51.94188  #>      433      434      435      436      437      438      439      440  #> 31.85636 40.59100 39.97833 31.69049 33.93860 37.20517 46.28740 49.64641  #>      441      442      443      444      445      446      447      448  #> 35.31624 40.78777 46.99214 41.58720 32.17365 37.15136 40.69375 47.65030  #>      449      450      451      452      453      454      455      456  #> 32.28771 41.76205 40.06768 47.13255 29.14213 39.50989 43.32349 47.16756  #>      457      458      459      460      461      462      463      464  #> 40.93020 42.19406 41.21057 49.84692 38.54330 41.30121 43.96324 42.67652  #>      465      466      467      468      469      470      471      472  #> 22.79584 33.77087 41.48323 44.22194 31.43559 38.85064 48.24288 46.21933  #>      473      474      475      476      477      478      479      480  #> 44.71302 51.85370 50.64763 58.03156 30.56757 35.75286 41.37990 45.98051  #>      481      482      483      484      485      486      487      488  #> 37.22316 41.51692 45.80804 59.90473 33.88039 37.49795 49.76150 46.66439  #>      489      490      491      492      493      494      495      496  #> 47.21985 40.34525 48.29793 54.61927 36.20463 44.39634 41.71421 47.37535  #>      497      498      499      500      501      502      503      504  #> 42.03797 37.56100 45.11793 52.73195 34.62530 45.28206 44.37019 63.57761  #>      505      506      507      508      509      510      511      512  #> 35.80878 41.01656 45.97684 52.67314 35.88734 38.73222 46.70361 53.65398  #>      513      514      515      516      517      518      519      520  #> 36.71543 43.75763 49.41683 54.72471 37.73352 41.54317 51.67909 51.59612  #>      521      522      523      524      525      526      527      528  #> 27.40130 30.33517 37.73092 29.11668 29.98429 32.08830 41.66067 53.90815  #>      529      530      531      532      533      534      535      536  #> 33.99107 35.06937 47.17615 56.49347 33.93047 38.88006 47.54070 43.53705  #>      537      538      539      540      541      542      543      544  #> 31.82054 39.62816 44.95543 21.11543 34.74671 43.34074 49.44207 56.69249  #>      545      546      547      548      549      550      551      552  #> 22.73126 32.50075 42.37206 42.89847 55.62582 45.38998 52.66743 56.64286  #>      553      554      555      556      557      558      559      560  #> 30.83308 37.41167 34.18931 45.59740 28.89198 38.46147 42.59713 49.90357  #>      561      562      563      564      565      566      567      568  #> 39.69499 44.14167 49.75394 55.24278 36.08221 40.87987 45.73063 51.76033  #>      569      570      571      572      573      574      575      576  #> 27.38001 33.63251 44.82922 39.34410 26.98575 24.04175 42.16648 44.75380  #>      577      578      579      580      581      582      583      584  #> 31.55469 44.42696 44.10343 47.99857 34.85973 37.87445 48.31828 50.21520  #>      585      586      587      588      589      590      591      592  #> 41.94615 39.62690 46.69763 49.47735 37.96055 43.75255 47.38873 52.57999  #>      593      594      595      596      597      598      599      600  #> 32.43412 43.07163 42.99551 53.82759 39.32508 42.88409 50.64802 63.44051  #>      601      602      603      604      605      606      607      608  #> 34.48949 40.08056 42.00218 47.46553 32.13434 37.11697 44.23987 36.25120  #>      609      610      611      612      613      614      615      616  #> 29.20171 31.53773 42.35683 64.78352 32.72757 37.50022 42.89869 57.03861  #>      617      618      619      620      621      622      623      624  #> 36.32475 40.01336 41.46725 59.01411 30.14970 34.91740 52.13900 58.73839  #>      625      626      627      628      629      630      631      632  #> 35.83185 40.93247 45.66178 56.41409 37.79034 43.55593 44.26320 59.25579  #>      633      634      635      636      637      638      639      640  #> 28.47314 47.47581 44.21910 49.71965 39.25880 46.47483 51.22677 45.82777  #>      641      642      643      644      645      646      647      648  #> 33.49775 39.06783 43.14327 48.13638 29.99542 35.59648 40.95436 54.17796  #>      649      650      651      652      653      654      655      656  #> 39.22564 44.55743 47.12235 62.59579 31.81104 35.48396 44.07768 46.57837  #>      657      658      659      660      661      662      663      664  #> 47.67979 47.86016 51.04789 58.56245 22.15439 34.94847 42.67935 46.13751  #>      665      666      667      668      669      670      671      672  #> 34.27765 36.90059 42.91664 40.54285 29.09494 37.21768 43.08491 46.61656  #>      673      674      675      676      677      678      679      680  #> 27.12174 34.11916 45.71605 48.10986 36.05580 40.80230 45.89269 43.69153  #>      681      682      683      684      685      686      687      688  #> 28.60623 29.22869 40.75701 55.68362 31.90698 37.31061 40.75546 49.61178  #>      689      690      691      692      693      694      695      696  #> 42.19474 44.87228 47.55198 56.78797 50.62894 45.47551 48.62168 56.62985  #>      697      698      699      700      701      702      703      704  #> 29.66493 34.57406 42.60371 38.11676 33.77204 34.26148 45.09052 58.81037  #>      705      706      707      708      709      710      711      712  #> 31.38338 36.62986 39.88119 47.19307 31.62708 36.93821 42.55784 48.22049  #>      713      714      715      716      717      718      719      720  #> 42.58829 45.69481 49.33262 53.74331 29.71857 30.45651 38.29800 45.02430  #>      721      722      723      724      725      726      727      728  #> 36.81040 37.72068 42.35045 39.39860 36.16701 41.07320 49.73629 41.58082  #>      729      730      731      732      733      734      735      736  #> 43.58901 40.16762 46.76714 54.00167 39.66119 41.08206 49.74477 69.37409  #>      737      738      739      740      741      742      743      744  #> 34.11979 41.27625 44.76138 39.69815 38.44296 48.20586 47.47269 35.50735  #>      745      746      747      748      749      750      751      752  #> 32.08153 37.27749 42.90837 47.50555 44.69256 41.59238 42.18689 51.78495  #>      753      754      755      756      757      758      759      760  #> 37.01741 38.26920 49.28806 50.70843 40.45953 45.10337 45.58250 62.96989  #>      761      762      763      764      765      766      767      768  #> 30.78252 41.41048 48.75402 44.69667 32.72491 45.78702 48.74886 84.08449  #>      769      770      771      772      773      774      775      776  #> 28.61581 30.19495 36.78573 61.03588 20.36749 35.22480 37.42847 30.20501  #>      777      778      779      780      781      782      783      784  #> 41.81258 49.12862 47.31234 57.24330 19.28388 30.00682 39.56686 49.21768  #>      785      786      787      788      789      790      791      792  #> 31.29535 36.58216 42.58139 40.13353 42.34534 52.32575 46.80142 69.26254  #>      793      794      795      796      797      798      799      800  #> 40.19527 44.99293 49.84370 55.87340 35.70341 41.64454 43.17210 54.25081  # Model frame: model.frame(object) #>         FEV1                      RACE    SEX ARMCD AVISIT USUBJID #> 2   39.97105 Black or African American Female   TRT   VIS2     PT1 #> 4   20.48379 Black or African American Female   TRT   VIS4     PT1 #> 6   31.45522                     Asian   Male   PBO   VIS2     PT2 #> 7   36.87889                     Asian   Male   PBO   VIS3     PT2 #> 8   48.80809                     Asian   Male   PBO   VIS4     PT2 #> 10  35.98699 Black or African American Female   PBO   VIS2     PT3 #> 12  37.16444 Black or African American Female   PBO   VIS4     PT3 #> 13  33.89229                     Asian Female   TRT   VIS1     PT4 #> 14  33.74637                     Asian Female   TRT   VIS2     PT4 #> 16  54.45055                     Asian Female   TRT   VIS4     PT4 #> 17  32.31386 Black or African American   Male   PBO   VIS1     PT5 #> 19  46.79361 Black or African American   Male   PBO   VIS3     PT5 #> 20  41.71154 Black or African American   Male   PBO   VIS4     PT5 #> 23  39.02423 Black or African American   Male   PBO   VIS3     PT6 #> 25  31.93050                     Asian Female   PBO   VIS1     PT7 #> 26  32.90947                     Asian Female   PBO   VIS2     PT7 #> 28  48.28031                     Asian Female   PBO   VIS4     PT7 #> 29  32.23021 Black or African American   Male   PBO   VIS1     PT8 #> 30  35.91080 Black or African American   Male   PBO   VIS2     PT8 #> 31  45.54898 Black or African American   Male   PBO   VIS3     PT8 #> 32  53.02877 Black or African American   Male   PBO   VIS4     PT8 #> 33  47.16898                     White   Male   TRT   VIS1     PT9 #> 34  46.64287                     White   Male   TRT   VIS2     PT9 #> 36  58.09713                     White   Male   TRT   VIS4     PT9 #> 39  44.97613 Black or African American Female   PBO   VIS3    PT10 #> 41  44.32755                     Asian Female   TRT   VIS1    PT11 #> 42  38.97813                     Asian Female   TRT   VIS2    PT11 #> 43  43.72862                     Asian Female   TRT   VIS3    PT11 #> 44  46.43393                     Asian Female   TRT   VIS4    PT11 #> 45  40.34576                     Asian   Male   PBO   VIS1    PT12 #> 46  42.76568                     Asian   Male   PBO   VIS2    PT12 #> 47  40.11155                     Asian   Male   PBO   VIS3    PT12 #> 51  53.31791                     White   Male   TRT   VIS3    PT13 #> 52  56.07641                     White   Male   TRT   VIS4    PT13 #> 55  41.90837 Black or African American   Male   PBO   VIS3    PT14 #> 59  34.65663                     Asian   Male   PBO   VIS3    PT15 #> 60  39.07791                     Asian   Male   PBO   VIS4    PT15 #> 62  35.89612                     Asian Female   PBO   VIS2    PT16 #> 64  47.67264                     Asian Female   PBO   VIS4    PT16 #> 65  22.65440                     White Female   PBO   VIS1    PT17 #> 68  40.85376                     White Female   PBO   VIS4    PT17 #> 69  32.60048                     Asian   Male   TRT   VIS1    PT18 #> 70  33.64329                     Asian   Male   TRT   VIS2    PT18 #> 72  40.92278                     Asian   Male   TRT   VIS4    PT18 #> 73  32.14831                     Asian   Male   TRT   VIS1    PT19 #> 74  46.43604                     Asian   Male   TRT   VIS2    PT19 #> 75  41.34973                     Asian   Male   TRT   VIS3    PT19 #> 76  66.30382                     Asian   Male   TRT   VIS4    PT19 #> 78  47.95358                     White Female   TRT   VIS2    PT20 #> 79  53.97364                     White Female   TRT   VIS3    PT20 #> 82  56.64544                     White   Male   TRT   VIS2    PT21 #> 83  49.70872                     White   Male   TRT   VIS3    PT21 #> 84  60.40497                     White   Male   TRT   VIS4    PT21 #> 85  45.98525                     White   Male   TRT   VIS1    PT22 #> 86  51.90911                     White   Male   TRT   VIS2    PT22 #> 87  41.50787                     White   Male   TRT   VIS3    PT22 #> 88  53.42727                     White   Male   TRT   VIS4    PT22 #> 89  23.86859 Black or African American Female   PBO   VIS1    PT23 #> 90  35.98563 Black or African American Female   PBO   VIS2    PT23 #> 91  43.60626 Black or African American Female   PBO   VIS3    PT23 #> 93  29.59773                     White Female   TRT   VIS1    PT24 #> 94  35.50688                     White Female   TRT   VIS2    PT24 #> 95  55.42944                     White Female   TRT   VIS3    PT24 #> 96  52.10530                     White Female   TRT   VIS4    PT24 #> 97  31.69644                     White Female   TRT   VIS1    PT25 #> 98  32.16159                     White Female   TRT   VIS2    PT25 #> 99  51.04735                     White Female   TRT   VIS3    PT25 #> 100 55.85987                     White Female   TRT   VIS4    PT25 #> 101 49.11706                     White Female   TRT   VIS1    PT26 #> 102 49.25544                     White Female   TRT   VIS2    PT26 #> 103 51.72211                     White Female   TRT   VIS3    PT26 #> 104 69.99128                     White Female   TRT   VIS4    PT26 #> 105 22.07169 Black or African American Female   TRT   VIS1    PT27 #> 107 46.08393 Black or African American Female   TRT   VIS3    PT27 #> 108 52.42288 Black or African American Female   TRT   VIS4    PT27 #> 109 37.69466 Black or African American   Male   TRT   VIS1    PT28 #> 110 44.59400 Black or African American   Male   TRT   VIS2    PT28 #> 111 52.08897 Black or African American   Male   TRT   VIS3    PT28 #> 112 58.22961 Black or African American   Male   TRT   VIS4    PT28 #> 113 37.22824 Black or African American   Male   TRT   VIS1    PT29 #> 114 34.39863 Black or African American   Male   TRT   VIS2    PT29 #> 116 36.34012 Black or African American   Male   TRT   VIS4    PT29 #> 117 45.44182                     Asian Female   TRT   VIS1    PT30 #> 118 41.54847                     Asian Female   TRT   VIS2    PT30 #> 119 43.92172                     Asian Female   TRT   VIS3    PT30 #> 120 61.83243                     Asian Female   TRT   VIS4    PT30 #> 121 27.25656                     Asian Female   PBO   VIS1    PT31 #> 123 45.65133                     Asian Female   PBO   VIS3    PT31 #> 125 33.19334 Black or African American   Male   TRT   VIS1    PT32 #> 128 41.66826 Black or African American   Male   TRT   VIS4    PT32 #> 129 27.12753 Black or African American   Male   TRT   VIS1    PT33 #> 130 31.74858 Black or African American   Male   TRT   VIS2    PT33 #> 132 41.60000 Black or African American   Male   TRT   VIS4    PT33 #> 133 39.45250                     Asian Female   PBO   VIS1    PT34 #> 134 32.61823                     Asian Female   PBO   VIS2    PT34 #> 135 34.62445                     Asian Female   PBO   VIS3    PT34 #> 136 45.90515                     Asian Female   PBO   VIS4    PT34 #> 137 36.17780 Black or African American Female   TRT   VIS1    PT35 #> 138 39.79796 Black or African American Female   TRT   VIS2    PT35 #> 140 50.08272 Black or African American Female   TRT   VIS4    PT35 #> 142 44.64316                     Asian Female   TRT   VIS2    PT36 #> 144 39.73529                     Asian Female   TRT   VIS4    PT36 #> 145 34.06164                     White Female   PBO   VIS1    PT37 #> 146 40.18592                     White Female   PBO   VIS2    PT37 #> 147 41.17584                     White Female   PBO   VIS3    PT37 #> 148 57.76669                     White Female   PBO   VIS4    PT37 #> 149 38.18460                     Asian Female   PBO   VIS1    PT38 #> 151 47.19893                     Asian Female   PBO   VIS3    PT38 #> 153 37.32785                     Asian Female   PBO   VIS1    PT39 #> 155 43.16048                     Asian Female   PBO   VIS3    PT39 #> 156 41.40349                     Asian Female   PBO   VIS4    PT39 #> 157 30.15733 Black or African American   Male   PBO   VIS1    PT40 #> 158 35.84353 Black or African American   Male   PBO   VIS2    PT40 #> 159 40.95250 Black or African American   Male   PBO   VIS3    PT40 #> 162 41.37928 Black or African American   Male   PBO   VIS2    PT41 #> 163 50.17316 Black or African American   Male   PBO   VIS3    PT41 #> 164 45.35226 Black or African American   Male   PBO   VIS4    PT41 #> 165 39.06491 Black or African American   Male   PBO   VIS1    PT42 #> 168 42.11960 Black or African American   Male   PBO   VIS4    PT42 #> 169 29.81042 Black or African American Female   TRT   VIS1    PT43 #> 170 42.57055 Black or African American Female   TRT   VIS2    PT43 #> 171 47.81652 Black or African American Female   TRT   VIS3    PT43 #> 172 68.06024 Black or African American Female   TRT   VIS4    PT43 #> 173 35.62071 Black or African American   Male   TRT   VIS1    PT44 #> 177 33.89134                     Asian Female   PBO   VIS1    PT45 #> 178 36.42808                     Asian Female   PBO   VIS2    PT45 #> 179 37.57519                     Asian Female   PBO   VIS3    PT45 #> 180 58.46873                     Asian Female   PBO   VIS4    PT45 #> 181 19.54516                     Asian   Male   PBO   VIS1    PT46 #> 182 31.13541                     Asian   Male   PBO   VIS2    PT46 #> 183 40.89955                     Asian   Male   PBO   VIS3    PT46 #> 185 22.18809                     Asian   Male   TRT   VIS1    PT47 #> 186 41.05857                     Asian   Male   TRT   VIS2    PT47 #> 187 37.32452                     Asian   Male   TRT   VIS3    PT47 #> 190 43.12432 Black or African American   Male   PBO   VIS2    PT48 #> 191 41.99349 Black or African American   Male   PBO   VIS3    PT48 #> 193 44.03080                     White Female   PBO   VIS1    PT49 #> 194 38.66417                     White Female   PBO   VIS2    PT49 #> 195 53.45993                     White Female   PBO   VIS3    PT49 #> 197 29.81948                     Asian Female   TRT   VIS1    PT50 #> 198 30.43859                     Asian Female   TRT   VIS2    PT50 #> 199 40.18095                     Asian Female   TRT   VIS3    PT50 #> 201 26.78578 Black or African American Female   TRT   VIS1    PT51 #> 202 34.55115 Black or African American Female   TRT   VIS2    PT51 #> 204 40.06421 Black or African American Female   TRT   VIS4    PT51 #> 206 43.09329 Black or African American Female   TRT   VIS2    PT52 #> 208 45.71567 Black or African American Female   TRT   VIS4    PT52 #> 209 40.74992                     White   Male   PBO   VIS1    PT53 #> 210 44.74635                     White   Male   PBO   VIS2    PT53 #> 217 40.14674                     Asian   Male   TRT   VIS1    PT55 #> 218 48.75859                     Asian   Male   TRT   VIS2    PT55 #> 219 46.43462                     Asian   Male   TRT   VIS3    PT55 #> 221 29.33990 Black or African American   Male   PBO   VIS1    PT56 #> 224 47.93165 Black or African American   Male   PBO   VIS4    PT56 #> 226 41.11632 Black or African American   Male   TRT   VIS2    PT57 #> 227 47.05889 Black or African American   Male   TRT   VIS3    PT57 #> 228 52.24599 Black or African American   Male   TRT   VIS4    PT57 #> 230 54.14236                     White Female   TRT   VIS2    PT58 #> 231 50.44618                     White Female   TRT   VIS3    PT58 #> 233 37.53657                     White Female   TRT   VIS1    PT59 #> 235 49.45840                     White Female   TRT   VIS3    PT59 #> 236 59.12866                     White Female   TRT   VIS4    PT59 #> 237 40.31268 Black or African American Female   TRT   VIS1    PT60 #> 238 39.66049 Black or African American Female   TRT   VIS2    PT60 #> 239 50.89726 Black or African American Female   TRT   VIS3    PT60 #> 240 56.13116 Black or African American Female   TRT   VIS4    PT60 #> 241 32.82981                     Asian   Male   TRT   VIS1    PT61 #> 242 46.53837                     Asian   Male   TRT   VIS2    PT61 #> 244 51.81265                     Asian   Male   TRT   VIS4    PT61 #> 246 29.91939                     Asian Female   PBO   VIS2    PT62 #> 250 51.05656                     White Female   PBO   VIS2    PT63 #> 251 50.50059                     White Female   PBO   VIS3    PT63 #> 252 64.11388                     White Female   PBO   VIS4    PT63 #> 253 32.21843 Black or African American Female   PBO   VIS1    PT64 #> 254 29.64732 Black or African American Female   PBO   VIS2    PT64 #> 256 45.09919 Black or African American Female   PBO   VIS4    PT64 #> 257 39.75659                     Asian Female   TRT   VIS1    PT65 #> 258 37.28894                     Asian Female   TRT   VIS2    PT65 #> 259 44.80145                     Asian Female   TRT   VIS3    PT65 #> 260 65.95920                     Asian Female   TRT   VIS4    PT65 #> 261 33.43439                     Asian   Male   TRT   VIS1    PT66 #> 262 33.57042                     Asian   Male   TRT   VIS2    PT66 #> 263 39.91543                     Asian   Male   TRT   VIS3    PT66 #> 264 49.57098                     Asian   Male   TRT   VIS4    PT66 #> 265 38.91634                     White Female   TRT   VIS1    PT67 #> 266 36.69011                     White Female   TRT   VIS2    PT67 #> 267 45.66665                     White Female   TRT   VIS3    PT67 #> 268 52.07431                     White Female   TRT   VIS4    PT67 #> 269 42.21411                     White Female   TRT   VIS1    PT68 #> 270 45.02901                     White Female   TRT   VIS2    PT68 #> 273 30.98338 Black or African American   Male   PBO   VIS1    PT69 #> 274 44.72932 Black or African American   Male   PBO   VIS2    PT69 #> 275 40.68711 Black or African American   Male   PBO   VIS3    PT69 #> 276 34.71530 Black or African American   Male   PBO   VIS4    PT69 #> 277 27.30752 Black or African American   Male   PBO   VIS1    PT70 #> 278 37.31585 Black or African American   Male   PBO   VIS2    PT70 #> 280 44.83000 Black or African American   Male   PBO   VIS4    PT70 #> 281 32.93042                     Asian   Male   TRT   VIS1    PT71 #> 282 44.91911                     Asian   Male   TRT   VIS2    PT71 #> 283 45.68636                     Asian   Male   TRT   VIS3    PT71 #> 284 65.98800                     Asian   Male   TRT   VIS4    PT71 #> 285 46.60130                     Asian Female   TRT   VIS1    PT72 #> 286 40.89786                     Asian Female   TRT   VIS2    PT72 #> 287 46.66708                     Asian Female   TRT   VIS3    PT72 #> 291 43.83270                     White   Male   PBO   VIS3    PT73 #> 292 44.11604                     White   Male   PBO   VIS4    PT73 #> 293 38.29612                     White Female   PBO   VIS1    PT74 #> 295 51.38570                     White Female   PBO   VIS3    PT74 #> 296 56.20979                     White Female   PBO   VIS4    PT74 #> 298 43.45819                     White   Male   PBO   VIS2    PT75 #> 299 38.38741                     White   Male   PBO   VIS3    PT75 #> 300 56.42818                     White   Male   PBO   VIS4    PT75 #> 301 39.05050                     White   Male   TRT   VIS1    PT76 #> 304 54.09200                     White   Male   TRT   VIS4    PT76 #> 305 31.40521                     Asian   Male   TRT   VIS1    PT77 #> 306 46.13330                     Asian   Male   TRT   VIS2    PT77 #> 307 45.29845                     Asian   Male   TRT   VIS3    PT77 #> 308 28.06936                     Asian   Male   TRT   VIS4    PT77 #> 310 42.50283                     White Female   TRT   VIS2    PT78 #> 311 46.45368                     White Female   TRT   VIS3    PT78 #> 312 64.97366                     White Female   TRT   VIS4    PT78 #> 316 43.97847                     Asian Female   PBO   VIS4    PT79 #> 317 35.33466                     Asian   Male   TRT   VIS1    PT80 #> 318 39.34378                     Asian   Male   TRT   VIS2    PT80 #> 319 41.27633                     Asian   Male   TRT   VIS3    PT80 #> 322 39.83058                     White   Male   PBO   VIS2    PT81 #> 323 43.49673                     White   Male   PBO   VIS3    PT81 #> 324 44.06114                     White   Male   PBO   VIS4    PT81 #> 325 41.43742 Black or African American Female   PBO   VIS1    PT82 #> 327 46.16954 Black or African American Female   PBO   VIS3    PT82 #> 328 54.24024 Black or African American Female   PBO   VIS4    PT82 #> 329 36.61831                     White   Male   TRT   VIS1    PT83 #> 330 42.09272                     White   Male   TRT   VIS2    PT83 #> 331 50.69556                     White   Male   TRT   VIS3    PT83 #> 332 51.72563                     White   Male   TRT   VIS4    PT83 #> 336 53.89947                     Asian Female   PBO   VIS4    PT84 #> 339 39.94420                     Asian Female   PBO   VIS3    PT85 #> 340 56.42482                     Asian Female   PBO   VIS4    PT85 #> 341 41.86385 Black or African American Female   TRT   VIS1    PT86 #> 342 34.56420 Black or African American Female   TRT   VIS2    PT86 #> 343 38.68927 Black or African American Female   TRT   VIS3    PT86 #> 344 62.88743 Black or African American Female   TRT   VIS4    PT86 #> 345 28.85343                     White   Male   PBO   VIS1    PT87 #> 347 49.29495                     White   Male   PBO   VIS3    PT87 #> 349 28.74029 Black or African American Female   PBO   VIS1    PT88 #> 351 43.59994 Black or African American Female   PBO   VIS3    PT88 #> 352 57.38616 Black or African American Female   PBO   VIS4    PT88 #> 353 35.36824 Black or African American   Male   PBO   VIS1    PT89 #> 354 43.06110 Black or African American   Male   PBO   VIS2    PT89 #> 355 31.27551 Black or African American   Male   PBO   VIS3    PT89 #> 356 54.13245 Black or African American   Male   PBO   VIS4    PT89 #> 357 25.97050                     Asian   Male   PBO   VIS1    PT90 #> 363 51.17493                     White Female   TRT   VIS3    PT91 #> 364 48.44043                     White Female   TRT   VIS4    PT91 #> 365 43.33128                     White Female   TRT   VIS1    PT92 #> 367 55.93546                     White Female   TRT   VIS3    PT92 #> 368 54.15312                     White Female   TRT   VIS4    PT92 #> 370 40.60252 Black or African American   Male   PBO   VIS2    PT93 #> 371 44.44715 Black or African American   Male   PBO   VIS3    PT93 #> 372 40.54161 Black or African American   Male   PBO   VIS4    PT93 #> 373 33.95563                     Asian Female   PBO   VIS1    PT94 #> 375 43.67802                     Asian Female   PBO   VIS3    PT94 #> 376 42.76023                     Asian Female   PBO   VIS4    PT94 #> 378 42.82678                     Asian Female   PBO   VIS2    PT95 #> 379 39.59218                     Asian Female   PBO   VIS3    PT95 #> 381 33.49216 Black or African American Female   PBO   VIS1    PT96 #> 382 35.39266 Black or African American Female   PBO   VIS2    PT96 #> 384 42.36266 Black or African American Female   PBO   VIS4    PT96 #> 385 48.54368                     White   Male   TRT   VIS1    PT97 #> 386 43.94366                     White   Male   TRT   VIS2    PT97 #> 388 47.91204                     White   Male   TRT   VIS4    PT97 #> 389 20.72928                     Asian   Male   PBO   VIS1    PT98 #> 390 28.00599                     Asian   Male   PBO   VIS2    PT98 #> 391 40.19255                     Asian   Male   PBO   VIS3    PT98 #> 392 37.79360                     Asian   Male   PBO   VIS4    PT98 #> 394 36.75177 Black or African American   Male   PBO   VIS2    PT99 #> 397 34.59822 Black or African American Female   PBO   VIS1   PT100 #> 398 39.32034 Black or African American Female   PBO   VIS2   PT100 #> 399 40.65702 Black or African American Female   PBO   VIS3   PT100 #> 402 43.03255                     White   Male   TRT   VIS2   PT101 #> 403 54.65715                     White   Male   TRT   VIS3   PT101 #> 405 35.55742                     Asian Female   PBO   VIS1   PT102 #> 406 43.70215                     Asian Female   PBO   VIS2   PT102 #> 407 42.52157                     Asian Female   PBO   VIS3   PT102 #> 408 54.89337                     Asian Female   PBO   VIS4   PT102 #> 409 32.03460                     Asian Female   PBO   VIS1   PT103 #> 410 29.45107                     Asian Female   PBO   VIS2   PT103 #> 411 45.35138                     Asian Female   PBO   VIS3   PT103 #> 413 38.73784 Black or African American Female   PBO   VIS1   PT104 #> 415 41.42283 Black or African American Female   PBO   VIS3   PT104 #> 416 47.32385 Black or African American Female   PBO   VIS4   PT104 #> 418 47.55310 Black or African American Female   TRT   VIS2   PT105 #> 419 49.06509 Black or African American Female   TRT   VIS3   PT105 #> 421 29.22591                     Asian Female   TRT   VIS1   PT106 #> 422 40.08175                     Asian Female   TRT   VIS2   PT106 #> 423 45.68142                     Asian Female   TRT   VIS3   PT106 #> 424 41.47403                     Asian Female   TRT   VIS4   PT106 #> 427 42.51970                     White Female   PBO   VIS3   PT107 #> 428 69.36099                     White Female   PBO   VIS4   PT107 #> 429 42.39760                     White   Male   TRT   VIS1   PT108 #> 430 43.72376                     White   Male   TRT   VIS2   PT108 #> 431 49.47601                     White   Male   TRT   VIS3   PT108 #> 432 51.94188                     White   Male   TRT   VIS4   PT108 #> 434 40.59100 Black or African American Female   PBO   VIS2   PT109 #> 435 39.97833 Black or African American Female   PBO   VIS3   PT109 #> 436 31.69049 Black or African American Female   PBO   VIS4   PT109 #> 438 37.20517                     Asian   Male   TRT   VIS2   PT110 #> 439 46.28740                     Asian   Male   TRT   VIS3   PT110 #> 444 41.58720                     White Female   PBO   VIS4   PT111 #> 445 32.17365 Black or African American Female   PBO   VIS1   PT112 #> 447 40.69375 Black or African American Female   PBO   VIS3   PT112 #> 449 32.28771                     Asian   Male   PBO   VIS1   PT113 #> 450 41.76205                     Asian   Male   PBO   VIS2   PT113 #> 451 40.06768                     Asian   Male   PBO   VIS3   PT113 #> 453 29.14213 Black or African American   Male   PBO   VIS1   PT114 #> 454 39.50989 Black or African American   Male   PBO   VIS2   PT114 #> 455 43.32349 Black or African American   Male   PBO   VIS3   PT114 #> 456 47.16756 Black or African American   Male   PBO   VIS4   PT114 #> 457 40.93020                     Asian Female   PBO   VIS1   PT115 #> 458 42.19406                     Asian Female   PBO   VIS2   PT115 #> 459 41.21057                     Asian Female   PBO   VIS3   PT115 #> 461 38.54330 Black or African American   Male   TRT   VIS1   PT116 #> 463 43.96324 Black or African American   Male   TRT   VIS3   PT116 #> 464 42.67652 Black or African American   Male   TRT   VIS4   PT116 #> 465 22.79584 Black or African American   Male   PBO   VIS1   PT117 #> 469 31.43559                     Asian Female   PBO   VIS1   PT118 #> 470 38.85064                     Asian Female   PBO   VIS2   PT118 #> 471 48.24288                     Asian Female   PBO   VIS3   PT118 #> 473 44.71302                     White   Male   TRT   VIS1   PT119 #> 474 51.85370                     White   Male   TRT   VIS2   PT119 #> 477 30.56757                     Asian Female   PBO   VIS1   PT120 #> 484 59.90473 Black or African American   Male   TRT   VIS4   PT121 #> 487 49.76150                     Asian Female   PBO   VIS3   PT122 #> 489 47.21985                     White Female   PBO   VIS1   PT123 #> 490 40.34525                     White Female   PBO   VIS2   PT123 #> 491 48.29793                     White Female   PBO   VIS3   PT123 #> 494 44.39634                     Asian Female   TRT   VIS2   PT124 #> 495 41.71421                     Asian Female   TRT   VIS3   PT124 #> 496 47.37535                     Asian Female   TRT   VIS4   PT124 #> 497 42.03797                     White   Male   PBO   VIS1   PT125 #> 498 37.56100                     White   Male   PBO   VIS2   PT125 #> 499 45.11793                     White   Male   PBO   VIS3   PT125 #> 501 34.62530                     Asian   Male   TRT   VIS1   PT126 #> 502 45.28206                     Asian   Male   TRT   VIS2   PT126 #> 504 63.57761                     Asian   Male   TRT   VIS4   PT126 #> 505 35.80878 Black or African American Female   TRT   VIS1   PT127 #> 508 52.67314 Black or African American Female   TRT   VIS4   PT127 #> 509 35.88734                     Asian Female   TRT   VIS1   PT128 #> 510 38.73222                     Asian Female   TRT   VIS2   PT128 #> 511 46.70361                     Asian Female   TRT   VIS3   PT128 #> 512 53.65398                     Asian Female   TRT   VIS4   PT128 #> 513 36.71543                     White   Male   TRT   VIS1   PT129 #> 518 41.54317                     White   Male   PBO   VIS2   PT130 #> 519 51.67909                     White   Male   PBO   VIS3   PT130 #> 521 27.40130                     Asian Female   PBO   VIS1   PT131 #> 522 30.33517                     Asian Female   PBO   VIS2   PT131 #> 523 37.73092                     Asian Female   PBO   VIS3   PT131 #> 524 29.11668                     Asian Female   PBO   VIS4   PT131 #> 526 32.08830                     Asian   Male   PBO   VIS2   PT132 #> 527 41.66067                     Asian   Male   PBO   VIS3   PT132 #> 528 53.90815                     Asian   Male   PBO   VIS4   PT132 #> 530 35.06937                     White   Male   PBO   VIS2   PT133 #> 531 47.17615                     White   Male   PBO   VIS3   PT133 #> 532 56.49347                     White   Male   PBO   VIS4   PT133 #> 534 38.88006 Black or African American   Male   PBO   VIS2   PT134 #> 535 47.54070 Black or African American   Male   PBO   VIS3   PT134 #> 536 43.53705 Black or African American   Male   PBO   VIS4   PT134 #> 537 31.82054 Black or African American   Male   PBO   VIS1   PT135 #> 538 39.62816 Black or African American   Male   PBO   VIS2   PT135 #> 539 44.95543 Black or African American   Male   PBO   VIS3   PT135 #> 540 21.11543 Black or African American   Male   PBO   VIS4   PT135 #> 541 34.74671                     White Female   TRT   VIS1   PT136 #> 544 56.69249                     White Female   TRT   VIS4   PT136 #> 545 22.73126                     Asian Female   TRT   VIS1   PT137 #> 546 32.50075                     Asian Female   TRT   VIS2   PT137 #> 547 42.37206                     Asian Female   TRT   VIS3   PT137 #> 548 42.89847                     Asian Female   TRT   VIS4   PT137 #> 549 55.62582                     Asian   Male   TRT   VIS1   PT138 #> 550 45.38998                     Asian   Male   TRT   VIS2   PT138 #> 551 52.66743                     Asian   Male   TRT   VIS3   PT138 #> 555 34.18931                     Asian Female   TRT   VIS3   PT139 #> 556 45.59740                     Asian Female   TRT   VIS4   PT139 #> 557 28.89198 Black or African American Female   PBO   VIS1   PT140 #> 558 38.46147 Black or African American Female   PBO   VIS2   PT140 #> 560 49.90357 Black or African American Female   PBO   VIS4   PT140 #> 562 44.14167                     White   Male   TRT   VIS2   PT141 #> 564 55.24278                     White   Male   TRT   VIS4   PT141 #> 569 27.38001 Black or African American Female   TRT   VIS1   PT143 #> 570 33.63251 Black or African American Female   TRT   VIS2   PT143 #> 572 39.34410 Black or African American Female   TRT   VIS4   PT143 #> 573 26.98575                     Asian Female   PBO   VIS1   PT144 #> 574 24.04175                     Asian Female   PBO   VIS2   PT144 #> 575 42.16648                     Asian Female   PBO   VIS3   PT144 #> 576 44.75380                     Asian Female   PBO   VIS4   PT144 #> 577 31.55469 Black or African American   Male   PBO   VIS1   PT145 #> 578 44.42696 Black or African American   Male   PBO   VIS2   PT145 #> 579 44.10343 Black or African American   Male   PBO   VIS3   PT145 #> 582 37.87445                     Asian Female   TRT   VIS2   PT146 #> 583 48.31828                     Asian Female   TRT   VIS3   PT146 #> 584 50.21520                     Asian Female   TRT   VIS4   PT146 #> 585 41.94615                     Asian Female   PBO   VIS1   PT147 #> 586 39.62690                     Asian Female   PBO   VIS2   PT147 #> 587 46.69763                     Asian Female   PBO   VIS3   PT147 #> 590 43.75255 Black or African American   Male   TRT   VIS2   PT148 #> 591 47.38873 Black or African American   Male   TRT   VIS3   PT148 #> 593 32.43412                     Asian Female   PBO   VIS1   PT149 #> 594 43.07163                     Asian Female   PBO   VIS2   PT149 #> 595 42.99551                     Asian Female   PBO   VIS3   PT149 #> 596 53.82759                     Asian Female   PBO   VIS4   PT149 #> 599 50.64802                     White   Male   PBO   VIS3   PT150 #> 600 63.44051                     White   Male   PBO   VIS4   PT150 #> 601 34.48949                     Asian Female   PBO   VIS1   PT151 #> 602 40.08056                     Asian Female   PBO   VIS2   PT151 #> 604 47.46553                     Asian Female   PBO   VIS4   PT151 #> 606 37.11697                     Asian Female   TRT   VIS2   PT152 #> 608 36.25120                     Asian Female   TRT   VIS4   PT152 #> 609 29.20171 Black or African American   Male   PBO   VIS1   PT153 #> 610 31.53773 Black or African American   Male   PBO   VIS2   PT153 #> 611 42.35683 Black or African American   Male   PBO   VIS3   PT153 #> 612 64.78352 Black or African American   Male   PBO   VIS4   PT153 #> 613 32.72757 Black or African American Female   PBO   VIS1   PT154 #> 614 37.50022 Black or African American Female   PBO   VIS2   PT154 #> 616 57.03861 Black or African American Female   PBO   VIS4   PT154 #> 617 36.32475                     Asian   Male   TRT   VIS1   PT155 #> 619 41.46725                     Asian   Male   TRT   VIS3   PT155 #> 620 59.01411                     Asian   Male   TRT   VIS4   PT155 #> 621 30.14970                     White   Male   PBO   VIS1   PT156 #> 622 34.91740                     White   Male   PBO   VIS2   PT156 #> 623 52.13900                     White   Male   PBO   VIS3   PT156 #> 624 58.73839                     White   Male   PBO   VIS4   PT156 #> 625 35.83185 Black or African American   Male   TRT   VIS1   PT157 #> 628 56.41409 Black or African American   Male   TRT   VIS4   PT157 #> 630 43.55593 Black or African American   Male   TRT   VIS2   PT158 #> 631 44.26320 Black or African American   Male   TRT   VIS3   PT158 #> 632 59.25579 Black or African American   Male   TRT   VIS4   PT158 #> 633 28.47314                     Asian Female   TRT   VIS1   PT159 #> 634 47.47581                     Asian Female   TRT   VIS2   PT159 #> 638 46.47483                     Asian   Male   TRT   VIS2   PT160 #> 639 51.22677                     Asian   Male   TRT   VIS3   PT160 #> 640 45.82777                     Asian   Male   TRT   VIS4   PT160 #> 642 39.06783 Black or African American Female   PBO   VIS2   PT161 #> 645 29.99542                     Asian   Male   PBO   VIS1   PT162 #> 648 54.17796                     Asian   Male   PBO   VIS4   PT162 #> 650 44.55743                     White   Male   PBO   VIS2   PT163 #> 652 62.59579                     White   Male   PBO   VIS4   PT163 #> 654 35.48396 Black or African American Female   PBO   VIS2   PT164 #> 655 44.07768 Black or African American Female   PBO   VIS3   PT164 #> 656 46.57837 Black or African American Female   PBO   VIS4   PT164 #> 657 47.67979                     White Female   TRT   VIS1   PT165 #> 661 22.15439                     Asian   Male   TRT   VIS1   PT166 #> 665 34.27765 Black or African American   Male   PBO   VIS1   PT167 #> 666 36.90059 Black or African American   Male   PBO   VIS2   PT167 #> 668 40.54285 Black or African American   Male   PBO   VIS4   PT167 #> 669 29.09494 Black or African American Female   PBO   VIS1   PT168 #> 670 37.21768 Black or African American Female   PBO   VIS2   PT168 #> 671 43.08491 Black or African American Female   PBO   VIS3   PT168 #> 673 27.12174                     White Female   PBO   VIS1   PT169 #> 674 34.11916                     White Female   PBO   VIS2   PT169 #> 678 40.80230                     White Female   TRT   VIS2   PT170 #> 679 45.89269                     White Female   TRT   VIS3   PT170 #> 680 43.69153                     White Female   TRT   VIS4   PT170 #> 682 29.22869                     Asian Female   PBO   VIS2   PT171 #> 684 55.68362                     Asian Female   PBO   VIS4   PT171 #> 685 31.90698                     Asian Female   TRT   VIS1   PT172 #> 686 37.31061                     Asian Female   TRT   VIS2   PT172 #> 687 40.75546                     Asian Female   TRT   VIS3   PT172 #> 689 42.19474                     White Female   TRT   VIS1   PT173 #> 690 44.87228                     White Female   TRT   VIS2   PT173 #> 691 47.55198                     White Female   TRT   VIS3   PT173 #> 693 50.62894 Black or African American Female   TRT   VIS1   PT174 #> 694 45.47551 Black or African American Female   TRT   VIS2   PT174 #> 695 48.62168 Black or African American Female   TRT   VIS3   PT174 #> 697 29.66493 Black or African American Female   PBO   VIS1   PT175 #> 698 34.57406 Black or African American Female   PBO   VIS2   PT175 #> 700 38.11676 Black or African American Female   PBO   VIS4   PT175 #> 701 33.77204 Black or African American   Male   TRT   VIS1   PT176 #> 702 34.26148 Black or African American   Male   TRT   VIS2   PT176 #> 704 58.81037 Black or African American   Male   TRT   VIS4   PT176 #> 707 39.88119 Black or African American   Male   PBO   VIS3   PT177 #> 709 31.62708 Black or African American   Male   PBO   VIS1   PT178 #> 712 48.22049 Black or African American   Male   PBO   VIS4   PT178 #> 713 42.58829                     White   Male   TRT   VIS1   PT179 #> 715 49.33262                     White   Male   TRT   VIS3   PT179 #> 716 53.74331                     White   Male   TRT   VIS4   PT179 #> 717 29.71857                     Asian   Male   PBO   VIS1   PT180 #> 718 30.45651                     Asian   Male   PBO   VIS2   PT180 #> 719 38.29800                     Asian   Male   PBO   VIS3   PT180 #> 721 36.81040                     Asian Female   PBO   VIS1   PT181 #> 723 42.35045                     Asian Female   PBO   VIS3   PT181 #> 724 39.39860                     Asian Female   PBO   VIS4   PT181 #> 727 49.73629 Black or African American Female   TRT   VIS3   PT182 #> 728 41.58082 Black or African American Female   TRT   VIS4   PT182 #> 729 43.58901 Black or African American Female   TRT   VIS1   PT183 #> 730 40.16762 Black or African American Female   TRT   VIS2   PT183 #> 734 41.08206                     White Female   TRT   VIS2   PT184 #> 736 69.37409                     White Female   TRT   VIS4   PT184 #> 738 41.27625 Black or African American Female   PBO   VIS2   PT185 #> 739 44.76138 Black or African American Female   PBO   VIS3   PT185 #> 740 39.69815 Black or African American Female   PBO   VIS4   PT185 #> 741 38.44296                     White   Male   PBO   VIS1   PT186 #> 742 48.20586                     White   Male   PBO   VIS2   PT186 #> 744 35.50735                     White   Male   PBO   VIS4   PT186 #> 745 32.08153 Black or African American Female   PBO   VIS1   PT187 #> 749 44.69256 Black or African American Female   PBO   VIS1   PT188 #> 751 42.18689 Black or African American Female   PBO   VIS3   PT188 #> 753 37.01741                     Asian Female   TRT   VIS1   PT189 #> 754 38.26920                     Asian Female   TRT   VIS2   PT189 #> 755 49.28806                     Asian Female   TRT   VIS3   PT189 #> 757 40.45953 Black or African American Female   TRT   VIS1   PT190 #> 758 45.10337 Black or African American Female   TRT   VIS2   PT190 #> 759 45.58250 Black or African American Female   TRT   VIS3   PT190 #> 760 62.96989 Black or African American Female   TRT   VIS4   PT190 #> 761 30.78252                     White   Male   TRT   VIS1   PT191 #> 764 44.69667                     White   Male   TRT   VIS4   PT191 #> 765 32.72491                     White Female   TRT   VIS1   PT192 #> 766 45.78702                     White Female   TRT   VIS2   PT192 #> 767 48.74886                     White Female   TRT   VIS3   PT192 #> 768 84.08449                     White Female   TRT   VIS4   PT192 #> 770 30.19495                     Asian   Male   PBO   VIS2   PT193 #> 771 36.78573                     Asian   Male   PBO   VIS3   PT193 #> 772 61.03588                     Asian   Male   PBO   VIS4   PT193 #> 773 20.36749 Black or African American   Male   PBO   VIS1   PT194 #> 774 35.22480 Black or African American   Male   PBO   VIS2   PT194 #> 775 37.42847 Black or African American   Male   PBO   VIS3   PT194 #> 776 30.20501 Black or African American   Male   PBO   VIS4   PT194 #> 778 49.12862                     White Female   TRT   VIS2   PT195 #> 779 47.31234                     White Female   TRT   VIS3   PT195 #> 781 19.28388                     Asian   Male   PBO   VIS1   PT196 #> 782 30.00682                     Asian   Male   PBO   VIS2   PT196 #> 784 49.21768                     Asian   Male   PBO   VIS4   PT196 #> 788 40.13353 Black or African American   Male   PBO   VIS4   PT197 #> 789 42.34534 Black or African American   Male   TRT   VIS1   PT198 #> 790 52.32575 Black or African American   Male   TRT   VIS2   PT198 #> 792 69.26254 Black or African American   Male   TRT   VIS4   PT198 #> 797 35.70341 Black or African American   Male   PBO   VIS1   PT200 #> 798 41.64454 Black or African American   Male   PBO   VIS2   PT200 #> 800 54.25081 Black or African American   Male   PBO   VIS4   PT200 model.frame(object, include = \"subject_var\") #>                          RACE    SEX ARMCD AVISIT USUBJID #> 2   Black or African American Female   TRT   VIS2     PT1 #> 4   Black or African American Female   TRT   VIS4     PT1 #> 6                       Asian   Male   PBO   VIS2     PT2 #> 7                       Asian   Male   PBO   VIS3     PT2 #> 8                       Asian   Male   PBO   VIS4     PT2 #> 10  Black or African American Female   PBO   VIS2     PT3 #> 12  Black or African American Female   PBO   VIS4     PT3 #> 13                      Asian Female   TRT   VIS1     PT4 #> 14                      Asian Female   TRT   VIS2     PT4 #> 16                      Asian Female   TRT   VIS4     PT4 #> 17  Black or African American   Male   PBO   VIS1     PT5 #> 19  Black or African American   Male   PBO   VIS3     PT5 #> 20  Black or African American   Male   PBO   VIS4     PT5 #> 23  Black or African American   Male   PBO   VIS3     PT6 #> 25                      Asian Female   PBO   VIS1     PT7 #> 26                      Asian Female   PBO   VIS2     PT7 #> 28                      Asian Female   PBO   VIS4     PT7 #> 29  Black or African American   Male   PBO   VIS1     PT8 #> 30  Black or African American   Male   PBO   VIS2     PT8 #> 31  Black or African American   Male   PBO   VIS3     PT8 #> 32  Black or African American   Male   PBO   VIS4     PT8 #> 33                      White   Male   TRT   VIS1     PT9 #> 34                      White   Male   TRT   VIS2     PT9 #> 36                      White   Male   TRT   VIS4     PT9 #> 39  Black or African American Female   PBO   VIS3    PT10 #> 41                      Asian Female   TRT   VIS1    PT11 #> 42                      Asian Female   TRT   VIS2    PT11 #> 43                      Asian Female   TRT   VIS3    PT11 #> 44                      Asian Female   TRT   VIS4    PT11 #> 45                      Asian   Male   PBO   VIS1    PT12 #> 46                      Asian   Male   PBO   VIS2    PT12 #> 47                      Asian   Male   PBO   VIS3    PT12 #> 51                      White   Male   TRT   VIS3    PT13 #> 52                      White   Male   TRT   VIS4    PT13 #> 55  Black or African American   Male   PBO   VIS3    PT14 #> 59                      Asian   Male   PBO   VIS3    PT15 #> 60                      Asian   Male   PBO   VIS4    PT15 #> 62                      Asian Female   PBO   VIS2    PT16 #> 64                      Asian Female   PBO   VIS4    PT16 #> 65                      White Female   PBO   VIS1    PT17 #> 68                      White Female   PBO   VIS4    PT17 #> 69                      Asian   Male   TRT   VIS1    PT18 #> 70                      Asian   Male   TRT   VIS2    PT18 #> 72                      Asian   Male   TRT   VIS4    PT18 #> 73                      Asian   Male   TRT   VIS1    PT19 #> 74                      Asian   Male   TRT   VIS2    PT19 #> 75                      Asian   Male   TRT   VIS3    PT19 #> 76                      Asian   Male   TRT   VIS4    PT19 #> 78                      White Female   TRT   VIS2    PT20 #> 79                      White Female   TRT   VIS3    PT20 #> 82                      White   Male   TRT   VIS2    PT21 #> 83                      White   Male   TRT   VIS3    PT21 #> 84                      White   Male   TRT   VIS4    PT21 #> 85                      White   Male   TRT   VIS1    PT22 #> 86                      White   Male   TRT   VIS2    PT22 #> 87                      White   Male   TRT   VIS3    PT22 #> 88                      White   Male   TRT   VIS4    PT22 #> 89  Black or African American Female   PBO   VIS1    PT23 #> 90  Black or African American Female   PBO   VIS2    PT23 #> 91  Black or African American Female   PBO   VIS3    PT23 #> 93                      White Female   TRT   VIS1    PT24 #> 94                      White Female   TRT   VIS2    PT24 #> 95                      White Female   TRT   VIS3    PT24 #> 96                      White Female   TRT   VIS4    PT24 #> 97                      White Female   TRT   VIS1    PT25 #> 98                      White Female   TRT   VIS2    PT25 #> 99                      White Female   TRT   VIS3    PT25 #> 100                     White Female   TRT   VIS4    PT25 #> 101                     White Female   TRT   VIS1    PT26 #> 102                     White Female   TRT   VIS2    PT26 #> 103                     White Female   TRT   VIS3    PT26 #> 104                     White Female   TRT   VIS4    PT26 #> 105 Black or African American Female   TRT   VIS1    PT27 #> 107 Black or African American Female   TRT   VIS3    PT27 #> 108 Black or African American Female   TRT   VIS4    PT27 #> 109 Black or African American   Male   TRT   VIS1    PT28 #> 110 Black or African American   Male   TRT   VIS2    PT28 #> 111 Black or African American   Male   TRT   VIS3    PT28 #> 112 Black or African American   Male   TRT   VIS4    PT28 #> 113 Black or African American   Male   TRT   VIS1    PT29 #> 114 Black or African American   Male   TRT   VIS2    PT29 #> 116 Black or African American   Male   TRT   VIS4    PT29 #> 117                     Asian Female   TRT   VIS1    PT30 #> 118                     Asian Female   TRT   VIS2    PT30 #> 119                     Asian Female   TRT   VIS3    PT30 #> 120                     Asian Female   TRT   VIS4    PT30 #> 121                     Asian Female   PBO   VIS1    PT31 #> 123                     Asian Female   PBO   VIS3    PT31 #> 125 Black or African American   Male   TRT   VIS1    PT32 #> 128 Black or African American   Male   TRT   VIS4    PT32 #> 129 Black or African American   Male   TRT   VIS1    PT33 #> 130 Black or African American   Male   TRT   VIS2    PT33 #> 132 Black or African American   Male   TRT   VIS4    PT33 #> 133                     Asian Female   PBO   VIS1    PT34 #> 134                     Asian Female   PBO   VIS2    PT34 #> 135                     Asian Female   PBO   VIS3    PT34 #> 136                     Asian Female   PBO   VIS4    PT34 #> 137 Black or African American Female   TRT   VIS1    PT35 #> 138 Black or African American Female   TRT   VIS2    PT35 #> 140 Black or African American Female   TRT   VIS4    PT35 #> 142                     Asian Female   TRT   VIS2    PT36 #> 144                     Asian Female   TRT   VIS4    PT36 #> 145                     White Female   PBO   VIS1    PT37 #> 146                     White Female   PBO   VIS2    PT37 #> 147                     White Female   PBO   VIS3    PT37 #> 148                     White Female   PBO   VIS4    PT37 #> 149                     Asian Female   PBO   VIS1    PT38 #> 151                     Asian Female   PBO   VIS3    PT38 #> 153                     Asian Female   PBO   VIS1    PT39 #> 155                     Asian Female   PBO   VIS3    PT39 #> 156                     Asian Female   PBO   VIS4    PT39 #> 157 Black or African American   Male   PBO   VIS1    PT40 #> 158 Black or African American   Male   PBO   VIS2    PT40 #> 159 Black or African American   Male   PBO   VIS3    PT40 #> 162 Black or African American   Male   PBO   VIS2    PT41 #> 163 Black or African American   Male   PBO   VIS3    PT41 #> 164 Black or African American   Male   PBO   VIS4    PT41 #> 165 Black or African American   Male   PBO   VIS1    PT42 #> 168 Black or African American   Male   PBO   VIS4    PT42 #> 169 Black or African American Female   TRT   VIS1    PT43 #> 170 Black or African American Female   TRT   VIS2    PT43 #> 171 Black or African American Female   TRT   VIS3    PT43 #> 172 Black or African American Female   TRT   VIS4    PT43 #> 173 Black or African American   Male   TRT   VIS1    PT44 #> 177                     Asian Female   PBO   VIS1    PT45 #> 178                     Asian Female   PBO   VIS2    PT45 #> 179                     Asian Female   PBO   VIS3    PT45 #> 180                     Asian Female   PBO   VIS4    PT45 #> 181                     Asian   Male   PBO   VIS1    PT46 #> 182                     Asian   Male   PBO   VIS2    PT46 #> 183                     Asian   Male   PBO   VIS3    PT46 #> 185                     Asian   Male   TRT   VIS1    PT47 #> 186                     Asian   Male   TRT   VIS2    PT47 #> 187                     Asian   Male   TRT   VIS3    PT47 #> 190 Black or African American   Male   PBO   VIS2    PT48 #> 191 Black or African American   Male   PBO   VIS3    PT48 #> 193                     White Female   PBO   VIS1    PT49 #> 194                     White Female   PBO   VIS2    PT49 #> 195                     White Female   PBO   VIS3    PT49 #> 197                     Asian Female   TRT   VIS1    PT50 #> 198                     Asian Female   TRT   VIS2    PT50 #> 199                     Asian Female   TRT   VIS3    PT50 #> 201 Black or African American Female   TRT   VIS1    PT51 #> 202 Black or African American Female   TRT   VIS2    PT51 #> 204 Black or African American Female   TRT   VIS4    PT51 #> 206 Black or African American Female   TRT   VIS2    PT52 #> 208 Black or African American Female   TRT   VIS4    PT52 #> 209                     White   Male   PBO   VIS1    PT53 #> 210                     White   Male   PBO   VIS2    PT53 #> 217                     Asian   Male   TRT   VIS1    PT55 #> 218                     Asian   Male   TRT   VIS2    PT55 #> 219                     Asian   Male   TRT   VIS3    PT55 #> 221 Black or African American   Male   PBO   VIS1    PT56 #> 224 Black or African American   Male   PBO   VIS4    PT56 #> 226 Black or African American   Male   TRT   VIS2    PT57 #> 227 Black or African American   Male   TRT   VIS3    PT57 #> 228 Black or African American   Male   TRT   VIS4    PT57 #> 230                     White Female   TRT   VIS2    PT58 #> 231                     White Female   TRT   VIS3    PT58 #> 233                     White Female   TRT   VIS1    PT59 #> 235                     White Female   TRT   VIS3    PT59 #> 236                     White Female   TRT   VIS4    PT59 #> 237 Black or African American Female   TRT   VIS1    PT60 #> 238 Black or African American Female   TRT   VIS2    PT60 #> 239 Black or African American Female   TRT   VIS3    PT60 #> 240 Black or African American Female   TRT   VIS4    PT60 #> 241                     Asian   Male   TRT   VIS1    PT61 #> 242                     Asian   Male   TRT   VIS2    PT61 #> 244                     Asian   Male   TRT   VIS4    PT61 #> 246                     Asian Female   PBO   VIS2    PT62 #> 250                     White Female   PBO   VIS2    PT63 #> 251                     White Female   PBO   VIS3    PT63 #> 252                     White Female   PBO   VIS4    PT63 #> 253 Black or African American Female   PBO   VIS1    PT64 #> 254 Black or African American Female   PBO   VIS2    PT64 #> 256 Black or African American Female   PBO   VIS4    PT64 #> 257                     Asian Female   TRT   VIS1    PT65 #> 258                     Asian Female   TRT   VIS2    PT65 #> 259                     Asian Female   TRT   VIS3    PT65 #> 260                     Asian Female   TRT   VIS4    PT65 #> 261                     Asian   Male   TRT   VIS1    PT66 #> 262                     Asian   Male   TRT   VIS2    PT66 #> 263                     Asian   Male   TRT   VIS3    PT66 #> 264                     Asian   Male   TRT   VIS4    PT66 #> 265                     White Female   TRT   VIS1    PT67 #> 266                     White Female   TRT   VIS2    PT67 #> 267                     White Female   TRT   VIS3    PT67 #> 268                     White Female   TRT   VIS4    PT67 #> 269                     White Female   TRT   VIS1    PT68 #> 270                     White Female   TRT   VIS2    PT68 #> 273 Black or African American   Male   PBO   VIS1    PT69 #> 274 Black or African American   Male   PBO   VIS2    PT69 #> 275 Black or African American   Male   PBO   VIS3    PT69 #> 276 Black or African American   Male   PBO   VIS4    PT69 #> 277 Black or African American   Male   PBO   VIS1    PT70 #> 278 Black or African American   Male   PBO   VIS2    PT70 #> 280 Black or African American   Male   PBO   VIS4    PT70 #> 281                     Asian   Male   TRT   VIS1    PT71 #> 282                     Asian   Male   TRT   VIS2    PT71 #> 283                     Asian   Male   TRT   VIS3    PT71 #> 284                     Asian   Male   TRT   VIS4    PT71 #> 285                     Asian Female   TRT   VIS1    PT72 #> 286                     Asian Female   TRT   VIS2    PT72 #> 287                     Asian Female   TRT   VIS3    PT72 #> 291                     White   Male   PBO   VIS3    PT73 #> 292                     White   Male   PBO   VIS4    PT73 #> 293                     White Female   PBO   VIS1    PT74 #> 295                     White Female   PBO   VIS3    PT74 #> 296                     White Female   PBO   VIS4    PT74 #> 298                     White   Male   PBO   VIS2    PT75 #> 299                     White   Male   PBO   VIS3    PT75 #> 300                     White   Male   PBO   VIS4    PT75 #> 301                     White   Male   TRT   VIS1    PT76 #> 304                     White   Male   TRT   VIS4    PT76 #> 305                     Asian   Male   TRT   VIS1    PT77 #> 306                     Asian   Male   TRT   VIS2    PT77 #> 307                     Asian   Male   TRT   VIS3    PT77 #> 308                     Asian   Male   TRT   VIS4    PT77 #> 310                     White Female   TRT   VIS2    PT78 #> 311                     White Female   TRT   VIS3    PT78 #> 312                     White Female   TRT   VIS4    PT78 #> 316                     Asian Female   PBO   VIS4    PT79 #> 317                     Asian   Male   TRT   VIS1    PT80 #> 318                     Asian   Male   TRT   VIS2    PT80 #> 319                     Asian   Male   TRT   VIS3    PT80 #> 322                     White   Male   PBO   VIS2    PT81 #> 323                     White   Male   PBO   VIS3    PT81 #> 324                     White   Male   PBO   VIS4    PT81 #> 325 Black or African American Female   PBO   VIS1    PT82 #> 327 Black or African American Female   PBO   VIS3    PT82 #> 328 Black or African American Female   PBO   VIS4    PT82 #> 329                     White   Male   TRT   VIS1    PT83 #> 330                     White   Male   TRT   VIS2    PT83 #> 331                     White   Male   TRT   VIS3    PT83 #> 332                     White   Male   TRT   VIS4    PT83 #> 336                     Asian Female   PBO   VIS4    PT84 #> 339                     Asian Female   PBO   VIS3    PT85 #> 340                     Asian Female   PBO   VIS4    PT85 #> 341 Black or African American Female   TRT   VIS1    PT86 #> 342 Black or African American Female   TRT   VIS2    PT86 #> 343 Black or African American Female   TRT   VIS3    PT86 #> 344 Black or African American Female   TRT   VIS4    PT86 #> 345                     White   Male   PBO   VIS1    PT87 #> 347                     White   Male   PBO   VIS3    PT87 #> 349 Black or African American Female   PBO   VIS1    PT88 #> 351 Black or African American Female   PBO   VIS3    PT88 #> 352 Black or African American Female   PBO   VIS4    PT88 #> 353 Black or African American   Male   PBO   VIS1    PT89 #> 354 Black or African American   Male   PBO   VIS2    PT89 #> 355 Black or African American   Male   PBO   VIS3    PT89 #> 356 Black or African American   Male   PBO   VIS4    PT89 #> 357                     Asian   Male   PBO   VIS1    PT90 #> 363                     White Female   TRT   VIS3    PT91 #> 364                     White Female   TRT   VIS4    PT91 #> 365                     White Female   TRT   VIS1    PT92 #> 367                     White Female   TRT   VIS3    PT92 #> 368                     White Female   TRT   VIS4    PT92 #> 370 Black or African American   Male   PBO   VIS2    PT93 #> 371 Black or African American   Male   PBO   VIS3    PT93 #> 372 Black or African American   Male   PBO   VIS4    PT93 #> 373                     Asian Female   PBO   VIS1    PT94 #> 375                     Asian Female   PBO   VIS3    PT94 #> 376                     Asian Female   PBO   VIS4    PT94 #> 378                     Asian Female   PBO   VIS2    PT95 #> 379                     Asian Female   PBO   VIS3    PT95 #> 381 Black or African American Female   PBO   VIS1    PT96 #> 382 Black or African American Female   PBO   VIS2    PT96 #> 384 Black or African American Female   PBO   VIS4    PT96 #> 385                     White   Male   TRT   VIS1    PT97 #> 386                     White   Male   TRT   VIS2    PT97 #> 388                     White   Male   TRT   VIS4    PT97 #> 389                     Asian   Male   PBO   VIS1    PT98 #> 390                     Asian   Male   PBO   VIS2    PT98 #> 391                     Asian   Male   PBO   VIS3    PT98 #> 392                     Asian   Male   PBO   VIS4    PT98 #> 394 Black or African American   Male   PBO   VIS2    PT99 #> 397 Black or African American Female   PBO   VIS1   PT100 #> 398 Black or African American Female   PBO   VIS2   PT100 #> 399 Black or African American Female   PBO   VIS3   PT100 #> 402                     White   Male   TRT   VIS2   PT101 #> 403                     White   Male   TRT   VIS3   PT101 #> 405                     Asian Female   PBO   VIS1   PT102 #> 406                     Asian Female   PBO   VIS2   PT102 #> 407                     Asian Female   PBO   VIS3   PT102 #> 408                     Asian Female   PBO   VIS4   PT102 #> 409                     Asian Female   PBO   VIS1   PT103 #> 410                     Asian Female   PBO   VIS2   PT103 #> 411                     Asian Female   PBO   VIS3   PT103 #> 413 Black or African American Female   PBO   VIS1   PT104 #> 415 Black or African American Female   PBO   VIS3   PT104 #> 416 Black or African American Female   PBO   VIS4   PT104 #> 418 Black or African American Female   TRT   VIS2   PT105 #> 419 Black or African American Female   TRT   VIS3   PT105 #> 421                     Asian Female   TRT   VIS1   PT106 #> 422                     Asian Female   TRT   VIS2   PT106 #> 423                     Asian Female   TRT   VIS3   PT106 #> 424                     Asian Female   TRT   VIS4   PT106 #> 427                     White Female   PBO   VIS3   PT107 #> 428                     White Female   PBO   VIS4   PT107 #> 429                     White   Male   TRT   VIS1   PT108 #> 430                     White   Male   TRT   VIS2   PT108 #> 431                     White   Male   TRT   VIS3   PT108 #> 432                     White   Male   TRT   VIS4   PT108 #> 434 Black or African American Female   PBO   VIS2   PT109 #> 435 Black or African American Female   PBO   VIS3   PT109 #> 436 Black or African American Female   PBO   VIS4   PT109 #> 438                     Asian   Male   TRT   VIS2   PT110 #> 439                     Asian   Male   TRT   VIS3   PT110 #> 444                     White Female   PBO   VIS4   PT111 #> 445 Black or African American Female   PBO   VIS1   PT112 #> 447 Black or African American Female   PBO   VIS3   PT112 #> 449                     Asian   Male   PBO   VIS1   PT113 #> 450                     Asian   Male   PBO   VIS2   PT113 #> 451                     Asian   Male   PBO   VIS3   PT113 #> 453 Black or African American   Male   PBO   VIS1   PT114 #> 454 Black or African American   Male   PBO   VIS2   PT114 #> 455 Black or African American   Male   PBO   VIS3   PT114 #> 456 Black or African American   Male   PBO   VIS4   PT114 #> 457                     Asian Female   PBO   VIS1   PT115 #> 458                     Asian Female   PBO   VIS2   PT115 #> 459                     Asian Female   PBO   VIS3   PT115 #> 461 Black or African American   Male   TRT   VIS1   PT116 #> 463 Black or African American   Male   TRT   VIS3   PT116 #> 464 Black or African American   Male   TRT   VIS4   PT116 #> 465 Black or African American   Male   PBO   VIS1   PT117 #> 469                     Asian Female   PBO   VIS1   PT118 #> 470                     Asian Female   PBO   VIS2   PT118 #> 471                     Asian Female   PBO   VIS3   PT118 #> 473                     White   Male   TRT   VIS1   PT119 #> 474                     White   Male   TRT   VIS2   PT119 #> 477                     Asian Female   PBO   VIS1   PT120 #> 484 Black or African American   Male   TRT   VIS4   PT121 #> 487                     Asian Female   PBO   VIS3   PT122 #> 489                     White Female   PBO   VIS1   PT123 #> 490                     White Female   PBO   VIS2   PT123 #> 491                     White Female   PBO   VIS3   PT123 #> 494                     Asian Female   TRT   VIS2   PT124 #> 495                     Asian Female   TRT   VIS3   PT124 #> 496                     Asian Female   TRT   VIS4   PT124 #> 497                     White   Male   PBO   VIS1   PT125 #> 498                     White   Male   PBO   VIS2   PT125 #> 499                     White   Male   PBO   VIS3   PT125 #> 501                     Asian   Male   TRT   VIS1   PT126 #> 502                     Asian   Male   TRT   VIS2   PT126 #> 504                     Asian   Male   TRT   VIS4   PT126 #> 505 Black or African American Female   TRT   VIS1   PT127 #> 508 Black or African American Female   TRT   VIS4   PT127 #> 509                     Asian Female   TRT   VIS1   PT128 #> 510                     Asian Female   TRT   VIS2   PT128 #> 511                     Asian Female   TRT   VIS3   PT128 #> 512                     Asian Female   TRT   VIS4   PT128 #> 513                     White   Male   TRT   VIS1   PT129 #> 518                     White   Male   PBO   VIS2   PT130 #> 519                     White   Male   PBO   VIS3   PT130 #> 521                     Asian Female   PBO   VIS1   PT131 #> 522                     Asian Female   PBO   VIS2   PT131 #> 523                     Asian Female   PBO   VIS3   PT131 #> 524                     Asian Female   PBO   VIS4   PT131 #> 526                     Asian   Male   PBO   VIS2   PT132 #> 527                     Asian   Male   PBO   VIS3   PT132 #> 528                     Asian   Male   PBO   VIS4   PT132 #> 530                     White   Male   PBO   VIS2   PT133 #> 531                     White   Male   PBO   VIS3   PT133 #> 532                     White   Male   PBO   VIS4   PT133 #> 534 Black or African American   Male   PBO   VIS2   PT134 #> 535 Black or African American   Male   PBO   VIS3   PT134 #> 536 Black or African American   Male   PBO   VIS4   PT134 #> 537 Black or African American   Male   PBO   VIS1   PT135 #> 538 Black or African American   Male   PBO   VIS2   PT135 #> 539 Black or African American   Male   PBO   VIS3   PT135 #> 540 Black or African American   Male   PBO   VIS4   PT135 #> 541                     White Female   TRT   VIS1   PT136 #> 544                     White Female   TRT   VIS4   PT136 #> 545                     Asian Female   TRT   VIS1   PT137 #> 546                     Asian Female   TRT   VIS2   PT137 #> 547                     Asian Female   TRT   VIS3   PT137 #> 548                     Asian Female   TRT   VIS4   PT137 #> 549                     Asian   Male   TRT   VIS1   PT138 #> 550                     Asian   Male   TRT   VIS2   PT138 #> 551                     Asian   Male   TRT   VIS3   PT138 #> 555                     Asian Female   TRT   VIS3   PT139 #> 556                     Asian Female   TRT   VIS4   PT139 #> 557 Black or African American Female   PBO   VIS1   PT140 #> 558 Black or African American Female   PBO   VIS2   PT140 #> 560 Black or African American Female   PBO   VIS4   PT140 #> 562                     White   Male   TRT   VIS2   PT141 #> 564                     White   Male   TRT   VIS4   PT141 #> 569 Black or African American Female   TRT   VIS1   PT143 #> 570 Black or African American Female   TRT   VIS2   PT143 #> 572 Black or African American Female   TRT   VIS4   PT143 #> 573                     Asian Female   PBO   VIS1   PT144 #> 574                     Asian Female   PBO   VIS2   PT144 #> 575                     Asian Female   PBO   VIS3   PT144 #> 576                     Asian Female   PBO   VIS4   PT144 #> 577 Black or African American   Male   PBO   VIS1   PT145 #> 578 Black or African American   Male   PBO   VIS2   PT145 #> 579 Black or African American   Male   PBO   VIS3   PT145 #> 582                     Asian Female   TRT   VIS2   PT146 #> 583                     Asian Female   TRT   VIS3   PT146 #> 584                     Asian Female   TRT   VIS4   PT146 #> 585                     Asian Female   PBO   VIS1   PT147 #> 586                     Asian Female   PBO   VIS2   PT147 #> 587                     Asian Female   PBO   VIS3   PT147 #> 590 Black or African American   Male   TRT   VIS2   PT148 #> 591 Black or African American   Male   TRT   VIS3   PT148 #> 593                     Asian Female   PBO   VIS1   PT149 #> 594                     Asian Female   PBO   VIS2   PT149 #> 595                     Asian Female   PBO   VIS3   PT149 #> 596                     Asian Female   PBO   VIS4   PT149 #> 599                     White   Male   PBO   VIS3   PT150 #> 600                     White   Male   PBO   VIS4   PT150 #> 601                     Asian Female   PBO   VIS1   PT151 #> 602                     Asian Female   PBO   VIS2   PT151 #> 604                     Asian Female   PBO   VIS4   PT151 #> 606                     Asian Female   TRT   VIS2   PT152 #> 608                     Asian Female   TRT   VIS4   PT152 #> 609 Black or African American   Male   PBO   VIS1   PT153 #> 610 Black or African American   Male   PBO   VIS2   PT153 #> 611 Black or African American   Male   PBO   VIS3   PT153 #> 612 Black or African American   Male   PBO   VIS4   PT153 #> 613 Black or African American Female   PBO   VIS1   PT154 #> 614 Black or African American Female   PBO   VIS2   PT154 #> 616 Black or African American Female   PBO   VIS4   PT154 #> 617                     Asian   Male   TRT   VIS1   PT155 #> 619                     Asian   Male   TRT   VIS3   PT155 #> 620                     Asian   Male   TRT   VIS4   PT155 #> 621                     White   Male   PBO   VIS1   PT156 #> 622                     White   Male   PBO   VIS2   PT156 #> 623                     White   Male   PBO   VIS3   PT156 #> 624                     White   Male   PBO   VIS4   PT156 #> 625 Black or African American   Male   TRT   VIS1   PT157 #> 628 Black or African American   Male   TRT   VIS4   PT157 #> 630 Black or African American   Male   TRT   VIS2   PT158 #> 631 Black or African American   Male   TRT   VIS3   PT158 #> 632 Black or African American   Male   TRT   VIS4   PT158 #> 633                     Asian Female   TRT   VIS1   PT159 #> 634                     Asian Female   TRT   VIS2   PT159 #> 638                     Asian   Male   TRT   VIS2   PT160 #> 639                     Asian   Male   TRT   VIS3   PT160 #> 640                     Asian   Male   TRT   VIS4   PT160 #> 642 Black or African American Female   PBO   VIS2   PT161 #> 645                     Asian   Male   PBO   VIS1   PT162 #> 648                     Asian   Male   PBO   VIS4   PT162 #> 650                     White   Male   PBO   VIS2   PT163 #> 652                     White   Male   PBO   VIS4   PT163 #> 654 Black or African American Female   PBO   VIS2   PT164 #> 655 Black or African American Female   PBO   VIS3   PT164 #> 656 Black or African American Female   PBO   VIS4   PT164 #> 657                     White Female   TRT   VIS1   PT165 #> 661                     Asian   Male   TRT   VIS1   PT166 #> 665 Black or African American   Male   PBO   VIS1   PT167 #> 666 Black or African American   Male   PBO   VIS2   PT167 #> 668 Black or African American   Male   PBO   VIS4   PT167 #> 669 Black or African American Female   PBO   VIS1   PT168 #> 670 Black or African American Female   PBO   VIS2   PT168 #> 671 Black or African American Female   PBO   VIS3   PT168 #> 673                     White Female   PBO   VIS1   PT169 #> 674                     White Female   PBO   VIS2   PT169 #> 678                     White Female   TRT   VIS2   PT170 #> 679                     White Female   TRT   VIS3   PT170 #> 680                     White Female   TRT   VIS4   PT170 #> 682                     Asian Female   PBO   VIS2   PT171 #> 684                     Asian Female   PBO   VIS4   PT171 #> 685                     Asian Female   TRT   VIS1   PT172 #> 686                     Asian Female   TRT   VIS2   PT172 #> 687                     Asian Female   TRT   VIS3   PT172 #> 689                     White Female   TRT   VIS1   PT173 #> 690                     White Female   TRT   VIS2   PT173 #> 691                     White Female   TRT   VIS3   PT173 #> 693 Black or African American Female   TRT   VIS1   PT174 #> 694 Black or African American Female   TRT   VIS2   PT174 #> 695 Black or African American Female   TRT   VIS3   PT174 #> 697 Black or African American Female   PBO   VIS1   PT175 #> 698 Black or African American Female   PBO   VIS2   PT175 #> 700 Black or African American Female   PBO   VIS4   PT175 #> 701 Black or African American   Male   TRT   VIS1   PT176 #> 702 Black or African American   Male   TRT   VIS2   PT176 #> 704 Black or African American   Male   TRT   VIS4   PT176 #> 707 Black or African American   Male   PBO   VIS3   PT177 #> 709 Black or African American   Male   PBO   VIS1   PT178 #> 712 Black or African American   Male   PBO   VIS4   PT178 #> 713                     White   Male   TRT   VIS1   PT179 #> 715                     White   Male   TRT   VIS3   PT179 #> 716                     White   Male   TRT   VIS4   PT179 #> 717                     Asian   Male   PBO   VIS1   PT180 #> 718                     Asian   Male   PBO   VIS2   PT180 #> 719                     Asian   Male   PBO   VIS3   PT180 #> 721                     Asian Female   PBO   VIS1   PT181 #> 723                     Asian Female   PBO   VIS3   PT181 #> 724                     Asian Female   PBO   VIS4   PT181 #> 727 Black or African American Female   TRT   VIS3   PT182 #> 728 Black or African American Female   TRT   VIS4   PT182 #> 729 Black or African American Female   TRT   VIS1   PT183 #> 730 Black or African American Female   TRT   VIS2   PT183 #> 734                     White Female   TRT   VIS2   PT184 #> 736                     White Female   TRT   VIS4   PT184 #> 738 Black or African American Female   PBO   VIS2   PT185 #> 739 Black or African American Female   PBO   VIS3   PT185 #> 740 Black or African American Female   PBO   VIS4   PT185 #> 741                     White   Male   PBO   VIS1   PT186 #> 742                     White   Male   PBO   VIS2   PT186 #> 744                     White   Male   PBO   VIS4   PT186 #> 745 Black or African American Female   PBO   VIS1   PT187 #> 749 Black or African American Female   PBO   VIS1   PT188 #> 751 Black or African American Female   PBO   VIS3   PT188 #> 753                     Asian Female   TRT   VIS1   PT189 #> 754                     Asian Female   TRT   VIS2   PT189 #> 755                     Asian Female   TRT   VIS3   PT189 #> 757 Black or African American Female   TRT   VIS1   PT190 #> 758 Black or African American Female   TRT   VIS2   PT190 #> 759 Black or African American Female   TRT   VIS3   PT190 #> 760 Black or African American Female   TRT   VIS4   PT190 #> 761                     White   Male   TRT   VIS1   PT191 #> 764                     White   Male   TRT   VIS4   PT191 #> 765                     White Female   TRT   VIS1   PT192 #> 766                     White Female   TRT   VIS2   PT192 #> 767                     White Female   TRT   VIS3   PT192 #> 768                     White Female   TRT   VIS4   PT192 #> 770                     Asian   Male   PBO   VIS2   PT193 #> 771                     Asian   Male   PBO   VIS3   PT193 #> 772                     Asian   Male   PBO   VIS4   PT193 #> 773 Black or African American   Male   PBO   VIS1   PT194 #> 774 Black or African American   Male   PBO   VIS2   PT194 #> 775 Black or African American   Male   PBO   VIS3   PT194 #> 776 Black or African American   Male   PBO   VIS4   PT194 #> 778                     White Female   TRT   VIS2   PT195 #> 779                     White Female   TRT   VIS3   PT195 #> 781                     Asian   Male   PBO   VIS1   PT196 #> 782                     Asian   Male   PBO   VIS2   PT196 #> 784                     Asian   Male   PBO   VIS4   PT196 #> 788 Black or African American   Male   PBO   VIS4   PT197 #> 789 Black or African American   Male   TRT   VIS1   PT198 #> 790 Black or African American   Male   TRT   VIS2   PT198 #> 792 Black or African American   Male   TRT   VIS4   PT198 #> 797 Black or African American   Male   PBO   VIS1   PT200 #> 798 Black or African American   Male   PBO   VIS2   PT200 #> 800 Black or African American   Male   PBO   VIS4   PT200 # Model matrix: model.matrix(object) #>     (Intercept) RACEBlack or African American RACEWhite SEXFemale ARMCDTRT #> 2             1                             1         0         1        1 #> 4             1                             1         0         1        1 #> 6             1                             0         0         0        0 #> 7             1                             0         0         0        0 #> 8             1                             0         0         0        0 #> 10            1                             1         0         1        0 #> 12            1                             1         0         1        0 #> 13            1                             0         0         1        1 #> 14            1                             0         0         1        1 #> 16            1                             0         0         1        1 #> 17            1                             1         0         0        0 #> 19            1                             1         0         0        0 #> 20            1                             1         0         0        0 #> 23            1                             1         0         0        0 #> 25            1                             0         0         1        0 #> 26            1                             0         0         1        0 #> 28            1                             0         0         1        0 #> 29            1                             1         0         0        0 #> 30            1                             1         0         0        0 #> 31            1                             1         0         0        0 #> 32            1                             1         0         0        0 #> 33            1                             0         1         0        1 #> 34            1                             0         1         0        1 #> 36            1                             0         1         0        1 #> 39            1                             1         0         1        0 #> 41            1                             0         0         1        1 #> 42            1                             0         0         1        1 #> 43            1                             0         0         1        1 #> 44            1                             0         0         1        1 #> 45            1                             0         0         0        0 #> 46            1                             0         0         0        0 #> 47            1                             0         0         0        0 #> 51            1                             0         1         0        1 #> 52            1                             0         1         0        1 #> 55            1                             1         0         0        0 #> 59            1                             0         0         0        0 #> 60            1                             0         0         0        0 #> 62            1                             0         0         1        0 #> 64            1                             0         0         1        0 #> 65            1                             0         1         1        0 #> 68            1                             0         1         1        0 #> 69            1                             0         0         0        1 #> 70            1                             0         0         0        1 #> 72            1                             0         0         0        1 #> 73            1                             0         0         0        1 #> 74            1                             0         0         0        1 #> 75            1                             0         0         0        1 #> 76            1                             0         0         0        1 #> 78            1                             0         1         1        1 #> 79            1                             0         1         1        1 #> 82            1                             0         1         0        1 #> 83            1                             0         1         0        1 #> 84            1                             0         1         0        1 #> 85            1                             0         1         0        1 #> 86            1                             0         1         0        1 #> 87            1                             0         1         0        1 #> 88            1                             0         1         0        1 #> 89            1                             1         0         1        0 #> 90            1                             1         0         1        0 #> 91            1                             1         0         1        0 #> 93            1                             0         1         1        1 #> 94            1                             0         1         1        1 #> 95            1                             0         1         1        1 #> 96            1                             0         1         1        1 #> 97            1                             0         1         1        1 #> 98            1                             0         1         1        1 #> 99            1                             0         1         1        1 #> 100           1                             0         1         1        1 #> 101           1                             0         1         1        1 #> 102           1                             0         1         1        1 #> 103           1                             0         1         1        1 #> 104           1                             0         1         1        1 #> 105           1                             1         0         1        1 #> 107           1                             1         0         1        1 #> 108           1                             1         0         1        1 #> 109           1                             1         0         0        1 #> 110           1                             1         0         0        1 #> 111           1                             1         0         0        1 #> 112           1                             1         0         0        1 #> 113           1                             1         0         0        1 #> 114           1                             1         0         0        1 #> 116           1                             1         0         0        1 #> 117           1                             0         0         1        1 #> 118           1                             0         0         1        1 #> 119           1                             0         0         1        1 #> 120           1                             0         0         1        1 #> 121           1                             0         0         1        0 #> 123           1                             0         0         1        0 #> 125           1                             1         0         0        1 #> 128           1                             1         0         0        1 #> 129           1                             1         0         0        1 #> 130           1                             1         0         0        1 #> 132           1                             1         0         0        1 #> 133           1                             0         0         1        0 #> 134           1                             0         0         1        0 #> 135           1                             0         0         1        0 #> 136           1                             0         0         1        0 #> 137           1                             1         0         1        1 #> 138           1                             1         0         1        1 #> 140           1                             1         0         1        1 #> 142           1                             0         0         1        1 #> 144           1                             0         0         1        1 #> 145           1                             0         1         1        0 #> 146           1                             0         1         1        0 #> 147           1                             0         1         1        0 #> 148           1                             0         1         1        0 #> 149           1                             0         0         1        0 #> 151           1                             0         0         1        0 #> 153           1                             0         0         1        0 #> 155           1                             0         0         1        0 #> 156           1                             0         0         1        0 #> 157           1                             1         0         0        0 #> 158           1                             1         0         0        0 #> 159           1                             1         0         0        0 #> 162           1                             1         0         0        0 #> 163           1                             1         0         0        0 #> 164           1                             1         0         0        0 #> 165           1                             1         0         0        0 #> 168           1                             1         0         0        0 #> 169           1                             1         0         1        1 #> 170           1                             1         0         1        1 #> 171           1                             1         0         1        1 #> 172           1                             1         0         1        1 #> 173           1                             1         0         0        1 #> 177           1                             0         0         1        0 #> 178           1                             0         0         1        0 #> 179           1                             0         0         1        0 #> 180           1                             0         0         1        0 #> 181           1                             0         0         0        0 #> 182           1                             0         0         0        0 #> 183           1                             0         0         0        0 #> 185           1                             0         0         0        1 #> 186           1                             0         0         0        1 #> 187           1                             0         0         0        1 #> 190           1                             1         0         0        0 #> 191           1                             1         0         0        0 #> 193           1                             0         1         1        0 #> 194           1                             0         1         1        0 #> 195           1                             0         1         1        0 #> 197           1                             0         0         1        1 #> 198           1                             0         0         1        1 #> 199           1                             0         0         1        1 #> 201           1                             1         0         1        1 #> 202           1                             1         0         1        1 #> 204           1                             1         0         1        1 #> 206           1                             1         0         1        1 #> 208           1                             1         0         1        1 #> 209           1                             0         1         0        0 #> 210           1                             0         1         0        0 #> 217           1                             0         0         0        1 #> 218           1                             0         0         0        1 #> 219           1                             0         0         0        1 #> 221           1                             1         0         0        0 #> 224           1                             1         0         0        0 #> 226           1                             1         0         0        1 #> 227           1                             1         0         0        1 #> 228           1                             1         0         0        1 #> 230           1                             0         1         1        1 #> 231           1                             0         1         1        1 #> 233           1                             0         1         1        1 #> 235           1                             0         1         1        1 #> 236           1                             0         1         1        1 #> 237           1                             1         0         1        1 #> 238           1                             1         0         1        1 #> 239           1                             1         0         1        1 #> 240           1                             1         0         1        1 #> 241           1                             0         0         0        1 #> 242           1                             0         0         0        1 #> 244           1                             0         0         0        1 #> 246           1                             0         0         1        0 #> 250           1                             0         1         1        0 #> 251           1                             0         1         1        0 #> 252           1                             0         1         1        0 #> 253           1                             1         0         1        0 #> 254           1                             1         0         1        0 #> 256           1                             1         0         1        0 #> 257           1                             0         0         1        1 #> 258           1                             0         0         1        1 #> 259           1                             0         0         1        1 #> 260           1                             0         0         1        1 #> 261           1                             0         0         0        1 #> 262           1                             0         0         0        1 #> 263           1                             0         0         0        1 #> 264           1                             0         0         0        1 #> 265           1                             0         1         1        1 #> 266           1                             0         1         1        1 #> 267           1                             0         1         1        1 #> 268           1                             0         1         1        1 #> 269           1                             0         1         1        1 #> 270           1                             0         1         1        1 #> 273           1                             1         0         0        0 #> 274           1                             1         0         0        0 #> 275           1                             1         0         0        0 #> 276           1                             1         0         0        0 #> 277           1                             1         0         0        0 #> 278           1                             1         0         0        0 #> 280           1                             1         0         0        0 #> 281           1                             0         0         0        1 #> 282           1                             0         0         0        1 #> 283           1                             0         0         0        1 #> 284           1                             0         0         0        1 #> 285           1                             0         0         1        1 #> 286           1                             0         0         1        1 #> 287           1                             0         0         1        1 #> 291           1                             0         1         0        0 #> 292           1                             0         1         0        0 #> 293           1                             0         1         1        0 #> 295           1                             0         1         1        0 #> 296           1                             0         1         1        0 #> 298           1                             0         1         0        0 #> 299           1                             0         1         0        0 #> 300           1                             0         1         0        0 #> 301           1                             0         1         0        1 #> 304           1                             0         1         0        1 #> 305           1                             0         0         0        1 #> 306           1                             0         0         0        1 #> 307           1                             0         0         0        1 #> 308           1                             0         0         0        1 #> 310           1                             0         1         1        1 #> 311           1                             0         1         1        1 #> 312           1                             0         1         1        1 #> 316           1                             0         0         1        0 #> 317           1                             0         0         0        1 #> 318           1                             0         0         0        1 #> 319           1                             0         0         0        1 #> 322           1                             0         1         0        0 #> 323           1                             0         1         0        0 #> 324           1                             0         1         0        0 #> 325           1                             1         0         1        0 #> 327           1                             1         0         1        0 #> 328           1                             1         0         1        0 #> 329           1                             0         1         0        1 #> 330           1                             0         1         0        1 #> 331           1                             0         1         0        1 #> 332           1                             0         1         0        1 #> 336           1                             0         0         1        0 #> 339           1                             0         0         1        0 #> 340           1                             0         0         1        0 #> 341           1                             1         0         1        1 #> 342           1                             1         0         1        1 #> 343           1                             1         0         1        1 #> 344           1                             1         0         1        1 #> 345           1                             0         1         0        0 #> 347           1                             0         1         0        0 #> 349           1                             1         0         1        0 #> 351           1                             1         0         1        0 #> 352           1                             1         0         1        0 #> 353           1                             1         0         0        0 #> 354           1                             1         0         0        0 #> 355           1                             1         0         0        0 #> 356           1                             1         0         0        0 #> 357           1                             0         0         0        0 #> 363           1                             0         1         1        1 #> 364           1                             0         1         1        1 #> 365           1                             0         1         1        1 #> 367           1                             0         1         1        1 #> 368           1                             0         1         1        1 #> 370           1                             1         0         0        0 #> 371           1                             1         0         0        0 #> 372           1                             1         0         0        0 #> 373           1                             0         0         1        0 #> 375           1                             0         0         1        0 #> 376           1                             0         0         1        0 #> 378           1                             0         0         1        0 #> 379           1                             0         0         1        0 #> 381           1                             1         0         1        0 #> 382           1                             1         0         1        0 #> 384           1                             1         0         1        0 #> 385           1                             0         1         0        1 #> 386           1                             0         1         0        1 #> 388           1                             0         1         0        1 #> 389           1                             0         0         0        0 #> 390           1                             0         0         0        0 #> 391           1                             0         0         0        0 #> 392           1                             0         0         0        0 #> 394           1                             1         0         0        0 #> 397           1                             1         0         1        0 #> 398           1                             1         0         1        0 #> 399           1                             1         0         1        0 #> 402           1                             0         1         0        1 #> 403           1                             0         1         0        1 #> 405           1                             0         0         1        0 #> 406           1                             0         0         1        0 #> 407           1                             0         0         1        0 #> 408           1                             0         0         1        0 #> 409           1                             0         0         1        0 #> 410           1                             0         0         1        0 #> 411           1                             0         0         1        0 #> 413           1                             1         0         1        0 #> 415           1                             1         0         1        0 #> 416           1                             1         0         1        0 #> 418           1                             1         0         1        1 #> 419           1                             1         0         1        1 #> 421           1                             0         0         1        1 #> 422           1                             0         0         1        1 #> 423           1                             0         0         1        1 #> 424           1                             0         0         1        1 #> 427           1                             0         1         1        0 #> 428           1                             0         1         1        0 #> 429           1                             0         1         0        1 #> 430           1                             0         1         0        1 #> 431           1                             0         1         0        1 #> 432           1                             0         1         0        1 #> 434           1                             1         0         1        0 #> 435           1                             1         0         1        0 #> 436           1                             1         0         1        0 #> 438           1                             0         0         0        1 #> 439           1                             0         0         0        1 #> 444           1                             0         1         1        0 #> 445           1                             1         0         1        0 #> 447           1                             1         0         1        0 #> 449           1                             0         0         0        0 #> 450           1                             0         0         0        0 #> 451           1                             0         0         0        0 #> 453           1                             1         0         0        0 #> 454           1                             1         0         0        0 #> 455           1                             1         0         0        0 #> 456           1                             1         0         0        0 #> 457           1                             0         0         1        0 #> 458           1                             0         0         1        0 #> 459           1                             0         0         1        0 #> 461           1                             1         0         0        1 #> 463           1                             1         0         0        1 #> 464           1                             1         0         0        1 #> 465           1                             1         0         0        0 #> 469           1                             0         0         1        0 #> 470           1                             0         0         1        0 #> 471           1                             0         0         1        0 #> 473           1                             0         1         0        1 #> 474           1                             0         1         0        1 #> 477           1                             0         0         1        0 #> 484           1                             1         0         0        1 #> 487           1                             0         0         1        0 #> 489           1                             0         1         1        0 #> 490           1                             0         1         1        0 #> 491           1                             0         1         1        0 #> 494           1                             0         0         1        1 #> 495           1                             0         0         1        1 #> 496           1                             0         0         1        1 #> 497           1                             0         1         0        0 #> 498           1                             0         1         0        0 #> 499           1                             0         1         0        0 #> 501           1                             0         0         0        1 #> 502           1                             0         0         0        1 #> 504           1                             0         0         0        1 #> 505           1                             1         0         1        1 #> 508           1                             1         0         1        1 #> 509           1                             0         0         1        1 #> 510           1                             0         0         1        1 #> 511           1                             0         0         1        1 #> 512           1                             0         0         1        1 #> 513           1                             0         1         0        1 #> 518           1                             0         1         0        0 #> 519           1                             0         1         0        0 #> 521           1                             0         0         1        0 #> 522           1                             0         0         1        0 #> 523           1                             0         0         1        0 #> 524           1                             0         0         1        0 #> 526           1                             0         0         0        0 #> 527           1                             0         0         0        0 #> 528           1                             0         0         0        0 #> 530           1                             0         1         0        0 #> 531           1                             0         1         0        0 #> 532           1                             0         1         0        0 #> 534           1                             1         0         0        0 #> 535           1                             1         0         0        0 #> 536           1                             1         0         0        0 #> 537           1                             1         0         0        0 #> 538           1                             1         0         0        0 #> 539           1                             1         0         0        0 #> 540           1                             1         0         0        0 #> 541           1                             0         1         1        1 #> 544           1                             0         1         1        1 #> 545           1                             0         0         1        1 #> 546           1                             0         0         1        1 #> 547           1                             0         0         1        1 #> 548           1                             0         0         1        1 #> 549           1                             0         0         0        1 #> 550           1                             0         0         0        1 #> 551           1                             0         0         0        1 #> 555           1                             0         0         1        1 #> 556           1                             0         0         1        1 #> 557           1                             1         0         1        0 #> 558           1                             1         0         1        0 #> 560           1                             1         0         1        0 #> 562           1                             0         1         0        1 #> 564           1                             0         1         0        1 #> 569           1                             1         0         1        1 #> 570           1                             1         0         1        1 #> 572           1                             1         0         1        1 #> 573           1                             0         0         1        0 #> 574           1                             0         0         1        0 #> 575           1                             0         0         1        0 #> 576           1                             0         0         1        0 #> 577           1                             1         0         0        0 #> 578           1                             1         0         0        0 #> 579           1                             1         0         0        0 #> 582           1                             0         0         1        1 #> 583           1                             0         0         1        1 #> 584           1                             0         0         1        1 #> 585           1                             0         0         1        0 #> 586           1                             0         0         1        0 #> 587           1                             0         0         1        0 #> 590           1                             1         0         0        1 #> 591           1                             1         0         0        1 #> 593           1                             0         0         1        0 #> 594           1                             0         0         1        0 #> 595           1                             0         0         1        0 #> 596           1                             0         0         1        0 #> 599           1                             0         1         0        0 #> 600           1                             0         1         0        0 #> 601           1                             0         0         1        0 #> 602           1                             0         0         1        0 #> 604           1                             0         0         1        0 #> 606           1                             0         0         1        1 #> 608           1                             0         0         1        1 #> 609           1                             1         0         0        0 #> 610           1                             1         0         0        0 #> 611           1                             1         0         0        0 #> 612           1                             1         0         0        0 #> 613           1                             1         0         1        0 #> 614           1                             1         0         1        0 #> 616           1                             1         0         1        0 #> 617           1                             0         0         0        1 #> 619           1                             0         0         0        1 #> 620           1                             0         0         0        1 #> 621           1                             0         1         0        0 #> 622           1                             0         1         0        0 #> 623           1                             0         1         0        0 #> 624           1                             0         1         0        0 #> 625           1                             1         0         0        1 #> 628           1                             1         0         0        1 #> 630           1                             1         0         0        1 #> 631           1                             1         0         0        1 #> 632           1                             1         0         0        1 #> 633           1                             0         0         1        1 #> 634           1                             0         0         1        1 #> 638           1                             0         0         0        1 #> 639           1                             0         0         0        1 #> 640           1                             0         0         0        1 #> 642           1                             1         0         1        0 #> 645           1                             0         0         0        0 #> 648           1                             0         0         0        0 #> 650           1                             0         1         0        0 #> 652           1                             0         1         0        0 #> 654           1                             1         0         1        0 #> 655           1                             1         0         1        0 #> 656           1                             1         0         1        0 #> 657           1                             0         1         1        1 #> 661           1                             0         0         0        1 #> 665           1                             1         0         0        0 #> 666           1                             1         0         0        0 #> 668           1                             1         0         0        0 #> 669           1                             1         0         1        0 #> 670           1                             1         0         1        0 #> 671           1                             1         0         1        0 #> 673           1                             0         1         1        0 #> 674           1                             0         1         1        0 #> 678           1                             0         1         1        1 #> 679           1                             0         1         1        1 #> 680           1                             0         1         1        1 #> 682           1                             0         0         1        0 #> 684           1                             0         0         1        0 #> 685           1                             0         0         1        1 #> 686           1                             0         0         1        1 #> 687           1                             0         0         1        1 #> 689           1                             0         1         1        1 #> 690           1                             0         1         1        1 #> 691           1                             0         1         1        1 #> 693           1                             1         0         1        1 #> 694           1                             1         0         1        1 #> 695           1                             1         0         1        1 #> 697           1                             1         0         1        0 #> 698           1                             1         0         1        0 #> 700           1                             1         0         1        0 #> 701           1                             1         0         0        1 #> 702           1                             1         0         0        1 #> 704           1                             1         0         0        1 #> 707           1                             1         0         0        0 #> 709           1                             1         0         0        0 #> 712           1                             1         0         0        0 #> 713           1                             0         1         0        1 #> 715           1                             0         1         0        1 #> 716           1                             0         1         0        1 #> 717           1                             0         0         0        0 #> 718           1                             0         0         0        0 #> 719           1                             0         0         0        0 #> 721           1                             0         0         1        0 #> 723           1                             0         0         1        0 #> 724           1                             0         0         1        0 #> 727           1                             1         0         1        1 #> 728           1                             1         0         1        1 #> 729           1                             1         0         1        1 #> 730           1                             1         0         1        1 #> 734           1                             0         1         1        1 #> 736           1                             0         1         1        1 #> 738           1                             1         0         1        0 #> 739           1                             1         0         1        0 #> 740           1                             1         0         1        0 #> 741           1                             0         1         0        0 #> 742           1                             0         1         0        0 #> 744           1                             0         1         0        0 #> 745           1                             1         0         1        0 #> 749           1                             1         0         1        0 #> 751           1                             1         0         1        0 #> 753           1                             0         0         1        1 #> 754           1                             0         0         1        1 #> 755           1                             0         0         1        1 #> 757           1                             1         0         1        1 #> 758           1                             1         0         1        1 #> 759           1                             1         0         1        1 #> 760           1                             1         0         1        1 #> 761           1                             0         1         0        1 #> 764           1                             0         1         0        1 #> 765           1                             0         1         1        1 #> 766           1                             0         1         1        1 #> 767           1                             0         1         1        1 #> 768           1                             0         1         1        1 #> 770           1                             0         0         0        0 #> 771           1                             0         0         0        0 #> 772           1                             0         0         0        0 #> 773           1                             1         0         0        0 #> 774           1                             1         0         0        0 #> 775           1                             1         0         0        0 #> 776           1                             1         0         0        0 #> 778           1                             0         1         1        1 #> 779           1                             0         1         1        1 #> 781           1                             0         0         0        0 #> 782           1                             0         0         0        0 #> 784           1                             0         0         0        0 #> 788           1                             1         0         0        0 #> 789           1                             1         0         0        1 #> 790           1                             1         0         0        1 #> 792           1                             1         0         0        1 #> 797           1                             1         0         0        0 #> 798           1                             1         0         0        0 #> 800           1                             1         0         0        0 #>     AVISITVIS2 AVISITVIS3 AVISITVIS4 ARMCDTRT:AVISITVIS2 ARMCDTRT:AVISITVIS3 #> 2            1          0          0                   1                   0 #> 4            0          0          1                   0                   0 #> 6            1          0          0                   0                   0 #> 7            0          1          0                   0                   0 #> 8            0          0          1                   0                   0 #> 10           1          0          0                   0                   0 #> 12           0          0          1                   0                   0 #> 13           0          0          0                   0                   0 #> 14           1          0          0                   1                   0 #> 16           0          0          1                   0                   0 #> 17           0          0          0                   0                   0 #> 19           0          1          0                   0                   0 #> 20           0          0          1                   0                   0 #> 23           0          1          0                   0                   0 #> 25           0          0          0                   0                   0 #> 26           1          0          0                   0                   0 #> 28           0          0          1                   0                   0 #> 29           0          0          0                   0                   0 #> 30           1          0          0                   0                   0 #> 31           0          1          0                   0                   0 #> 32           0          0          1                   0                   0 #> 33           0          0          0                   0                   0 #> 34           1          0          0                   1                   0 #> 36           0          0          1                   0                   0 #> 39           0          1          0                   0                   0 #> 41           0          0          0                   0                   0 #> 42           1          0          0                   1                   0 #> 43           0          1          0                   0                   1 #> 44           0          0          1                   0                   0 #> 45           0          0          0                   0                   0 #> 46           1          0          0                   0                   0 #> 47           0          1          0                   0                   0 #> 51           0          1          0                   0                   1 #> 52           0          0          1                   0                   0 #> 55           0          1          0                   0                   0 #> 59           0          1          0                   0                   0 #> 60           0          0          1                   0                   0 #> 62           1          0          0                   0                   0 #> 64           0          0          1                   0                   0 #> 65           0          0          0                   0                   0 #> 68           0          0          1                   0                   0 #> 69           0          0          0                   0                   0 #> 70           1          0          0                   1                   0 #> 72           0          0          1                   0                   0 #> 73           0          0          0                   0                   0 #> 74           1          0          0                   1                   0 #> 75           0          1          0                   0                   1 #> 76           0          0          1                   0                   0 #> 78           1          0          0                   1                   0 #> 79           0          1          0                   0                   1 #> 82           1          0          0                   1                   0 #> 83           0          1          0                   0                   1 #> 84           0          0          1                   0                   0 #> 85           0          0          0                   0                   0 #> 86           1          0          0                   1                   0 #> 87           0          1          0                   0                   1 #> 88           0          0          1                   0                   0 #> 89           0          0          0                   0                   0 #> 90           1          0          0                   0                   0 #> 91           0          1          0                   0                   0 #> 93           0          0          0                   0                   0 #> 94           1          0          0                   1                   0 #> 95           0          1          0                   0                   1 #> 96           0          0          1                   0                   0 #> 97           0          0          0                   0                   0 #> 98           1          0          0                   1                   0 #> 99           0          1          0                   0                   1 #> 100          0          0          1                   0                   0 #> 101          0          0          0                   0                   0 #> 102          1          0          0                   1                   0 #> 103          0          1          0                   0                   1 #> 104          0          0          1                   0                   0 #> 105          0          0          0                   0                   0 #> 107          0          1          0                   0                   1 #> 108          0          0          1                   0                   0 #> 109          0          0          0                   0                   0 #> 110          1          0          0                   1                   0 #> 111          0          1          0                   0                   1 #> 112          0          0          1                   0                   0 #> 113          0          0          0                   0                   0 #> 114          1          0          0                   1                   0 #> 116          0          0          1                   0                   0 #> 117          0          0          0                   0                   0 #> 118          1          0          0                   1                   0 #> 119          0          1          0                   0                   1 #> 120          0          0          1                   0                   0 #> 121          0          0          0                   0                   0 #> 123          0          1          0                   0                   0 #> 125          0          0          0                   0                   0 #> 128          0          0          1                   0                   0 #> 129          0          0          0                   0                   0 #> 130          1          0          0                   1                   0 #> 132          0          0          1                   0                   0 #> 133          0          0          0                   0                   0 #> 134          1          0          0                   0                   0 #> 135          0          1          0                   0                   0 #> 136          0          0          1                   0                   0 #> 137          0          0          0                   0                   0 #> 138          1          0          0                   1                   0 #> 140          0          0          1                   0                   0 #> 142          1          0          0                   1                   0 #> 144          0          0          1                   0                   0 #> 145          0          0          0                   0                   0 #> 146          1          0          0                   0                   0 #> 147          0          1          0                   0                   0 #> 148          0          0          1                   0                   0 #> 149          0          0          0                   0                   0 #> 151          0          1          0                   0                   0 #> 153          0          0          0                   0                   0 #> 155          0          1          0                   0                   0 #> 156          0          0          1                   0                   0 #> 157          0          0          0                   0                   0 #> 158          1          0          0                   0                   0 #> 159          0          1          0                   0                   0 #> 162          1          0          0                   0                   0 #> 163          0          1          0                   0                   0 #> 164          0          0          1                   0                   0 #> 165          0          0          0                   0                   0 #> 168          0          0          1                   0                   0 #> 169          0          0          0                   0                   0 #> 170          1          0          0                   1                   0 #> 171          0          1          0                   0                   1 #> 172          0          0          1                   0                   0 #> 173          0          0          0                   0                   0 #> 177          0          0          0                   0                   0 #> 178          1          0          0                   0                   0 #> 179          0          1          0                   0                   0 #> 180          0          0          1                   0                   0 #> 181          0          0          0                   0                   0 #> 182          1          0          0                   0                   0 #> 183          0          1          0                   0                   0 #> 185          0          0          0                   0                   0 #> 186          1          0          0                   1                   0 #> 187          0          1          0                   0                   1 #> 190          1          0          0                   0                   0 #> 191          0          1          0                   0                   0 #> 193          0          0          0                   0                   0 #> 194          1          0          0                   0                   0 #> 195          0          1          0                   0                   0 #> 197          0          0          0                   0                   0 #> 198          1          0          0                   1                   0 #> 199          0          1          0                   0                   1 #> 201          0          0          0                   0                   0 #> 202          1          0          0                   1                   0 #> 204          0          0          1                   0                   0 #> 206          1          0          0                   1                   0 #> 208          0          0          1                   0                   0 #> 209          0          0          0                   0                   0 #> 210          1          0          0                   0                   0 #> 217          0          0          0                   0                   0 #> 218          1          0          0                   1                   0 #> 219          0          1          0                   0                   1 #> 221          0          0          0                   0                   0 #> 224          0          0          1                   0                   0 #> 226          1          0          0                   1                   0 #> 227          0          1          0                   0                   1 #> 228          0          0          1                   0                   0 #> 230          1          0          0                   1                   0 #> 231          0          1          0                   0                   1 #> 233          0          0          0                   0                   0 #> 235          0          1          0                   0                   1 #> 236          0          0          1                   0                   0 #> 237          0          0          0                   0                   0 #> 238          1          0          0                   1                   0 #> 239          0          1          0                   0                   1 #> 240          0          0          1                   0                   0 #> 241          0          0          0                   0                   0 #> 242          1          0          0                   1                   0 #> 244          0          0          1                   0                   0 #> 246          1          0          0                   0                   0 #> 250          1          0          0                   0                   0 #> 251          0          1          0                   0                   0 #> 252          0          0          1                   0                   0 #> 253          0          0          0                   0                   0 #> 254          1          0          0                   0                   0 #> 256          0          0          1                   0                   0 #> 257          0          0          0                   0                   0 #> 258          1          0          0                   1                   0 #> 259          0          1          0                   0                   1 #> 260          0          0          1                   0                   0 #> 261          0          0          0                   0                   0 #> 262          1          0          0                   1                   0 #> 263          0          1          0                   0                   1 #> 264          0          0          1                   0                   0 #> 265          0          0          0                   0                   0 #> 266          1          0          0                   1                   0 #> 267          0          1          0                   0                   1 #> 268          0          0          1                   0                   0 #> 269          0          0          0                   0                   0 #> 270          1          0          0                   1                   0 #> 273          0          0          0                   0                   0 #> 274          1          0          0                   0                   0 #> 275          0          1          0                   0                   0 #> 276          0          0          1                   0                   0 #> 277          0          0          0                   0                   0 #> 278          1          0          0                   0                   0 #> 280          0          0          1                   0                   0 #> 281          0          0          0                   0                   0 #> 282          1          0          0                   1                   0 #> 283          0          1          0                   0                   1 #> 284          0          0          1                   0                   0 #> 285          0          0          0                   0                   0 #> 286          1          0          0                   1                   0 #> 287          0          1          0                   0                   1 #> 291          0          1          0                   0                   0 #> 292          0          0          1                   0                   0 #> 293          0          0          0                   0                   0 #> 295          0          1          0                   0                   0 #> 296          0          0          1                   0                   0 #> 298          1          0          0                   0                   0 #> 299          0          1          0                   0                   0 #> 300          0          0          1                   0                   0 #> 301          0          0          0                   0                   0 #> 304          0          0          1                   0                   0 #> 305          0          0          0                   0                   0 #> 306          1          0          0                   1                   0 #> 307          0          1          0                   0                   1 #> 308          0          0          1                   0                   0 #> 310          1          0          0                   1                   0 #> 311          0          1          0                   0                   1 #> 312          0          0          1                   0                   0 #> 316          0          0          1                   0                   0 #> 317          0          0          0                   0                   0 #> 318          1          0          0                   1                   0 #> 319          0          1          0                   0                   1 #> 322          1          0          0                   0                   0 #> 323          0          1          0                   0                   0 #> 324          0          0          1                   0                   0 #> 325          0          0          0                   0                   0 #> 327          0          1          0                   0                   0 #> 328          0          0          1                   0                   0 #> 329          0          0          0                   0                   0 #> 330          1          0          0                   1                   0 #> 331          0          1          0                   0                   1 #> 332          0          0          1                   0                   0 #> 336          0          0          1                   0                   0 #> 339          0          1          0                   0                   0 #> 340          0          0          1                   0                   0 #> 341          0          0          0                   0                   0 #> 342          1          0          0                   1                   0 #> 343          0          1          0                   0                   1 #> 344          0          0          1                   0                   0 #> 345          0          0          0                   0                   0 #> 347          0          1          0                   0                   0 #> 349          0          0          0                   0                   0 #> 351          0          1          0                   0                   0 #> 352          0          0          1                   0                   0 #> 353          0          0          0                   0                   0 #> 354          1          0          0                   0                   0 #> 355          0          1          0                   0                   0 #> 356          0          0          1                   0                   0 #> 357          0          0          0                   0                   0 #> 363          0          1          0                   0                   1 #> 364          0          0          1                   0                   0 #> 365          0          0          0                   0                   0 #> 367          0          1          0                   0                   1 #> 368          0          0          1                   0                   0 #> 370          1          0          0                   0                   0 #> 371          0          1          0                   0                   0 #> 372          0          0          1                   0                   0 #> 373          0          0          0                   0                   0 #> 375          0          1          0                   0                   0 #> 376          0          0          1                   0                   0 #> 378          1          0          0                   0                   0 #> 379          0          1          0                   0                   0 #> 381          0          0          0                   0                   0 #> 382          1          0          0                   0                   0 #> 384          0          0          1                   0                   0 #> 385          0          0          0                   0                   0 #> 386          1          0          0                   1                   0 #> 388          0          0          1                   0                   0 #> 389          0          0          0                   0                   0 #> 390          1          0          0                   0                   0 #> 391          0          1          0                   0                   0 #> 392          0          0          1                   0                   0 #> 394          1          0          0                   0                   0 #> 397          0          0          0                   0                   0 #> 398          1          0          0                   0                   0 #> 399          0          1          0                   0                   0 #> 402          1          0          0                   1                   0 #> 403          0          1          0                   0                   1 #> 405          0          0          0                   0                   0 #> 406          1          0          0                   0                   0 #> 407          0          1          0                   0                   0 #> 408          0          0          1                   0                   0 #> 409          0          0          0                   0                   0 #> 410          1          0          0                   0                   0 #> 411          0          1          0                   0                   0 #> 413          0          0          0                   0                   0 #> 415          0          1          0                   0                   0 #> 416          0          0          1                   0                   0 #> 418          1          0          0                   1                   0 #> 419          0          1          0                   0                   1 #> 421          0          0          0                   0                   0 #> 422          1          0          0                   1                   0 #> 423          0          1          0                   0                   1 #> 424          0          0          1                   0                   0 #> 427          0          1          0                   0                   0 #> 428          0          0          1                   0                   0 #> 429          0          0          0                   0                   0 #> 430          1          0          0                   1                   0 #> 431          0          1          0                   0                   1 #> 432          0          0          1                   0                   0 #> 434          1          0          0                   0                   0 #> 435          0          1          0                   0                   0 #> 436          0          0          1                   0                   0 #> 438          1          0          0                   1                   0 #> 439          0          1          0                   0                   1 #> 444          0          0          1                   0                   0 #> 445          0          0          0                   0                   0 #> 447          0          1          0                   0                   0 #> 449          0          0          0                   0                   0 #> 450          1          0          0                   0                   0 #> 451          0          1          0                   0                   0 #> 453          0          0          0                   0                   0 #> 454          1          0          0                   0                   0 #> 455          0          1          0                   0                   0 #> 456          0          0          1                   0                   0 #> 457          0          0          0                   0                   0 #> 458          1          0          0                   0                   0 #> 459          0          1          0                   0                   0 #> 461          0          0          0                   0                   0 #> 463          0          1          0                   0                   1 #> 464          0          0          1                   0                   0 #> 465          0          0          0                   0                   0 #> 469          0          0          0                   0                   0 #> 470          1          0          0                   0                   0 #> 471          0          1          0                   0                   0 #> 473          0          0          0                   0                   0 #> 474          1          0          0                   1                   0 #> 477          0          0          0                   0                   0 #> 484          0          0          1                   0                   0 #> 487          0          1          0                   0                   0 #> 489          0          0          0                   0                   0 #> 490          1          0          0                   0                   0 #> 491          0          1          0                   0                   0 #> 494          1          0          0                   1                   0 #> 495          0          1          0                   0                   1 #> 496          0          0          1                   0                   0 #> 497          0          0          0                   0                   0 #> 498          1          0          0                   0                   0 #> 499          0          1          0                   0                   0 #> 501          0          0          0                   0                   0 #> 502          1          0          0                   1                   0 #> 504          0          0          1                   0                   0 #> 505          0          0          0                   0                   0 #> 508          0          0          1                   0                   0 #> 509          0          0          0                   0                   0 #> 510          1          0          0                   1                   0 #> 511          0          1          0                   0                   1 #> 512          0          0          1                   0                   0 #> 513          0          0          0                   0                   0 #> 518          1          0          0                   0                   0 #> 519          0          1          0                   0                   0 #> 521          0          0          0                   0                   0 #> 522          1          0          0                   0                   0 #> 523          0          1          0                   0                   0 #> 524          0          0          1                   0                   0 #> 526          1          0          0                   0                   0 #> 527          0          1          0                   0                   0 #> 528          0          0          1                   0                   0 #> 530          1          0          0                   0                   0 #> 531          0          1          0                   0                   0 #> 532          0          0          1                   0                   0 #> 534          1          0          0                   0                   0 #> 535          0          1          0                   0                   0 #> 536          0          0          1                   0                   0 #> 537          0          0          0                   0                   0 #> 538          1          0          0                   0                   0 #> 539          0          1          0                   0                   0 #> 540          0          0          1                   0                   0 #> 541          0          0          0                   0                   0 #> 544          0          0          1                   0                   0 #> 545          0          0          0                   0                   0 #> 546          1          0          0                   1                   0 #> 547          0          1          0                   0                   1 #> 548          0          0          1                   0                   0 #> 549          0          0          0                   0                   0 #> 550          1          0          0                   1                   0 #> 551          0          1          0                   0                   1 #> 555          0          1          0                   0                   1 #> 556          0          0          1                   0                   0 #> 557          0          0          0                   0                   0 #> 558          1          0          0                   0                   0 #> 560          0          0          1                   0                   0 #> 562          1          0          0                   1                   0 #> 564          0          0          1                   0                   0 #> 569          0          0          0                   0                   0 #> 570          1          0          0                   1                   0 #> 572          0          0          1                   0                   0 #> 573          0          0          0                   0                   0 #> 574          1          0          0                   0                   0 #> 575          0          1          0                   0                   0 #> 576          0          0          1                   0                   0 #> 577          0          0          0                   0                   0 #> 578          1          0          0                   0                   0 #> 579          0          1          0                   0                   0 #> 582          1          0          0                   1                   0 #> 583          0          1          0                   0                   1 #> 584          0          0          1                   0                   0 #> 585          0          0          0                   0                   0 #> 586          1          0          0                   0                   0 #> 587          0          1          0                   0                   0 #> 590          1          0          0                   1                   0 #> 591          0          1          0                   0                   1 #> 593          0          0          0                   0                   0 #> 594          1          0          0                   0                   0 #> 595          0          1          0                   0                   0 #> 596          0          0          1                   0                   0 #> 599          0          1          0                   0                   0 #> 600          0          0          1                   0                   0 #> 601          0          0          0                   0                   0 #> 602          1          0          0                   0                   0 #> 604          0          0          1                   0                   0 #> 606          1          0          0                   1                   0 #> 608          0          0          1                   0                   0 #> 609          0          0          0                   0                   0 #> 610          1          0          0                   0                   0 #> 611          0          1          0                   0                   0 #> 612          0          0          1                   0                   0 #> 613          0          0          0                   0                   0 #> 614          1          0          0                   0                   0 #> 616          0          0          1                   0                   0 #> 617          0          0          0                   0                   0 #> 619          0          1          0                   0                   1 #> 620          0          0          1                   0                   0 #> 621          0          0          0                   0                   0 #> 622          1          0          0                   0                   0 #> 623          0          1          0                   0                   0 #> 624          0          0          1                   0                   0 #> 625          0          0          0                   0                   0 #> 628          0          0          1                   0                   0 #> 630          1          0          0                   1                   0 #> 631          0          1          0                   0                   1 #> 632          0          0          1                   0                   0 #> 633          0          0          0                   0                   0 #> 634          1          0          0                   1                   0 #> 638          1          0          0                   1                   0 #> 639          0          1          0                   0                   1 #> 640          0          0          1                   0                   0 #> 642          1          0          0                   0                   0 #> 645          0          0          0                   0                   0 #> 648          0          0          1                   0                   0 #> 650          1          0          0                   0                   0 #> 652          0          0          1                   0                   0 #> 654          1          0          0                   0                   0 #> 655          0          1          0                   0                   0 #> 656          0          0          1                   0                   0 #> 657          0          0          0                   0                   0 #> 661          0          0          0                   0                   0 #> 665          0          0          0                   0                   0 #> 666          1          0          0                   0                   0 #> 668          0          0          1                   0                   0 #> 669          0          0          0                   0                   0 #> 670          1          0          0                   0                   0 #> 671          0          1          0                   0                   0 #> 673          0          0          0                   0                   0 #> 674          1          0          0                   0                   0 #> 678          1          0          0                   1                   0 #> 679          0          1          0                   0                   1 #> 680          0          0          1                   0                   0 #> 682          1          0          0                   0                   0 #> 684          0          0          1                   0                   0 #> 685          0          0          0                   0                   0 #> 686          1          0          0                   1                   0 #> 687          0          1          0                   0                   1 #> 689          0          0          0                   0                   0 #> 690          1          0          0                   1                   0 #> 691          0          1          0                   0                   1 #> 693          0          0          0                   0                   0 #> 694          1          0          0                   1                   0 #> 695          0          1          0                   0                   1 #> 697          0          0          0                   0                   0 #> 698          1          0          0                   0                   0 #> 700          0          0          1                   0                   0 #> 701          0          0          0                   0                   0 #> 702          1          0          0                   1                   0 #> 704          0          0          1                   0                   0 #> 707          0          1          0                   0                   0 #> 709          0          0          0                   0                   0 #> 712          0          0          1                   0                   0 #> 713          0          0          0                   0                   0 #> 715          0          1          0                   0                   1 #> 716          0          0          1                   0                   0 #> 717          0          0          0                   0                   0 #> 718          1          0          0                   0                   0 #> 719          0          1          0                   0                   0 #> 721          0          0          0                   0                   0 #> 723          0          1          0                   0                   0 #> 724          0          0          1                   0                   0 #> 727          0          1          0                   0                   1 #> 728          0          0          1                   0                   0 #> 729          0          0          0                   0                   0 #> 730          1          0          0                   1                   0 #> 734          1          0          0                   1                   0 #> 736          0          0          1                   0                   0 #> 738          1          0          0                   0                   0 #> 739          0          1          0                   0                   0 #> 740          0          0          1                   0                   0 #> 741          0          0          0                   0                   0 #> 742          1          0          0                   0                   0 #> 744          0          0          1                   0                   0 #> 745          0          0          0                   0                   0 #> 749          0          0          0                   0                   0 #> 751          0          1          0                   0                   0 #> 753          0          0          0                   0                   0 #> 754          1          0          0                   1                   0 #> 755          0          1          0                   0                   1 #> 757          0          0          0                   0                   0 #> 758          1          0          0                   1                   0 #> 759          0          1          0                   0                   1 #> 760          0          0          1                   0                   0 #> 761          0          0          0                   0                   0 #> 764          0          0          1                   0                   0 #> 765          0          0          0                   0                   0 #> 766          1          0          0                   1                   0 #> 767          0          1          0                   0                   1 #> 768          0          0          1                   0                   0 #> 770          1          0          0                   0                   0 #> 771          0          1          0                   0                   0 #> 772          0          0          1                   0                   0 #> 773          0          0          0                   0                   0 #> 774          1          0          0                   0                   0 #> 775          0          1          0                   0                   0 #> 776          0          0          1                   0                   0 #> 778          1          0          0                   1                   0 #> 779          0          1          0                   0                   1 #> 781          0          0          0                   0                   0 #> 782          1          0          0                   0                   0 #> 784          0          0          1                   0                   0 #> 788          0          0          1                   0                   0 #> 789          0          0          0                   0                   0 #> 790          1          0          0                   1                   0 #> 792          0          0          1                   0                   0 #> 797          0          0          0                   0                   0 #> 798          1          0          0                   0                   0 #> 800          0          0          1                   0                   0 #>     ARMCDTRT:AVISITVIS4 #> 2                     0 #> 4                     1 #> 6                     0 #> 7                     0 #> 8                     0 #> 10                    0 #> 12                    0 #> 13                    0 #> 14                    0 #> 16                    1 #> 17                    0 #> 19                    0 #> 20                    0 #> 23                    0 #> 25                    0 #> 26                    0 #> 28                    0 #> 29                    0 #> 30                    0 #> 31                    0 #> 32                    0 #> 33                    0 #> 34                    0 #> 36                    1 #> 39                    0 #> 41                    0 #> 42                    0 #> 43                    0 #> 44                    1 #> 45                    0 #> 46                    0 #> 47                    0 #> 51                    0 #> 52                    1 #> 55                    0 #> 59                    0 #> 60                    0 #> 62                    0 #> 64                    0 #> 65                    0 #> 68                    0 #> 69                    0 #> 70                    0 #> 72                    1 #> 73                    0 #> 74                    0 #> 75                    0 #> 76                    1 #> 78                    0 #> 79                    0 #> 82                    0 #> 83                    0 #> 84                    1 #> 85                    0 #> 86                    0 #> 87                    0 #> 88                    1 #> 89                    0 #> 90                    0 #> 91                    0 #> 93                    0 #> 94                    0 #> 95                    0 #> 96                    1 #> 97                    0 #> 98                    0 #> 99                    0 #> 100                   1 #> 101                   0 #> 102                   0 #> 103                   0 #> 104                   1 #> 105                   0 #> 107                   0 #> 108                   1 #> 109                   0 #> 110                   0 #> 111                   0 #> 112                   1 #> 113                   0 #> 114                   0 #> 116                   1 #> 117                   0 #> 118                   0 #> 119                   0 #> 120                   1 #> 121                   0 #> 123                   0 #> 125                   0 #> 128                   1 #> 129                   0 #> 130                   0 #> 132                   1 #> 133                   0 #> 134                   0 #> 135                   0 #> 136                   0 #> 137                   0 #> 138                   0 #> 140                   1 #> 142                   0 #> 144                   1 #> 145                   0 #> 146                   0 #> 147                   0 #> 148                   0 #> 149                   0 #> 151                   0 #> 153                   0 #> 155                   0 #> 156                   0 #> 157                   0 #> 158                   0 #> 159                   0 #> 162                   0 #> 163                   0 #> 164                   0 #> 165                   0 #> 168                   0 #> 169                   0 #> 170                   0 #> 171                   0 #> 172                   1 #> 173                   0 #> 177                   0 #> 178                   0 #> 179                   0 #> 180                   0 #> 181                   0 #> 182                   0 #> 183                   0 #> 185                   0 #> 186                   0 #> 187                   0 #> 190                   0 #> 191                   0 #> 193                   0 #> 194                   0 #> 195                   0 #> 197                   0 #> 198                   0 #> 199                   0 #> 201                   0 #> 202                   0 #> 204                   1 #> 206                   0 #> 208                   1 #> 209                   0 #> 210                   0 #> 217                   0 #> 218                   0 #> 219                   0 #> 221                   0 #> 224                   0 #> 226                   0 #> 227                   0 #> 228                   1 #> 230                   0 #> 231                   0 #> 233                   0 #> 235                   0 #> 236                   1 #> 237                   0 #> 238                   0 #> 239                   0 #> 240                   1 #> 241                   0 #> 242                   0 #> 244                   1 #> 246                   0 #> 250                   0 #> 251                   0 #> 252                   0 #> 253                   0 #> 254                   0 #> 256                   0 #> 257                   0 #> 258                   0 #> 259                   0 #> 260                   1 #> 261                   0 #> 262                   0 #> 263                   0 #> 264                   1 #> 265                   0 #> 266                   0 #> 267                   0 #> 268                   1 #> 269                   0 #> 270                   0 #> 273                   0 #> 274                   0 #> 275                   0 #> 276                   0 #> 277                   0 #> 278                   0 #> 280                   0 #> 281                   0 #> 282                   0 #> 283                   0 #> 284                   1 #> 285                   0 #> 286                   0 #> 287                   0 #> 291                   0 #> 292                   0 #> 293                   0 #> 295                   0 #> 296                   0 #> 298                   0 #> 299                   0 #> 300                   0 #> 301                   0 #> 304                   1 #> 305                   0 #> 306                   0 #> 307                   0 #> 308                   1 #> 310                   0 #> 311                   0 #> 312                   1 #> 316                   0 #> 317                   0 #> 318                   0 #> 319                   0 #> 322                   0 #> 323                   0 #> 324                   0 #> 325                   0 #> 327                   0 #> 328                   0 #> 329                   0 #> 330                   0 #> 331                   0 #> 332                   1 #> 336                   0 #> 339                   0 #> 340                   0 #> 341                   0 #> 342                   0 #> 343                   0 #> 344                   1 #> 345                   0 #> 347                   0 #> 349                   0 #> 351                   0 #> 352                   0 #> 353                   0 #> 354                   0 #> 355                   0 #> 356                   0 #> 357                   0 #> 363                   0 #> 364                   1 #> 365                   0 #> 367                   0 #> 368                   1 #> 370                   0 #> 371                   0 #> 372                   0 #> 373                   0 #> 375                   0 #> 376                   0 #> 378                   0 #> 379                   0 #> 381                   0 #> 382                   0 #> 384                   0 #> 385                   0 #> 386                   0 #> 388                   1 #> 389                   0 #> 390                   0 #> 391                   0 #> 392                   0 #> 394                   0 #> 397                   0 #> 398                   0 #> 399                   0 #> 402                   0 #> 403                   0 #> 405                   0 #> 406                   0 #> 407                   0 #> 408                   0 #> 409                   0 #> 410                   0 #> 411                   0 #> 413                   0 #> 415                   0 #> 416                   0 #> 418                   0 #> 419                   0 #> 421                   0 #> 422                   0 #> 423                   0 #> 424                   1 #> 427                   0 #> 428                   0 #> 429                   0 #> 430                   0 #> 431                   0 #> 432                   1 #> 434                   0 #> 435                   0 #> 436                   0 #> 438                   0 #> 439                   0 #> 444                   0 #> 445                   0 #> 447                   0 #> 449                   0 #> 450                   0 #> 451                   0 #> 453                   0 #> 454                   0 #> 455                   0 #> 456                   0 #> 457                   0 #> 458                   0 #> 459                   0 #> 461                   0 #> 463                   0 #> 464                   1 #> 465                   0 #> 469                   0 #> 470                   0 #> 471                   0 #> 473                   0 #> 474                   0 #> 477                   0 #> 484                   1 #> 487                   0 #> 489                   0 #> 490                   0 #> 491                   0 #> 494                   0 #> 495                   0 #> 496                   1 #> 497                   0 #> 498                   0 #> 499                   0 #> 501                   0 #> 502                   0 #> 504                   1 #> 505                   0 #> 508                   1 #> 509                   0 #> 510                   0 #> 511                   0 #> 512                   1 #> 513                   0 #> 518                   0 #> 519                   0 #> 521                   0 #> 522                   0 #> 523                   0 #> 524                   0 #> 526                   0 #> 527                   0 #> 528                   0 #> 530                   0 #> 531                   0 #> 532                   0 #> 534                   0 #> 535                   0 #> 536                   0 #> 537                   0 #> 538                   0 #> 539                   0 #> 540                   0 #> 541                   0 #> 544                   1 #> 545                   0 #> 546                   0 #> 547                   0 #> 548                   1 #> 549                   0 #> 550                   0 #> 551                   0 #> 555                   0 #> 556                   1 #> 557                   0 #> 558                   0 #> 560                   0 #> 562                   0 #> 564                   1 #> 569                   0 #> 570                   0 #> 572                   1 #> 573                   0 #> 574                   0 #> 575                   0 #> 576                   0 #> 577                   0 #> 578                   0 #> 579                   0 #> 582                   0 #> 583                   0 #> 584                   1 #> 585                   0 #> 586                   0 #> 587                   0 #> 590                   0 #> 591                   0 #> 593                   0 #> 594                   0 #> 595                   0 #> 596                   0 #> 599                   0 #> 600                   0 #> 601                   0 #> 602                   0 #> 604                   0 #> 606                   0 #> 608                   1 #> 609                   0 #> 610                   0 #> 611                   0 #> 612                   0 #> 613                   0 #> 614                   0 #> 616                   0 #> 617                   0 #> 619                   0 #> 620                   1 #> 621                   0 #> 622                   0 #> 623                   0 #> 624                   0 #> 625                   0 #> 628                   1 #> 630                   0 #> 631                   0 #> 632                   1 #> 633                   0 #> 634                   0 #> 638                   0 #> 639                   0 #> 640                   1 #> 642                   0 #> 645                   0 #> 648                   0 #> 650                   0 #> 652                   0 #> 654                   0 #> 655                   0 #> 656                   0 #> 657                   0 #> 661                   0 #> 665                   0 #> 666                   0 #> 668                   0 #> 669                   0 #> 670                   0 #> 671                   0 #> 673                   0 #> 674                   0 #> 678                   0 #> 679                   0 #> 680                   1 #> 682                   0 #> 684                   0 #> 685                   0 #> 686                   0 #> 687                   0 #> 689                   0 #> 690                   0 #> 691                   0 #> 693                   0 #> 694                   0 #> 695                   0 #> 697                   0 #> 698                   0 #> 700                   0 #> 701                   0 #> 702                   0 #> 704                   1 #> 707                   0 #> 709                   0 #> 712                   0 #> 713                   0 #> 715                   0 #> 716                   1 #> 717                   0 #> 718                   0 #> 719                   0 #> 721                   0 #> 723                   0 #> 724                   0 #> 727                   0 #> 728                   1 #> 729                   0 #> 730                   0 #> 734                   0 #> 736                   1 #> 738                   0 #> 739                   0 #> 740                   0 #> 741                   0 #> 742                   0 #> 744                   0 #> 745                   0 #> 749                   0 #> 751                   0 #> 753                   0 #> 754                   0 #> 755                   0 #> 757                   0 #> 758                   0 #> 759                   0 #> 760                   1 #> 761                   0 #> 764                   1 #> 765                   0 #> 766                   0 #> 767                   0 #> 768                   1 #> 770                   0 #> 771                   0 #> 772                   0 #> 773                   0 #> 774                   0 #> 775                   0 #> 776                   0 #> 778                   0 #> 779                   0 #> 781                   0 #> 782                   0 #> 784                   0 #> 788                   0 #> 789                   0 #> 790                   0 #> 792                   1 #> 797                   0 #> 798                   0 #> 800                   0 # terms: terms(object) #> FEV1 ~ RACE + SEX + ARMCD + AVISIT + ARMCD:AVISIT #> attr(,\"variables\") #> list(FEV1, RACE, SEX, ARMCD, AVISIT) #> attr(,\"factors\") #>        RACE SEX ARMCD AVISIT ARMCD:AVISIT #> FEV1      0   0     0      0            0 #> RACE      1   0     0      0            0 #> SEX       0   1     0      0            0 #> ARMCD     0   0     1      0            1 #> AVISIT    0   0     0      1            1 #> attr(,\"term.labels\") #> [1] \"RACE\"         \"SEX\"          \"ARMCD\"        \"AVISIT\"       \"ARMCD:AVISIT\" #> attr(,\"order\") #> [1] 1 1 1 1 2 #> attr(,\"intercept\") #> [1] 1 #> attr(,\"response\") #> [1] 1 #> attr(,\".Environment\") #> <environment: 0x55839841c5a8> terms(object, include = \"subject_var\") #> ~RACE + SEX + ARMCD + AVISIT + USUBJID + ARMCD:AVISIT #> attr(,\"variables\") #> list(RACE, SEX, ARMCD, AVISIT, USUBJID) #> attr(,\"factors\") #>         RACE SEX ARMCD AVISIT USUBJID ARMCD:AVISIT #> RACE       1   0     0      0       0            0 #> SEX        0   1     0      0       0            0 #> ARMCD      0   0     1      0       0            1 #> AVISIT     0   0     0      1       0            1 #> USUBJID    0   0     0      0       1            0 #> attr(,\"term.labels\") #> [1] \"RACE\"         \"SEX\"          \"ARMCD\"        \"AVISIT\"       \"USUBJID\"      #> [6] \"ARMCD:AVISIT\" #> attr(,\"order\") #> [1] 1 1 1 1 1 2 #> attr(,\"intercept\") #> [1] 1 #> attr(,\"response\") #> [1] 0 #> attr(,\".Environment\") #> <environment: 0x55839841c5a8> # Log likelihood given the estimated parameters: logLik(object) #> [1] -1693.225 # Formula which was used: formula(object) #> FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID) #> <environment: 0x55839841c5a8> # Variance-covariance matrix estimate for coefficients: vcov(object) #>                               (Intercept) RACEBlack or African American #> (Intercept)                     0.7859971                  -0.226212328 #> RACEBlack or African American  -0.2262123                   0.389969478 #> RACEWhite                      -0.1771113                   0.181466304 #> SEXFemale                      -0.1684152                   0.031537926 #> ARMCDTRT                       -0.5674809                   0.028374129 #> AVISITVIS2                     -0.4227565                   0.002972514 #> AVISITVIS3                     -0.5231223                   0.010825469 #> AVISITVIS4                     -0.4406442                   0.002205681 #> ARMCDTRT:AVISITVIS2             0.4225282                   0.005382569 #> ARMCDTRT:AVISITVIS3             0.5218971                   0.011420575 #> ARMCDTRT:AVISITVIS4             0.4489247                  -0.012589283 #>                                  RACEWhite    SEXFemale     ARMCDTRT #> (Intercept)                   -0.177111308 -0.168415217 -0.567480906 #> RACEBlack or African American  0.181466304  0.031537926  0.028374129 #> RACEWhite                      0.443035801  0.023364777 -0.042968995 #> SEXFemale                      0.023364777  0.282971189  0.001814594 #> ARMCDTRT                      -0.042968995  0.001814594  1.153791725 #> AVISITVIS2                    -0.003149280  0.006471853  0.419528600 #> AVISITVIS3                    -0.002952986  0.006771404  0.517277529 #> AVISITVIS4                    -0.008230720  0.004088901  0.440653554 #> ARMCDTRT:AVISITVIS2            0.013485683 -0.016801299 -0.845758354 #> ARMCDTRT:AVISITVIS3            0.006720617 -0.024696304 -1.044355829 #> ARMCDTRT:AVISITVIS4            0.002967665 -0.009038640 -0.877606881 #>                                 AVISITVIS2   AVISITVIS3   AVISITVIS4 #> (Intercept)                   -0.422756455 -0.523122299 -0.440644229 #> RACEBlack or African American  0.002972514  0.010825469  0.002205681 #> RACEWhite                     -0.003149280 -0.002952986 -0.008230720 #> SEXFemale                      0.006471853  0.006771404  0.004088901 #> ARMCDTRT                       0.419528600  0.517277529  0.440653554 #> AVISITVIS2                     0.642749706  0.399048940  0.368340113 #> AVISITVIS3                     0.399048940  0.676823960  0.401800094 #> AVISITVIS4                     0.368340113  0.401800094  1.723478787 #> ARMCDTRT:AVISITVIS2           -0.643020114 -0.399203255 -0.368624024 #> ARMCDTRT:AVISITVIS3           -0.399238901 -0.676484876 -0.401792995 #> ARMCDTRT:AVISITVIS4           -0.368506585 -0.402167824 -1.723586879 #>                               ARMCDTRT:AVISITVIS2 ARMCDTRT:AVISITVIS3 #> (Intercept)                           0.422528163         0.521897062 #> RACEBlack or African American         0.005382569         0.011420575 #> RACEWhite                             0.013485683         0.006720617 #> SEXFemale                            -0.016801299        -0.024696304 #> ARMCDTRT                             -0.845758354        -1.044355829 #> AVISITVIS2                           -0.643020114        -0.399238901 #> AVISITVIS3                           -0.399203255        -0.676484876 #> AVISITVIS4                           -0.368624024        -0.401792995 #> ARMCDTRT:AVISITVIS2                   1.275359305         0.805849821 #> ARMCDTRT:AVISITVIS3                   0.805849821         1.410501907 #> ARMCDTRT:AVISITVIS4                   0.728711516         0.796418986 #>                               ARMCDTRT:AVISITVIS4 #> (Intercept)                           0.448924745 #> RACEBlack or African American        -0.012589283 #> RACEWhite                             0.002967665 #> SEXFemale                            -0.009038640 #> ARMCDTRT                             -0.877606881 #> AVISITVIS2                           -0.368506585 #> AVISITVIS3                           -0.402167824 #> AVISITVIS4                           -1.723586879 #> ARMCDTRT:AVISITVIS2                   0.728711516 #> ARMCDTRT:AVISITVIS3                   0.796418986 #> ARMCDTRT:AVISITVIS4                   3.425654435 # Variance-covariance matrix estimate for residuals: VarCorr(object) #>           VIS1      VIS2       VIS3       VIS4 #> VIS1 40.553664 14.396045  4.9747288 13.3866534 #> VIS2 14.396045 26.571483  2.7854661  7.4744790 #> VIS3  4.974729  2.785466 14.8978517  0.9082111 #> VIS4 13.386653  7.474479  0.9082111 95.5568420 # REML criterion (twice the negative log likelihood): deviance(object) #> [1] 3386.45 # AIC: AIC(object) #> [1] 3406.45 AIC(object, corrected = TRUE) #> [1] 3406.877 # BIC: BIC(object) #> [1] 3439.282 # residuals: residuals(object, type = \"response\") #>   [1]  -1.234879652 -31.602602517  -4.161845076  -4.240694906   2.976720902 #>   [6]  -1.486633993 -10.523496721  -0.985476011  -5.929054895   3.894654785 #>  [11]   0.005884300   4.143525922  -5.650335904  -3.625861923   0.826964231 #>  [16]  -3.033654140   2.122875942  -0.077764040  -1.236764407   2.898887820 #>  [21]   5.666894712   6.973709346   1.649933932   2.223736062   1.999981925 #>  [26]   9.449780374  -0.697302530  -0.797571139  -4.121957765   9.568283755 #>  [31]   7.148615054  -1.008039398   3.474215960   0.203016560  -0.741716375 #>  [36]  -6.462963308  -6.753458982  -0.047005589   1.515200267 -14.092698990 #>  [41] -10.947245143  -1.951225988  -5.706079812  -9.307052363  -2.403398748 #>  [46]   7.086671267  -2.850398916  16.073985815   2.634589860   3.803878882 #>  [51]  11.652502799  -0.134982175   4.531571586   5.789979573   6.916172244 #>  [56]  -8.335823810  -2.446122835  -8.765445294  -1.487993507   0.630113879 #>  [61] -10.923600038  -9.812114797   5.259684070  -4.094159929  -8.824895907 #>  [66] -13.157401791   0.877589312  -0.339592573   8.595725270   3.936442210 #>  [71]   1.552353395  13.791819037 -14.336580048   0.027233096   0.336487818 #>  [76]   1.612454504   3.714131743   6.358341554   6.469275659   1.146036288 #>  [81]  -6.481239981 -15.420209264  10.564048465   1.873040490  -0.604472161 #>  [86]  11.276535944  -3.846981011   4.205682602  -2.888867642 -10.092066250 #>  [91]  -8.954675960  -9.131288225 -10.160328309   8.348966008  -3.324891902 #>  [96]  -6.821197849  -0.252287406  -0.230464002  -1.407973607  -2.003675274 #> [101]   4.967728097 -10.820604863  -2.685460226  -1.400767701  -5.913374081 #> [106]   5.965692909   7.081065238   5.753275316   6.224314102   1.714833437 #> [111]  -4.753946846  -2.150649979  -1.304036547  -1.697593065   4.231714405 #> [116]   7.523067828  -2.009615920   6.756933384  -5.242275398  -6.597847500 #> [121]   1.364617396   1.759820544  15.973845801  -0.461493245   2.787801686 #> [126]   0.484952966  -3.870461666  12.311298679 -11.232317044  -4.481649361 #> [131]  -0.220037106 -12.363619506   1.709197627  -6.875616999   5.976752937 #> [136]  -0.656597193   7.283701781  -2.922519989   6.370716054  -5.058284328 #> [141]  -9.236842335  -4.345245889  -9.622488058  -6.654774813 -12.022180587 #> [146]   1.887357480  -6.370718385   4.328882117   3.485715939   5.595034537 #> [151]   9.409222502   2.234484592  -2.968076876   0.569772634   0.236447831 #> [156]   1.328254786   0.485660327   8.823363223   0.276419270  -2.984758150 #> [161]  -0.711357559   2.929205179   3.904409284  -1.545435261   4.840564762 #> [166]   4.044772166  -1.721893559   7.189004781   1.582814876  -6.023735519 #> [171]   9.469873359   3.411370689  12.312877955  -0.415604291  -7.826304065 #> [176]  -2.588748144   4.878824125  -2.386492192   0.275251132  15.403304358 #> [181]  -1.117311743  -5.778945571  -4.284700514  -0.658853762  -1.604989482 #> [186]  -8.628885781  -4.503110575  -4.125143859   1.692779577  -0.289986567 #> [191]  -1.324600198   7.581755477  -1.962979124 -12.646575009  -5.000450448 #> [196]   0.168281529  -2.531874945  -1.621285472   5.569746459   1.486223742 #> [201]  15.758167838  11.723532098   1.222430146   2.140888226  -2.930455637 #> [206]  -7.358901274   1.549014295   4.296486376   4.408791522   2.197562650 #> [211]  -8.375741822   4.953239770  -1.144775488  -1.781395739  -3.146498706 #> [216]   6.783928757   1.098312860 -22.160474609  -2.816167884  -3.716081684 #> [221]   8.774205403  -2.178968843   0.782958690  -0.005585283  -2.923802312 #> [226]  -1.430045436  -3.266421082  -7.413799193   8.803384810   3.193392733 #> [231]   6.552308299  -3.576957870  -2.900210364   0.851863016  -4.147762312 #> [236]   7.742038570  -1.501447881  10.267382270   5.455583260  -6.641733868 #> [241]  -7.367427023  10.801038359  -7.567612905   2.531801030  -3.893743195 #> [246]   0.623788663   9.698229358   3.060268037   5.913536244 -11.374576033 #> [251]   6.770578888  -4.806976192   1.005172447  -7.759025307   2.809952061 #> [256]   5.765703310  -2.046337220   3.454956181   1.797059893  -6.820263102 #> [261]   2.852094314   2.232372715  -3.397204643   6.883657677  -1.853470422 #> [266]   0.858119403  -2.080961909  -5.325272886   8.348411771  -1.049269637 #> [271]  -7.961356400 -10.048198957  -7.611069668  -0.927034289  -8.037769563 #> [276]  -0.395791510   1.964185716   1.846717422  -2.319131312  -1.960386265 #> [281]   4.813456009   4.453877656   7.759026726   1.075918408   8.735930253 #> [286]   0.931062886  -6.492053277   3.905731110   6.103802886  -1.553315409 #> [291]  -0.364087540   6.347166038   3.008394981  -5.651857454   0.406319494 #> [296]   1.155221279  -9.081862494  -4.569513438  17.559986122   2.202330352 #> [301]  -1.269170427  -0.367685386  -3.931511724   3.117376232  -2.997817660 #> [306] -15.997444012  -2.144194495   2.087262596 -10.213796246  -0.460389924 #> [311]  -2.282396185   1.510231160   6.144987953  -1.051913357  -3.165847388 #> [316]   2.362323843   0.673403098  -0.194314949   9.826663341   6.250933707 #> [321]  -0.235076130   2.461097100  -1.767393574  -9.083814120  -9.512139613 #> [326]   0.332052131   2.907510403   6.797230637   4.517753563   6.860770097 #> [331]  -0.535968343   8.144395143   8.315853379  10.472748395  -1.241441160 #> [336]   1.208712197   4.720909904  -2.811983812  -3.180543134   5.616929260 #> [341]  -3.699626586  -1.645226149   0.073590117   5.932694905  13.347774651 #> [346]  -0.599486961   0.586742528   1.009572681  -0.943207940   2.177417986 #> [351]   3.098085788  -3.479836872   0.282540942   4.915937135  -3.702232983 #> [356]  -5.607957192  -3.714729352 -17.040753161  -3.528768581   0.541082039 #> [361]   8.076779586  -6.191258080   0.412993243   5.018532666   1.732496518 #> [366]   4.890613044  -3.824823997  -0.487435234   2.480592663   2.305343529 #> [371] -26.246442718  -5.774618924   0.493027338 -12.146505999  -7.174675073 #> [376]  -2.154139764  -7.657419221  21.074111704   6.040615383   8.467296562 #> [381] -10.336888517  -4.958491116  -3.742055183   0.987848599   2.215631522 #> [386]  -0.851264659  -0.630616202  -9.028257544  -7.573424167 -12.742297395 #> [391]  -4.117784562 -11.901375893   0.720831832  -1.403633842  -0.753280271 #> [396]   7.279393940   1.453345956  -1.800975371   3.792088067  -0.340693264 #> [401]  10.842614257   3.683774850   5.251983786   2.872680103   1.658098849 #> [406]   1.330582219   7.128499486   1.549862924   7.670151870   3.884868504 #> [411]  11.965570612   3.385952871   4.137436188   1.308094515  -2.558461227 #> [416] -14.304693302  -3.106269989  -5.609838571  -0.293261124  17.421651070 #> [421]   0.093535126   0.026595297   9.350679413   1.773045693  -2.732879905 #> [426]   8.784278133  -6.271337496  -6.343229393   5.375845601   7.263453790 #> [431]  -0.250360213   4.653760313   2.676065485  -1.467432090   7.495460612 #> [436]  -6.404623267   7.800378199   7.125463247   7.026637291  -4.402064897 #> [441]   1.594201571  -0.782053228   8.346582123   3.296803523  11.120854597 #> [446]  -1.989665587   1.101524949  -1.109564945   7.158458483 -12.397318171 #> [451]   1.969677544  -0.246975211  -6.819019339  -3.539097324  -0.255945131 #> [456]   0.108762339  -9.625363156  -7.467529543  -4.516696858  -4.277072142 #> [461] -12.507932515  -6.714436823   9.526182803  -2.970783609  -2.364822030 #> [466]  -3.770735866   1.673403803  -0.446717846  -2.617775570  14.220675868 #> [471]   4.269581680   2.564985116  -2.969110991  -2.899565420  -9.571178045 #> [476]  -2.310163663  -6.618388134   7.050040894  -2.768894832  -0.680898398 #> [481]   0.858618471   2.393017430  -0.511076204  -2.130084682  -1.058901346 #> [486]  -5.160549124  -2.821587861   5.706858994   0.904798206  -6.758830844 #> [491]   3.679593184 -10.505575302   7.180743205  -1.038313940  -4.236938656 #> [496]  13.174628062   3.802619676   1.785232749  -7.989780520   2.021917955 #> [501]   6.945228489 -15.967590464  -0.552509306  12.058523414  -0.789256094 #> [506]   2.139638364  -1.406232324   4.761861929   4.051265895   3.897435776 #> [511]  -0.474197410  10.883502127  -9.412746363 -11.176728898  -7.796425447 #> [516]   0.468028997  -1.420902629  27.885028986  -5.422118623  -4.333853988 #> [521]  15.204501679 -11.940481268  -1.922768210  -5.221617225 -17.156866508 #> [526]   3.809621210  -2.857420361 -11.493590753  -5.610248116   3.386308297 #> [531]  -7.228339769   6.263138946  11.445882539  17.502205607   3.395436537 #> [536]   4.496978998   6.888939057 residuals(object, type = \"pearson\") #>   [1] -0.2395613408 -3.2328976424 -0.8073800434 -1.0986900855  0.3045139709 #>   [6] -0.2884006003 -1.0765375327 -0.1547501250 -1.1502111470  0.3984171957 #>  [11]  0.0009240166  1.0735152964 -0.5780206744 -0.9393975831  0.1298588873 #>  [16] -0.5885158546  0.2171669446 -0.0122113525 -0.2399269752  0.7510512728 #>  [21]  0.5797146151  1.0950874316  0.3200800859  0.2274847797  0.5181604338 #>  [26]  1.4839069433 -0.1352736914 -0.2066367711 -0.4216699411  1.5025156286 #>  [31]  1.3868005721 -0.2611654261  0.9001087591  0.0207682819 -0.1921657760 #>  [36] -1.6744410682 -0.6908684691 -0.0091188820  0.1550026574 -2.2129883504 #>  [41] -1.1198863446 -0.3064026546 -1.1069549401 -0.9520971453 -0.3774077226 #>  [46]  1.3747837439 -0.7384886436  1.6443440320  0.5110991006  0.9855186723 #>  [51]  2.2605354222 -0.0349715273  0.4635728051  0.9092053518  1.3417076669 #>  [56] -2.1596665585 -0.2502346046 -1.3764452313 -0.2886643401  0.1632515159 #>  [61] -1.7153420821 -1.9035080658  1.3626924050 -0.4188262652 -1.3857808111 #>  [66] -2.5524793535  0.2273680841 -0.0347397980  1.3497939535  0.7636528569 #>  [71]  0.4021876891  1.4108818799 -2.2512851976  0.0070556201  0.0344221864 #>  [76]  0.2532050841  0.7205255825  1.6473353965  0.6617969521  0.1799630402 #>  [81] -1.2573326786 -1.5774636961  1.6588813968  0.3633617985 -0.1566081939 #>  [86]  1.1535722873 -0.6040946569  1.0896190080 -0.4536413104 -1.0324028588 #>  [91] -1.4061602817 -1.7714306394 -1.0393859625  1.3110451395 -0.6450147276 #>  [96] -1.7672533895 -0.0258086137 -0.0361899557 -0.2731408237 -0.2049728995 #> [101]  0.9637178832 -1.1069312387 -0.4217000731 -0.2717429089 -1.5320520854 #> [106]  0.6102812112  1.1119456174  1.4905732876  0.9774092675  0.4442834340 #> [111] -0.4863214523 -0.3377183713 -0.2529774810 -0.4398167544  0.8209343927 #> [116]  1.9490956593 -0.2055806185  1.0610469204 -0.5362767122 -1.0360655304 #> [121]  0.2647299052  0.4559388087  1.6340998625 -0.0724686715  0.4377708385 #> [126]  0.0940787894 -1.0027691104  1.2594269238 -1.7638201727 -0.8694206991 #> [131] -0.0570077764 -1.9414695478  0.3315769879 -1.7813524423  1.1594643621 #> [136] -0.1701128805  1.1437658039 -0.5669563073  1.6505414137 -0.7943066334 #> [141] -1.7919076827 -1.1257774216 -1.5110273758 -1.2909976896 -1.2298505876 #> [146]  0.3661392331 -0.6517146946  0.6797679920  0.6762138991  0.8785929692 #> [151]  1.8253486935  0.5789159848 -0.4660796030  0.0582868643  0.0458698622 #> [156]  0.3441276480  0.0496823046  1.7116945134  0.0716154116 -0.4686990773 #> [161] -0.1843003363  0.2996531856  0.6131126668 -0.2998077932  1.2541059023 #> [166]  0.4137739729 -0.2703903907  1.3946360054  0.1619195279 -1.1685787807 #> [171]  1.8371146990  0.8838266455  1.2595884814 -0.0652626906 -1.5182693254 #> [176] -0.2648249544  0.7661258472 -0.4629692202  0.0713127674  1.5757343502 #> [181] -0.1754524008 -1.1210905839 -1.1100911709 -0.0673997268 -0.2520328454 #> [186] -1.6739667261 -1.1666774083 -0.4219958735  0.2658185978 -0.0562561468 #> [191] -0.2080030808  1.4708279512 -0.5085736534 -1.2937251768 -0.7852249307 #> [196]  0.0326458929 -0.2590069136 -0.2545918184  1.0805068560  0.3850546492 #> [201]  1.6120363386  1.8409560848  0.2371461903  0.5546667988 -0.7592299434 #> [206] -0.7528042846  0.2432430148  1.1131446822  0.4510125934  0.4263177017 #> [211] -2.1700086192  0.5067088119 -0.1797650557 -0.1822340449 -0.4940973327 #> [216]  1.3160529992  0.2845537057 -2.2669824765 -0.5463244563 -0.9627719496 #> [221]  0.8975877207 -0.2229051620  0.1229486602 -0.0010835209 -0.7575061831 #> [226] -0.2774226634 -0.8462727304 -0.7584202573  1.3824029054  0.8273523589 #> [231]  0.6702910636 -0.5616926964 -0.5626283359  0.2207028495 -0.4243097065 #> [236]  0.7919986408 -0.3889989582  1.0503374182  0.8566948182 -1.2884678024 #> [241] -1.9087718415  1.1049296155 -1.1883486059  0.6559454881 -0.6114377619 #> [246]  0.1616127626  0.9921139504  0.4805564584  1.1472005954 -2.9469542586 #> [251]  0.6926198092 -0.7548435060  0.2604226491 -0.7937363579  0.4412491305 #> [256]  1.4937931640 -0.2093371509  0.6702466383  0.4655868747 -0.6977024279 #> [261]  0.4478667638  0.5783688342 -0.3475288111  1.3353999808 -0.4802018588 #> [266]  0.1347512101 -0.4036976594 -0.5447672276  1.3109581072 -0.2035537964 #> [271] -0.8144345176 -1.5778771157 -1.4765147781 -0.2401784153 -0.8222514667 #> [276] -0.0767818506  0.3084377315  0.3582552366 -0.6008464735 -0.3803065033 #> [281]  1.2470824973  0.6993961465  1.5052178110  0.2787516936  0.8936722317 #> [286]  0.1462055864 -1.2594304114  1.0119068082  0.9584852901 -0.4024369301 #> [291] -0.0372455955  1.2313229104  0.7794226682 -0.8875159196  0.0788242342 #> [296]  0.2992976843 -0.9290605680 -1.1838812319  1.7963595784  0.3458337835 #> [301] -0.2462136037 -0.0952608705 -0.4021876039  0.6047575802 -0.7766822687 #> [306] -1.6365139232 -0.4159645093  0.5407733334 -1.0448556503 -0.0722954162 #> [311] -0.5913290428  0.2371528666  1.1921012315 -0.2725324036 -0.4971356724 #> [316]  0.4582806645  0.1744669975 -0.0198781205  1.5430891919  1.2126542520 #> [321] -0.0609041252  0.3864681432 -0.4579008486 -0.9292602164 -1.4936992670 #> [326]  0.0521424248  0.5640445122  1.7610439030  0.7094266338  1.3309598886 #> [331] -0.0841635588  0.8331590995  2.1544925682  1.6445444703 -0.2408342453 #> [336]  0.3131562482  0.9158362154 -0.7285359600 -0.3253646719  0.8820311160 #> [341] -0.7177116444 -0.4262493998  0.0115559178  1.1509172932  1.3654568220 #> [346] -0.0941379407  0.0600228584  0.1585340454 -0.1829782834  0.5641310225 #> [351]  0.3169294122 -0.5464417046  0.0548117275  1.2736335696 -0.5813647525 #> [356] -1.0879195738 -0.9624215841 -1.7432428449 -0.6845659265  0.1401849188 #> [361]  0.8262421320 -1.2010774371  0.1069993459  0.5133881748  0.3360968725 #> [366]  1.2670725393 -0.3912736134 -0.0765423638  0.4812243068  0.5972742993 #> [371] -2.6849707310 -0.9067932563  0.0504359386 -1.9073760316 -1.3918561038 #> [376] -0.5581000410 -0.7833422116  3.3092854483  1.1718534019  2.1937288553 #> [381] -2.6781075222 -0.5072460165 -0.5876180661  0.1916383791  0.2266556978 #> [386] -0.1651416824 -0.0645110677 -1.4177148596 -1.4692117129 -1.3035174298 #> [391] -0.6466191658 -2.3088157318  0.1867549553 -0.1435895837 -0.1182882332 #> [396]  1.4121711135  0.3765365884 -0.3493814754  0.9824638777 -0.0348523970 #> [401]  1.7026248170  0.7146364760  1.3606973957  0.5572875838  0.4295844918 #> [406]  0.2089424426  1.3828982386  0.4015424514  0.7846447419  1.0065016707 #> [411]  1.2240594742  0.5316990211  0.8026448241  0.1338160574 -0.4963304733 #> [416] -1.4633481285 -0.4877801835 -1.0882845531 -0.0759788422  1.7822081153 #> [421]  0.0146878993  0.0051593732  0.9565601255  0.2784228533 -0.7080415173 #> [426]  0.8986181455 -0.9847933905 -1.2305592182  1.3927878315  0.7430401538 #> [431] -0.0393142744  0.4760725239  0.5191451935 -0.3801860600  0.7667740949 #> [436] -1.0057233670  1.5132398188  1.3823092213  1.8204791659 -0.4503244699 #> [441]  0.3092682477 -0.1228064748  0.8538425167  0.6395657029  1.1376463248 #> [446] -0.3859865656  0.2853859017 -0.1135067877  1.1240987437 -1.9467612774 #> [451]  0.3093001178 -0.0479121287 -0.6975751929 -0.5557474232 -0.0496522545 #> [456]  0.0281784250 -1.5114788550 -1.4486686114 -0.8762197629 -1.1081147928 #> [461] -1.2795422629 -1.3025718628  0.9745138524 -0.4665046434 -0.4587653020 #> [466] -0.9769318949  0.2627760037 -0.0866613407 -0.6782199917  2.2330846670 #> [471]  0.8282804812  0.6645429059 -0.4662419908 -0.5625032196 -0.9791167965 #> [476] -0.3627669389 -1.2839388303  0.7212083426 -0.7173723569 -0.1069220469 #> [481]  0.0878353493  0.3757775355 -0.1324109304 -0.2179043876 -0.1662801672 #> [486] -1.0011243330 -0.7310242017  0.8961528576  0.2344174340 -0.6914180023 #> [491]  0.9533184156 -1.0747041990  1.1275981322 -0.2014284382 -0.8219478749 #> [496]  1.3477441922  0.7376918609  0.4625226679 -0.8173422614  0.3175034734 #> [501]  1.3473444535 -1.6334599512 -0.0867610000  1.8935600524 -0.2044824880 #> [506]  0.3359892081 -0.2728030222  1.2337153709  0.6361736837  0.7560857764 #> [511] -0.1228562780  1.1133655321 -1.4780914615 -1.1433621798 -1.2242792315 #> [516]  0.0907956122 -0.3681310883  2.8525955866 -1.0518676907 -1.1228259787 #> [521]  1.5553971419 -1.8750237951 -0.3730087623 -1.3528299493 -1.7551210618 #> [526]  0.7390501284 -0.7403077773 -1.8048482025 -1.0883640031  0.3464141317 #> [531] -0.7394480434  0.9835059653  2.2204519805  1.7904487206  0.5331882492 #> [536]  0.8723945829  0.7047278725 residuals(object, type = \"normalized\") #>   [1] -0.2395613408 -3.2331297472 -0.8073800434 -0.9954606428  0.4323839479 #>   [6] -0.2884006003 -1.0453219149 -0.1547501250 -1.2043371512  0.5171524003 #>  [11]  0.0009240166  1.0960105881 -0.5698974273 -0.9393975831  0.1298588873 #>  [16] -0.7182164725  0.2384382028 -0.0122113525 -0.2610103997  0.7859763110 #>  [21]  0.6325743182  1.0950874316 -0.1782248309  0.0027778435  0.5181604338 #>  [26]  1.4839069433 -0.8746381857 -0.4675512449 -0.7174517088  1.5025156286 #>  [31]  0.8099093909 -0.6254223667  0.9001087591 -0.0008984953 -0.1921657760 #>  [36] -1.6744410682 -0.6507515544 -0.0091188820  0.1581043716 -2.2129883504 #>  [41] -0.6594254412 -0.3064026546 -1.0822020259 -0.8424181978 -0.3774077226 #>  [46]  1.7139041454 -0.7772005644  1.6463084891  0.5110991006  0.9230554915 #>  [51]  2.2605354222 -0.3549422277  0.1308906429  0.9092053518  1.0492579025 #>  [56] -2.4584698201 -0.5812031216 -1.3764452313  0.3504785963  0.4314962476 #>  [61] -1.7153420821 -1.2810001583  1.8236722229  0.0715616918 -1.3857808111 #>  [66] -2.1639369120  0.6456528830  0.4191619146  1.3497939535  0.1910514929 #>  [71]  0.1208084919  1.1410898907 -2.2512851976  0.4724749199  0.5406898973 #>  [76]  0.2532050841  0.6781773409  1.5930363601  0.6196782911  0.1799630402 #>  [81] -1.4868659312 -1.5663243894  1.6588813968 -0.4051852902 -0.4799804012 #>  [86]  0.8311851349 -0.6040946569  1.2374930398 -0.4536413104 -0.9572455387 #>  [91] -1.4061602817 -1.2849108996 -0.6768449790  1.3110451395 -1.3574792727 #>  [96] -1.9999104669 -0.2800871704 -0.0361899557 -0.2862667112 -0.1846429500 #> [101]  0.9637178832 -1.2638656695 -0.4217000731 -0.0965898022 -1.4741532671 #> [106]  0.6898840458  1.1119456174  1.2922687379  0.9774092675  0.2516724271 #> [111] -0.7082200987 -0.3377183713 -0.1166907466 -0.3731545408  0.8209343927 #> [116]  1.8524082577 -0.3372680531  1.0610469204 -0.7827609120 -1.0360655304 #> [121]  0.8001476010  0.6341864978  1.8714130557 -0.0724686715  0.4377708385 #> [126] -0.1089411775 -1.1099739945  1.1758782762 -1.7638201727 -0.1067037610 #> [131]  0.3130573937 -1.9414695478  1.3163486012 -1.4969349345  1.1594643621 #> [136] -0.3357445190  1.1437658039 -1.1889937766  1.5208457176 -0.7943066334 #> [141] -1.6062685960 -0.8934062775 -1.5110273758 -0.6991549357 -0.8852334540 #> [146]  0.3661392331 -0.7139237314  0.6797679920  0.4207168615  0.8785929692 #> [151]  1.6023486737  0.3168190038 -0.4660796030  0.1623115575  0.0458698622 #> [156]  0.3410648432  0.0422072447  1.7116945134 -0.1696931130 -0.4686990773 #> [161] -0.0913296654  0.4082637446  0.6131126668 -0.6327863750  1.1927622283 #> [166]  0.3569965516 -0.2703903907  1.6837715932  0.1219211453 -1.1685787807 #> [171]  1.8371146990  0.6328632682  0.9959931647 -0.0652626906 -1.6575475349 #> [176] -0.1550597630  0.7661258472 -0.8890052875 -0.0338127778  1.5019798411 #> [181] -0.1754524008 -1.1618320827 -1.0313960673  0.0164578763 -0.2520328454 #> [186] -1.7396534913 -1.0397239721 -0.2950816591  0.2658185978 -0.1923111162 #> [191] -0.2080030808  1.7381073902 -0.5785095967 -1.4028352650 -0.7852249307 #> [196]  0.4194999166 -0.1183565184 -0.2545918184  1.3265273454  0.3692022164 #> [201]  1.6374814370  1.8409560848 -0.6344756466  0.2232390445 -0.7592299434 #> [206] -0.7347417518  0.2432430148  1.0863976956  0.4304413158  0.4263177017 #> [211] -2.2518706680  0.4560333037 -0.1797650557 -0.1470162795 -0.4940973327 #> [216]  1.7054960786  0.2938839093 -2.3154917268 -0.5463244563 -0.8951019167 #> [221]  0.9925999359 -0.2229051620  0.1229486602 -0.0612021985 -0.7967121511 #> [226] -0.2774226634 -0.8154646516 -0.7225450847  1.3824029054  0.5591371151 #> [231]  0.3934040002 -0.5616926964 -0.3519474411  0.3625570263 -0.2810536359 #> [236]  0.7919986408 -0.3889989582  1.0600081474  0.8566948182 -1.8517422520 #> [241] -2.0217800693  1.0105044669 -1.1883486059  0.9154018423 -0.6114377619 #> [246]  0.2913931239  1.1566823849  0.4805564584  1.0420001287 -3.1745989197 #> [251]  0.4641937103 -0.7548435060  0.2604226491 -0.8002368586  0.4412491305 #> [256]  1.4341686332 -0.2824018710  0.6702466383  0.3754499376 -0.8073116407 #> [261]  0.4478667638  0.4980312747 -0.4444347289  1.3353999808 -0.6737937699 #> [266]  0.1347512101 -0.5149546555 -0.5568463719  1.3109581072 -0.8662185201 #> [271] -1.0713216894 -1.5778771157 -0.8729604050  0.1318923833 -0.4385695989 #> [276] -0.0767818506  0.3084377315  0.2481228095 -0.6929098033 -0.3803065033 #> [281]  1.3132590580  0.6993961465  1.3335801911  0.0625625597  0.6819756719 #> [286]  0.1462055864 -1.4727271204  1.0906691369  0.9584852901 -0.6090304149 #> [291] -0.2616325947  1.2313229104  0.6130752839 -0.8875159196  0.5207990608 #> [296]  0.4595022815 -0.7786385448 -1.1838812319  1.8253856849  0.3458337835 #> [301] -0.4427246561 -0.1432139494 -0.4651685352  0.6047575802 -0.8699157215 #> [306] -1.7426052155 -0.4159645093  0.6049663945 -1.0448556503 -0.0722954162 #> [311] -0.5888842112  0.2371528666  1.2107377605 -0.3984704353 -0.4971356724 #> [316]  0.7525263117  0.2374861472  0.0485866424  1.5430891919  0.5963358156 #> [321] -0.4165254171  0.3864681432 -0.5474483920 -1.0479711477 -1.4936992670 #> [326]  0.0521424248  0.6021738509  1.7554016312  0.7094266338  1.1347868613 #> [331] -0.0841635588  0.8331590995  2.1544925682  1.6445444703 -1.0704845256 #> [336]  0.0422949184  0.9158362154 -0.8652747275 -0.4634570399  0.8820311160 #> [341] -1.2290194130 -0.5469180840  0.0115559178  1.2749988739  1.3196411685 #> [346] -0.0941379407  0.0821894630  0.1585340454 -0.2809634145  0.5605975850 #> [351]  0.3210435388 -0.5464417046  0.0548117275  1.2785517452 -0.5813647525 #> [356] -0.9268450187 -0.8100221758 -1.6228924603 -0.6845659265  0.2383717814 #> [361]  0.9373665455 -1.2010774371  0.2778870068  0.6983516870  0.3360968725 #> [366]  1.2321538332 -0.4502233484 -0.0765423638  0.5728145982  0.5933717589 #> [371] -2.7595058681 -0.9067932563  0.2513154764 -1.9073760316 -0.6179707379 #> [376] -0.1399576256 -0.3481875728  3.3092854483 -0.3109331235  1.5769403726 #> [381] -2.6781075222 -0.4429096259 -0.5876180661  0.4999842463  0.3313270198 #> [386] -0.1651416824 -0.0404624874 -1.4177148596 -0.9429902703 -0.9663561862 #> [391] -0.6466191658 -2.2535063005  0.4563135780  0.1453231304 -0.1182882332 #> [396]  1.6290602024  0.3146280392 -0.3493814754  1.0416358515  0.0136480171 #> [401]  1.7026248170 -0.0356641510  1.0414162785  0.5572875838  0.3550610267 #> [406]  0.2089424426  1.4368057614  0.2836747953  0.6772658681  1.0065016707 #> [411]  1.2001797239  0.5316990211  0.6336526750 -0.0190973637 -0.4963304733 #> [416] -1.4052713714 -0.4877801835 -0.9729185834  0.0800046880  1.9984809435 #> [421]  0.0146878993 -0.0014265194  0.9781840852  0.2784228533 -0.7805456237 #> [426]  0.8431370787 -0.9847933905 -0.8886963475  1.6803385316  1.0750066150 #> [431] -0.0393142744  0.4961341049  0.5191451935 -0.4573708258  0.6990303540 #> [436] -1.0057233670  2.1745715012  1.3823092213  1.6431382695 -0.6682482269 #> [441]  0.3092682477 -0.1228064748  0.9013385029  0.6395657029  1.0544417016 #> [446] -0.3859865656  0.3428001042 -0.0580379891  1.1240987437 -1.9467612774 #> [451]  0.3093001178 -0.2042447739 -0.7712826657 -0.5557474232  0.2159453336 #> [456]  0.1312795882 -1.5114788550 -0.8743767375 -0.8762197629 -0.9952456694 #> [461] -1.1590765928 -1.3025718628  1.1807930021 -0.4665046434 -0.2828278537 #> [466] -0.8862018395  0.2627760037 -0.2246585728 -0.7350270917  2.2330846670 #> [471] -0.1680653380  0.2272482221 -0.4662419908 -0.3983863095 -0.8770483090 #> [476] -0.3627669389 -1.2516292128  0.8971122637 -0.7173723569 -0.1069220469 #> [481]  0.1134832246  0.3757775355 -0.2128705850 -0.3102625447 -0.1662801672 #> [486] -1.0328202284 -0.6530835138  0.8961528576  0.0541645528 -0.9043953545 #> [491]  0.9533184156 -1.0979696605  1.1275981322 -0.7743775123 -0.8219478749 #> [496]  1.4861078517  0.7376918609  0.3628190010 -0.9383643181  0.3175034734 #> [501]  1.3442690156 -1.8287202394 -0.0867610000  1.8935600524 -0.6001433545 #> [506]  0.3359892081 -0.4675070243  1.2196363492  0.6361736837  0.5308643245 #> [511] -0.2883264347  0.9624697278 -1.4780914615 -0.8452842468 -1.2242792315 #> [516]  0.6984536826 -0.1638332534  3.1504729615 -1.0518676907 -0.9852678720 #> [521]  1.7339047855 -1.8750237951  0.4999242945 -1.0247546509 -1.4427773430 #> [526]  0.7390501284 -0.8521673979 -1.8048482025 -0.3303034285  0.7739312929 #> [531] -0.7394480434  0.9835059653  1.9907888113  1.4970706001  0.5331882492 #> [536]  0.7105372605  0.5615316312"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/parsnip_add_mmrm.html","id":null,"dir":"Reference","previous_headings":"","what":"Register mmrm For Use With tidymodels — parsnip_add_mmrm","title":"Register mmrm For Use With tidymodels — parsnip_add_mmrm","text":"Register mmrm Use tidymodels","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/parsnip_add_mmrm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register mmrm For Use With tidymodels — parsnip_add_mmrm","text":"","code":"parsnip_add_mmrm(quietly = FALSE)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/parsnip_add_mmrm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register mmrm For Use With tidymodels — parsnip_add_mmrm","text":"quietly logical: progress error messages suppressed?","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/parsnip_add_mmrm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register mmrm For Use With tidymodels — parsnip_add_mmrm","text":"logical value indicating whether registration successful.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/parsnip_add_mmrm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Register mmrm For Use With tidymodels — parsnip_add_mmrm","text":"can use parsnip::show_model_info(\"linear_reg\") check registration parsnip thus wider tidymodels ecosystem.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/position_symbol.html","id":null,"dir":"Reference","previous_headings":"","what":"Search For the Position of a Symbol — position_symbol","title":"Search For the Position of a Symbol — position_symbol","text":"thin wrapper around base::Position() search list language objects, produced flatten_call() flatten_expr(), presence specific symbol.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/position_symbol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search For the Position of a Symbol — position_symbol","text":"","code":"position_symbol(x, sym, ...)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/position_symbol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search For the Position of a Symbol — position_symbol","text":"x (list language) list language objects search specific symbol. sym (name symbol character) symbol search x. ... Additional arguments passed Position().","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/position_symbol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search For the Position of a Symbol — position_symbol","text":"position symbol found, nomatch value otherwise.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/print.cov_struct.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a Covariance Structure Object — print.cov_struct","title":"Print a Covariance Structure Object — print.cov_struct","text":"Print Covariance Structure Object","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/print.cov_struct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a Covariance Structure Object — print.cov_struct","text":"","code":"# S3 method for cov_struct print(x, ...)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/print.cov_struct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a Covariance Structure Object — print.cov_struct","text":"x (cov_struct) covariance structure object. ... Additional arguments unused.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/print.cov_struct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a Covariance Structure Object — print.cov_struct","text":"x invisibly.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. generics augment, glance, tidy","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/refit_multiple_optimizers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Refitting MMRM with Multiple Optimizers — refit_multiple_optimizers","text":"","code":"refit_multiple_optimizers(fit, ..., control = mmrm_control(...))"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/refit_multiple_optimizers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Refitting MMRM with Multiple Optimizers — refit_multiple_optimizers","text":"fit (mmrm_fit) original model fit fit_single_optimizer(). ... Additional arguments passed mmrm_control(). control (mmrm_control) object.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/refit_multiple_optimizers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Refitting MMRM with Multiple Optimizers — refit_multiple_optimizers","text":"best (terms log likelihood) fit converged.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/refit_multiple_optimizers.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Refitting MMRM with Multiple Optimizers — refit_multiple_optimizers","text":"Windows, parallel computations currently implemented.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/refit_multiple_optimizers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Refitting MMRM with Multiple Optimizers — refit_multiple_optimizers","text":"","code":"fit <- fit_single_optimizer(   formula = FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data,   weights = rep(1, nrow(fev_data)),   optimizer = \"nlminb\" ) best_fit <- refit_multiple_optimizers(fit)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/register_on_load.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper Function for Registering Functionality With Suggests Packages — register_on_load","title":"Helper Function for Registering Functionality With Suggests Packages — register_on_load","text":"Helper Function Registering Functionality Suggests Packages","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/register_on_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper Function for Registering Functionality With Suggests Packages — register_on_load","text":"","code":"register_on_load(   pkg,   ver = c(NA_character_, NA_character_),   callback,   message = NULL )"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/register_on_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper Function for Registering Functionality With Suggests Packages — register_on_load","text":"pkg (string) package name. ver (character) length 2 whose elements can provided numeric_version(), representing minimum maximum (inclusive) version requirement interoperability. NA, version requirement imposed. Defaults version requirement. callback (function(...) ) callback execute upon package load. Note arguments passed function. necessary data must provided upon construction. message (NULL string) optional message print callback executed upon successful registration.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/register_on_load.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper Function for Registering Functionality With Suggests Packages — register_on_load","text":"logical (invisibly) indicating whether registration successful. , onLoad hook set next time package loaded.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/tmb_cov_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce A Covariance Identifier Passing to TMB — tmb_cov_type","title":"Produce A Covariance Identifier Passing to TMB — tmb_cov_type","text":"Produce Covariance Identifier Passing TMB","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/tmb_cov_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce A Covariance Identifier Passing to TMB — tmb_cov_type","text":"","code":"tmb_cov_type(cov)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/tmb_cov_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce A Covariance Identifier Passing to TMB — tmb_cov_type","text":"cov (cov_struct) covariance structure object.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/tmb_cov_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce A Covariance Identifier Passing to TMB — tmb_cov_type","text":"string used method dispatch passed TMB.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/validate_cov_struct.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Covariance Structure Data — validate_cov_struct","title":"Validate Covariance Structure Data — validate_cov_struct","text":"Run checks relational integrity covariance definition","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/validate_cov_struct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Covariance Structure Data — validate_cov_struct","text":"","code":"validate_cov_struct(x)"},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/validate_cov_struct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Covariance Structure Data — validate_cov_struct","text":"x (cov_struct) covariance structure object.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/reference/validate_cov_struct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Covariance Structure Data — validate_cov_struct","text":"x successful, error thrown otherwise.","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/latest-tag/news/index.html","id":"miscellaneous-0-3-7","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"mmrm 0.3.7","text":"documentation mmrm_control(), allowed vcov definition corrected “Empirical-Jackknife” (CR3), “Empirical-Bias-Reduced” (CR2). Fix compiler warning related missing format specification error message function call.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/news/index.html","id":"mmrm-036","dir":"Changelog","previous_headings":"","what":"mmrm 0.3.6","title":"mmrm 0.3.6","text":"CRAN release: 2023-11-17","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/news/index.html","id":"new-features-0-3-6","dir":"Changelog","previous_headings":"","what":"New Features","title":"mmrm 0.3.6","text":"argument method mmrm() now specifies method used degrees freedom adjustment. Add empirical, empirical Jackknife empirical bias-reduced adjusted coefficients covariance estimates, can specified via new vcov argument mmrm(). Add residual -within degrees freedom methods. Add Kenward-Roger support spatial covariance structures. Add model.matrix() terms() methods assist post-processing. Add predict() method obtain conditional mean estimates prediction intervals. Add simulate() method simulate observations predictive distribution. Add residuals() method obtain raw, Pearson normalized residuals. Add tidy(), glance() augment() methods tidy fit results summary tables. Add tidymodels framework support via parsnip interface. Add argument covariance mmrm() allow easier programmatic access specifying model’s covariance structure expose covariance customization tidymodels interface.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/news/index.html","id":"bug-fixes-0-3-6","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"mmrm 0.3.6","text":"Previously mmrm() follows global option na.action set \"na.omit\" assertion fail. now fixed hence NA values always removed prior model fitting, independent global na.action option. Previously model.frame() call mmrm object transformed terms, new data, e.g. model.frame(mmrm(Y ~ log(X) + ar1(VISIT|ID), data = new_data), fail. now fixed. Previously mmrm() always required data argument. Now fitting mmrm can also use environment variables instead requiring data argument. (Note fit_mmrm affected.) Previously emmeans() failed using transformed terms including visit variable model formula. now fixed. Previously mmrm() might provide non-finite values Jacobian calculations, leading errors Satterthwaite degrees freedom calculations. raise error now thus alert user model fit successful.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/news/index.html","id":"miscellaneous-0-3-6","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"mmrm 0.3.6","text":"Use automatic differentiation calculate Satterthwaite adjusted degrees freedom, resulting 10-fold speed-Satterthwaite calculations initial model fit. Add interactive confirmation step number visit levels large non-spatial covariance structures. Use options(mmrm.max_visits = ) specify maximum number visits allowed non-interactive mode. Removed free_cores() favor parallelly::availableCores(omit = 1). model.frame() method updated: full argument deprecated include argument can used instead; default relevant variables returned. Furthermore, returns data.frame size number observations utilized model combinations include argument na.action= \"na.omit\". Overall, seven vignettes added package. vignettes slightly different look now reduce size overall R package CRAN. used optimizer now available via component(., \"optimizer\") instead previously attr(., \"optimizer\").","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/news/index.html","id":"mmrm-022","dir":"Changelog","previous_headings":"","what":"mmrm 0.2.2","title":"mmrm 0.2.2","text":"CRAN release: 2022-12-20","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/news/index.html","id":"new-features-0-2-2","dir":"Changelog","previous_headings":"","what":"New Features","title":"mmrm 0.2.2","text":"Add support Kenward-Roger adjusted coefficients covariance matrix degrees freedom mmrm function call argument method. Options “Kenward-Roger”, “Kenward-Roger-Linear” “Satterthwaite” (still default). Subsequent methods calls respect initial choice, e.g. vcov(fit) return adjusted coefficients covariance matrix Kenward-Roger method used. Update mmrm arguments allow users fine-grained control, e.g. mmrm(..., start = start, optimizer = c(\"BFGS\", \"nlminb\")) set starting values variance estimates choose available optimizers. arguments passed new function mmrm_control. Add new argument drop_visit_levels allow users keep levels visits, even observed data. Dropping unobserved levels done silently previously, now message given. See ?mmrm_control details.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/news/index.html","id":"bug-fixes-0-2-2","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"mmrm 0.2.2","text":"Previously duplicate time points present single subject, lead segmentation faults total number unique time points available subject. Now checked duplicate time points per subject, explained also function documentation introduction vignette. Previously mmrm calls, weights object environment formula defined replaced weights used internally. Now behavior removed variable weights e.g. global environment longer replaced.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/news/index.html","id":"miscellaneous-0-2-2","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"mmrm 0.2.2","text":"Deprecated free_cores() favor parallelly::availableCores(omit = 1). Deprecated optimizer = \"automatic\" favor specifying optimizer. default, remaining optimizers tried first optimizer fails reach convergence.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/news/index.html","id":"mmrm-015","dir":"Changelog","previous_headings":"","what":"mmrm 0.1.5","title":"mmrm 0.1.5","text":"CRAN release: 2022-10-18 First CRAN version package. package fits mixed models repeated measures (MMRM) based marginal linear model without random effects. motivation package fast, reliable (terms convergence behavior) feature complete implementation MMRM R.","code":""},{"path":"https://openpharma.github.io/mmrm/latest-tag/news/index.html","id":"new-features-0-1-5","dir":"Changelog","previous_headings":"","what":"New Features","title":"mmrm 0.1.5","text":"Currently 10 covariance structures supported (unstructured; well homogeneous heterogeneous versions Toeplitz, auto-regressive order one, ante-dependence, compound symmetry; spatial exponential). Fast C++ implementation Maximum Likelihood (ML) Restricted Maximum Likelihood (REML) estimation. Currently Satterthwaite adjusted degrees freedom calculation supported. Interface emmeans package computing estimated marginal means (also called least-square means) coefficients. Multiple optimizers run reach convergence many cases possible. Flexible formula based model specification support standard S3 methods summary, logLik, etc.","code":""}]
