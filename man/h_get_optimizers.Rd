% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{h_get_optimizers}
\alias{h_get_optimizers}
\title{Obtain Optimizer according to Optimizer String Value}
\usage{
h_get_optimizers(
  optimizer = c("L-BFGS-B", "BFGS", "CG", "nlminb"),
  optimizer_fun = h_optimizer_fun(optimizer),
  optimizer_args = list(),
  optimizer_control = list()
)
}
\arguments{
\item{optimizer}{(\code{character})\cr optimizer character. Only "L-BFGS-B", "BFGS", "CG" and "nlminb" supported.}

\item{optimizer_fun}{(\code{function})\cr or (\code{list})\cr of (\code{function})x\cr.}

\item{optimizer_args}{(\code{list})\cr of additional arguments for \code{optimizer_fun}.}

\item{optimizer_control}{(\code{list})\cr of control argument. Will serve as \code{control} in \code{optimizer_fun}.}
}
\value{
Named \code{list} of optimizers created by \code{\link[=h_optimizer_fun]{h_optimizer_fun()}}.
}
\description{
This function creates optimizer functions with arguments.
}
\details{
In this function, the final object to use is \code{optimizer_fun}, and \code{optimizer} is a shortcut to create
multiple \code{optimizer_fun}. If you want to use your own optimizer function, make sure that there are three arguments,
parameter(start value), objective function and gradient function are sequentially in the function arguments.
If there are other named arguments in front of these, make sure they are correctly specified through
\code{optimizer_args}. If hessian function can be applied, please make sure its argument name is \code{hessian} and
please add attribute \code{use_hessian = TRUE} to the function, using \verb{attr(fun, "use_hessian) <- TRUE}
If \code{optimizer_fun} is not provided, it will be created using the \code{optimizer} character. Other arguments should
go into \code{optimizer_args}.
Allowed are "L-BFGS-B", "BFGS", "CG"(using \code{\link[stats:optim]{stats::optim()}} with corresponding method) and
"nlminb"(using \code{\link[stats:nlminb]{stats::nlminb()}}).
}
\keyword{internal}
